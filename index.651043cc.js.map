{"mappings":"AAAA,MAAMA,EAAgB,CACrB,4VAMA,+RAKA,kNAIA,6MAKA,mRAKA,0IC1BKC,EAAiB,CACtB,6GAEA,uUAEA,6LAEA,+PAEA,8QAEA,iaAEA,8NCbKC,EAAeC,GAAkBC,IACtC,MAAMC,EAAUC,SAASC,cAAcJ,GAEvC,OAAOC,EAAQI,QAAO,CAACC,EAAmBC,KACzCD,EAAKE,UAAUC,IAAIF,GACZD,IACLJ,IAGEQ,EACJC,GAAoCL,GAC7BK,EAASN,QACf,CAACH,EAAyCU,KACzC,KAAIA,EAAKC,OAAS,GAGlB,OADIX,GAASA,EAAQY,aAAaF,EAAK,GAAIA,EAAK,IACzCV,IAERI,GAIGS,EACJC,GAAyCV,GAClCU,EAAcX,QACpB,CAACH,EAAyCU,KACzC,KAAIA,EAAKC,OAAS,GAGlB,OADIX,GAASA,EAAQe,MAAMC,YAAYN,EAAK,GAAIA,EAAK,IAC9CV,IAERI,GAIGa,EAAuBC,GAAuBd,IAC/CA,GAAMA,EAAKW,MAAMI,eAAeD,GAC7Bd,GAGFgB,EAAiBC,GAAkBjB,IACxC,MAAMkB,EAAWrB,SAASsB,eAAeF,GAEzC,OADIjB,GAAMA,EAAKoB,YAAYF,GACpBlB,GAGFqB,EACJC,GAAgCC,IAC5BA,GAAWD,GAAQA,EAAOF,YAAYG,IAgBtCC,EACJC,GAEAC,GAWA1B,IACIA,GAAMA,EAAK2B,iBAAiBF,EAAKC,GAC9B1B,GAGH4B,EACJH,GAEAC,GAWA1B,IACIA,GAAMA,EAAK6B,oBAAoBJ,EAAKC,GACjC1B,GAGH8B,EACL,IAAOC,IACNC,GACAD,EAAMhC,QAAO,CAACkC,EAAKC,IAASA,EAAKD,IAAMD,GC1DzCG,eAAeC,GAAuBC,cACrCA,EAAaC,QACbA,EAAOC,MACPA,EAAQ,MAlBTJ,eACCK,EACAC,GAEA,IAAK,MAAOC,EAAOC,KAAQH,EAAII,gBACxBH,EAASE,EAAKD,EAAOF,GAe5BK,CAAaP,GAASH,MAAOW,EAAgBJ,KAC5C,MAAMK,EAAiBtD,EAAY,IAAZ,CAAiB,CAAC,oBACzC4B,EAAmBgB,EAAnB,CAAkCU,SA7CpCZ,gBAAgCW,OAC/BA,EAAME,UACNA,EAASC,WACTA,EAAUV,MACVA,EAAQ,KAER,OAAO,IAAIW,SAASC,IACnB,IAAIC,EAAI,EACR,MAAMC,EAAWC,aAAY,K,IASPC,EARjBH,GAAKN,EAAOvC,QACfiD,cAAcH,GACdF,MAEIH,GAAWhC,EAAc8B,EAAOM,GAArB,CAAyBJ,GACxCI,GAAK,GAGN,MAAMK,EAAuC,QAAxBF,EAAAN,aAAA,EAAAA,EAAYQ,oBAAY,IAAxBF,IAA4B,EACjDN,WAAYS,OAAO,CAAEC,IAAKF,EAAcG,KAAM,EAAGC,SAAU,aACzDtB,MA4BGuB,CAAiB,C,OACtBhB,EACAE,UAAWD,EACXE,WAAYZ,E,MACZE,I,IAOoBgB,EAHjBb,EADWJ,EAAQ/B,OACF,GACpBuB,EAAKT,EAAmBgB,GAAxB,CAAwC5C,EAAY,KAAZ,CAAkB,CAAC,WAE5D,MAAMgE,EAA0C,QAA3BF,EAAAlB,aAAA,EAAAA,EAAeoB,oBAAY,IAA3BF,IAA+B,EACpDlB,WAAeqB,OAAO,CAAEC,IAAKF,EAAcG,KAAM,EAAGC,SAAU,cChEhE,MAAME,EAAyB,SAAUC,GAExCC,OAAOC,SAAS,EAAG,GAEnB,MAAMC,EAA2BtE,SAASuE,cAAc,SAElDC,EAAsB5E,EAAY,MAAZ,CAAmB,CAAC,yBAChD4B,EAAmB8C,EAAnB,CAAyBE,GAEzB7E,EAAe8E,KAAK,kCAAkCN,MAEtD5B,EAAuB,CACtBC,cAAegC,EACf/B,QAAS9C,EACT+C,MAAO,MCXHgC,EAAiC,WACtC,MAAMJ,EAA2BtE,SAASuE,cAAc,SAElDI,EAAsB/E,EAAY,MAAZ,CAAmB,CAAC,yBAChD4B,EAAmB8C,EAAnB,CAAyBK,GAEzB,MAAMC,EAAqBhF,EAAY,MAAZ,CAAmB,CAAC,wBAC/C4B,EAAmBmD,EAAnB,CAAwCC,GAExC,MAAMC,EAAuBjF,EAAY,MAAZ,CAAmB,CAAC,0BACjD4B,EAAmBoD,EAAnB,CAAuCC,GAEvC,IAAK,IAAItB,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAC5B,IAAK,IAAIuB,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAE5B7C,EACC1B,EAAmB,CAAC,CAAC,kBAAmB,GAAGuE,KAAKvB,OAChD/B,EAAmBqD,GAFpB,CAGEjF,EAAY,MAAZ,CAAmB,CAAC,sBCzBnBmF,EAAwB,SAAmCC,GAChE,MAAMC,EAAcC,KAAKC,YAEL,WAAhBF,GACHC,KAAKC,YAAc,GACnBD,KAAKC,YAAc,UACO,WAAhBF,IACVC,KAAKC,YAAc,GACnBD,KAAKC,YAAc,WCRfC,EAA6B,SAAUC,G,IAE3C3B,EADD,MAAM4B,EAA8BC,KAAKC,MACC,QAAzC9B,EAAA+B,aAAaC,QAAQ,4BAAoB,IAAzChC,IAA6C,IAI9C2B,EAAmBM,SAASC,GAAUN,EAAkBb,KAAKmB,KAE7DH,aAAaI,QAAQ,oBAAqBN,KAAKO,UAAUR,KCRpDS,EAAY,CACjBC,MAAO,CACNC,kBAAmB,CAClB,gBACA,WACA,aACA,SACA,SACA,eACA,YACA,YACA,UACA,UACA,aACA,SACA,WACA,eACA,SACA,UACA,UACA,mBACA,YACA,eACA,UACA,SACA,WACA,SACA,UACA,cACA,UACA,UACA,SACA,UACA,UACA,qBACA,SACA,YACA,WACA,YACA,OACA,WACA,eACA,aACA,aAEDC,SAAU,CACT,QACA,WACA,UACA,OACA,SACA,WACA,OACA,QACA,YACA,WACA,YACA,OACA,UACA,OACA,SACA,UACA,WACA,SACA,SACA,QACA,WACA,WACA,YACA,OACA,OACA,SACA,UACA,OACA,OACA,MACA,QACA,OACA,WACA,WACA,UACA,SACA,SACA,QACA,YACA,WACA,QAEDC,YAAa,CACZ,QACA,SACA,SACA,UACA,UACA,SACA,SACA,UACA,OACA,UACA,OACA,OACA,gBACA,SACA,UACA,OACA,aACA,UACA,SACA,SACA,SACA,aACA,UACA,QACA,MACA,UACA,QACA,SACA,QACA,OACA,cACA,UACA,QACA,SACA,WACA,SACA,QACA,QACA,QACA,WACA,SACA,YACA,QACA,YACA,sBACA,cACA,QACA,UACA,UACA,UACA,YACA,SACA,aACA,SACA,UACA,aACA,QACA,cACA,qBACA,aACA,oBACA,aACA,eACA,aACA,iBACA,aACA,yBACA,SACA,UACA,YAEDC,WAAY,CACX,WACA,QACA,WACA,SACA,QACA,YACA,SACA,WACA,UACA,SACA,SACA,QACA,QACA,UACA,SACA,UACA,QACA,SACA,UACA,WACA,WACA,SACA,SACA,SACA,QACA,UACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,YACA,UACA,SACA,UACA,WACA,SACA,SACA,SAEDC,SAAU,CACT,aACA,UACA,WACA,cACA,UACA,YACA,YACA,WACA,QACA,SACA,SACA,OACA,OACA,WACA,YACA,UACA,YACA,WACA,UACA,WACA,SACA,OACA,UACA,oBACA,SACA,WACA,gBACA,iBACA,gBACA,oBACA,oBACA,qBACA,mBACA,YACA,SACA,aAIFC,UAAW,CACVL,kBAAmB,CAClB,WACA,YACA,eACA,aACA,eACA,iBACA,SACA,UACA,aACA,UACA,cACA,kBACA,UACA,iBACA,SACA,UACA,UACA,aACA,YACA,gBACA,aACA,UACA,iBACA,eACA,aACA,cACA,cACA,eACA,aACA,iBACA,kBACA,eACA,iBACA,gBACA,YACA,UACA,SACA,aACA,WACA,WACA,cACA,UACA,UACA,YACA,eAEDC,SAAU,CACT,cACA,WACA,UACA,aACA,aACA,aACA,eACA,YACA,SACA,aACA,UACA,QACA,WACA,YACA,YACA,SACA,SACA,WACA,cACA,QACA,UACA,aACA,aACA,WACA,YACA,SACA,cACA,SACA,WACA,OACA,SACA,cACA,WACA,YACA,QACA,UACA,QACA,WACA,SACA,YACA,OACA,SACA,YACA,QACA,QAEDC,YAAa,CACZ,iBACA,gBACA,gBACA,iBACA,eACA,iBACA,gBACA,oBACA,qBACA,oBACA,mBACA,kBACA,oBACA,oBACA,mBACA,WACA,UACA,UACA,YACA,WACA,UACA,SACA,UACA,UACA,aACA,WACA,UACA,SACA,UACA,UACA,OACA,YACA,YACA,UACA,QACA,WACA,WACA,YACA,YACA,WACA,QACA,SACA,cACA,SACA,aACA,YACA,UACA,SACA,WACA,cACA,cACA,cAC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","sources":["src/data/greetingsText.ts","src/data/preBattleTexts.ts","src/functions/elementCreators.ts","src/functions/createTypewriterEffect.ts","src/functions/renderPlayerInfoScreen.ts","src/functions/renderPlayerShipPlacementBoard.ts","src/events/handleAxisToggleClick.ts","src/functions/accumulatePlayerShipCoords.ts","src/data/shipNames.ts","src/functions/populateCompShipsCoords.ts","src/functions/returnRandomOrientation.ts","src/functions/renderCompShipsOnBoard.ts","src/functions/placeCompShipsOnBoard.ts","src/functions/renderCompBoard.ts","src/functions/renderStarsAndShipsInPlayerBoard.ts","src/functions/renderPlayerBoard.ts","src/functions/returnPlayerCompShipsCoords.ts","src/functions/shuffleArray.ts","src/functions/renderTacticalOverview.ts","src/functions/preventClicksAfterWin.ts","src/functions/restartGame.ts","src/functions/announceGameWinner.ts","src/data/battleTexts.ts","src/functions/tossCoin.ts","src/functions/renderBattleMessageHelper.ts","src/functions/renderBattleMessage.ts","src/functions/returnShipSymbolFromCoord.ts","src/functions/returnSunkShipObj.ts","src/functions/beforeAfterShipCellsFiredUponStatus.ts","src/functions/updateCompTacticalOverviewShips.ts","src/events/handlePlayerClickOnCompShips.ts","src/functions/generateAdjacentCoordsArr.ts","src/functions/generateFiringSolution.ts","src/functions/genRandCompAttackGuess.ts","src/functions/generateProbabilisticFiringCoord.ts","src/functions/storeCompHitMissCoords.ts","src/functions/updatePlayerTacticalOverviewCells.ts","src/functions/computerAttacks.ts","src/functions/computersTurn.ts","src/events/handlePlayerClickOnCompMisses.ts","src/events/handleStartButtonClick.ts","src/functions/randomizeAndStoreShipNames.ts","src/functions/renderStartButton.ts","src/functions/checkAllShipsInPlace.ts","src/functions/renderStarsInPlayerBoard.ts","src/functions/doesShipPlacementOverlap.ts","src/functions/isCorrectNumberOfShips.ts","src/events/handleBattleshipMouseEnter.ts","src/events/handleBattleshipMouseLeave.ts","src/events/handleCarrierMouseEnter.ts","src/events/handleCarrierMouseLeave.ts","src/events/handleDestroyerMouseEnter.ts","src/events/handleDestroyerMouseLeave.ts","src/events/handleFrigateMouseEnter.ts","src/events/handleFrigateMouseLeave.ts","src/events/handleSuperdreadnoughtMouseEnter.ts","src/events/handleSuperdreadnoughtMouseLeave.ts","src/events/handleSuperdreadnoughtCellClick.ts","src/events/handleSuperdreadnoughtBttnClick.ts","src/events/handleFrigateCellClick.ts","src/events/handleFrigateBttnClick.ts","src/events/handleDestroyerCellClick.ts","src/events/handleDestroyerBttnClick.ts","src/events/handleCarrierCellClick.ts","src/events/handleCarrierBttnClick.ts","src/events/handleBattleshipCellClick.ts","src/events/handleBattleshipBttnClick.ts","src/functions/renderShipSelectionBttns.ts","src/functions/renderShipSelectionPage.ts","src/events/receiveFormName.ts","src/functions/addEvtListenerToForm.ts","src/index.ts"],"sourcesContent":["const greetingsText = [\n\t`In a time of crisis, the Star Kingdom of Manticore faces a grave threat from\n  the treacherous People's Republic of Haven. Their aggression and lust for\n  power has forced us into a war we did not seek. However, as loyal subjects of\n  Her Majesty Queen Elizabeth III, it is our duty to defend our homeland and\n  protect our people from harm!`,\n\t//\n\t`The enemy seeks to destroy our way of life, but we will not falter! Our brave\n  sailors and soldiers stand ready to defend the Kingdom with honor and courage.\n  We will not rest until the threat of Haven is neutralized, and our people can\n  live in peace and prosperity once again.`,\n\t//\n\t`People's Republic of Haven has assembled a formidable fleet near the Talbott\n  Cluster, commanded by the traitor Admiral Esther McQueen, and are poised to\n  launch an invasion of the Rembrandt Trade Union.`,\n\t//\n\t`The brave people of Rembrandt\n  have reached out to us for assistance in the face of this imminent threat,\n  pledging their loyalty to the Kingdom upon the successful repulsion of the\n  Haven forces.`,\n\t//\n\t`As staunch defenders of peace and justice, we cannot turn a\n  blind eye to their plight and will stand by our allies in their hour of need.\n  Our fleet has been mobilized and will soon join the battle to ensure the\n  safety and sovereignty of the Rembrandt Trade Union.`,\n\t//\n\t`You have been called upon to engage and defeat the Haven Fleet and secure\n  peace and prosperity for the Star Kingdom and its allies!`,\n];\n\nexport { greetingsText };\n","const preBattleTexts = [\n\t`By the Grace of God, Queen of Manticore, Protector of the Realm, Elizabeth III, to all her loyal sailors: `,\n\t//\n\t`You stand on the precipice of a great battle, a battle that has been months in the making. The galaxy watches with bated breath as we prepare to face our enemy, the tyrannical People's Republic of Haven. But we do not stand alone. The hopes and prayers of all those who cherish freedom and liberty march with us into battle.`,\n\t//\n\t`Shall we allow our audacious enemies to violate with impunity the territory of the Kingdom? Will you permit the fleet to escape which has carried terror into your families? You will not!`,\n\t//\n\t`Let our enemies tremble at the sound of our thundering grasers! Let them cower before our fierce determination and unbreakable will! For we are the sailors of Manticore, and we will not allow our kingdom to be violated or our families to be terrorized!`,\n\t//\n\t`Our cause is just, our determination unbreakable, and our courage unwavering. We fight not just for our kingdom, but for the ideals that it represents: justice, freedom, and the rule of law. Our enemy seeks to trample these ideals underfoot, but we will not let them!`,\n\t//\n\t`I have faith in you, my fellow sailors. I have seen your bravery, your tenacity, and your skill. You are the best of the best, the defenders of our beloved Manticore. And so I say to you, go forth into battle with heads held high, with hearts filled with the spirit of Manticore. The eyes of the galaxy are upon us, and we will not disappoint. Victory is within our grasp, and we shall seize it with all our might!`,\n\t//\n\t`We are the defenders of the Star Kingdom of Manticore, and we will fight to protect our people and our home. We will stand strong against the enemy, and we will not rest until they are defeated and our kingdom is safe!`,\n];\n\nexport { preBattleTexts };\n","const elemCreator = (elem: string) => (classes: string[]) => {\n\tconst element = document.createElement(elem);\n\n\treturn classes.reduce((elem: HTMLElement, currClass: string) => {\n\t\telem.classList.add(currClass);\n\t\treturn elem;\n\t}, element);\n};\n\nconst addAttributeToElem =\n\t(attrVals: Array<Array<string>>) => (elem: HTMLElement | null) => {\n\t\treturn attrVals.reduce(\n\t\t\t(element: HTMLElement | null | undefined, curr: Array<string>) => {\n\t\t\t\tif (curr.length > 2) return undefined;\n\n\t\t\t\tif (element) element.setAttribute(curr[0], curr[1]);\n\t\t\t\treturn element;\n\t\t\t},\n\t\t\telem\n\t\t);\n\t};\n\nconst addStyleToElem =\n\t(stylePropVals: Array<Array<string>>) => (elem: HTMLElement | null) => {\n\t\treturn stylePropVals.reduce(\n\t\t\t(element: HTMLElement | null | undefined, curr: string[]) => {\n\t\t\t\tif (curr.length > 2) return undefined;\n\n\t\t\t\tif (element) element.style.setProperty(curr[0], curr[1]);\n\t\t\t\treturn element;\n\t\t\t},\n\t\t\telem\n\t\t);\n\t};\n\nconst removeStyleFromElem = (styleProp: string) => (elem: HTMLElement | null) => {\n\tif (elem) elem.style.removeProperty(styleProp);\n\treturn elem;\n};\n\nconst addTextToElem = (text: string) => (elem: HTMLElement | null) => {\n\tconst textNode = document.createTextNode(text);\n\tif (elem) elem.appendChild(textNode);\n\treturn elem;\n};\n\nconst appendElemToParent =\n\t(parent: HTMLElement | null) => (child: HTMLElement | null) => {\n\t\tif (child) if (parent) parent.appendChild(child);\n\t};\n\nconst createImage =\n\t(source: string) => (classes: string[]) => (alt: string) => (title: string) => {\n\t\tconst image = new Image();\n\t\timage.src = source;\n\t\timage.alt = alt;\n\t\timage.title = title;\n\n\t\treturn classes.reduce((elem: HTMLImageElement, currClass: string) => {\n\t\t\telem.classList.add(currClass);\n\t\t\treturn elem;\n\t\t}, image);\n\t};\n\nconst addEvtListener =\n\t(evt: string) =>\n\t(\n\t\thandleEvt: (\n\t\t\tthis: any,\n\t\t\tev: any,\n\t\t\toptions?: {\n\t\t\t\tcapture: boolean;\n\t\t\t\tonce: boolean;\n\t\t\t\tpassive: boolean;\n\t\t\t\tsignal: AbortSignal;\n\t\t\t}\n\t\t) => unknown\n\t) =>\n\t(elem: HTMLElement | null) => {\n\t\tif (elem) elem.addEventListener(evt, handleEvt);\n\t\treturn elem;\n\t};\n\nconst removeEvtListener =\n\t(evt: string) =>\n\t(\n\t\thandleEvt: (\n\t\t\tthis: any,\n\t\t\tev: any,\n\t\t\toptions?: {\n\t\t\t\tcapture: boolean;\n\t\t\t\tonce: boolean;\n\t\t\t\tpassive: boolean;\n\t\t\t\tsignal: AbortSignal;\n\t\t\t}\n\t\t) => unknown\n\t) =>\n\t(elem: HTMLElement | null) => {\n\t\tif (elem) elem.removeEventListener(evt, handleEvt);\n\t\treturn elem;\n\t};\n\nconst pipe =\n\t<V>(...funcs: Array<(_: V) => any>) =>\n\t(value: V) =>\n\t\tfuncs.reduce((res, func) => func(res), value);\n\nexport {\n\telemCreator,\n\tappendElemToParent,\n\taddTextToElem,\n\taddAttributeToElem,\n\tcreateImage,\n\taddEvtListener,\n\tremoveEvtListener,\n\taddStyleToElem,\n\tremoveStyleFromElem,\n\tpipe,\n};\n","import { addTextToElem, appendElemToParent, elemCreator, pipe } from './elementCreators';\n\ntype TypewriterEffectProps = {\n\tstring: string;\n\tchildElem: HTMLElement | null;\n\tparentElem: HTMLElement | null;\n\tspeed?: number;\n};\n\nasync function typewriterEffect({\n\tstring,\n\tchildElem,\n\tparentElem,\n\tspeed = 50,\n}: TypewriterEffectProps): Promise<void> {\n\treturn new Promise((resolve) => {\n\t\tlet i = 0;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (i >= string.length) {\n\t\t\t\tclearInterval(interval);\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\tif (childElem) addTextToElem(string[i])(childElem);\n\t\t\t\ti += 1;\n\t\t\t}\n\n\t\t\tconst scrollHeight = parentElem?.scrollHeight ?? 0;\n\t\t\tparentElem?.scroll({ top: scrollHeight, left: 0, behavior: 'smooth' });\n\t\t}, speed);\n\t});\n}\n\nasync function asyncForEach<T>(\n\tarr: T[],\n\tcallback: (val: T, index: number, array: T[]) => Promise<void>\n): Promise<void> {\n\tfor (const [index, val] of arr.entries()) {\n\t\tawait callback(val, index, arr);\n\t}\n}\n\ntype CreateTypewriterEffectProps = {\n\tcontainerElem: HTMLElement | null;\n\tstrings: string[];\n\tspeed?: number;\n};\n\nasync function createTypewriterEffect({\n\tcontainerElem,\n\tstrings,\n\tspeed = 50,\n}: CreateTypewriterEffectProps) {\n\tasyncForEach(strings, async (string: string, index) => {\n\t\tconst typewriterElem = elemCreator('p')(['typewriter-text']);\n\t\tappendElemToParent(containerElem)(typewriterElem);\n\n\t\tawait typewriterEffect({\n\t\t\tstring,\n\t\t\tchildElem: typewriterElem,\n\t\t\tparentElem: containerElem,\n\t\t\tspeed,\n\t\t});\n\n\t\tconst length = strings.length;\n\t\tif (index < length - 1)\n\t\t\tpipe(appendElemToParent(containerElem))(elemCreator('br')(['break']));\n\n\t\tconst scrollHeight = containerElem?.scrollHeight ?? 0;\n\t\tcontainerElem?.scroll({ top: scrollHeight, left: 0, behavior: 'smooth' });\n\t});\n}\n\nexport { createTypewriterEffect };\n","import { preBattleTexts } from '../data/preBattleTexts';\nimport { createTypewriterEffect } from '../functions/createTypewriterEffect';\nimport { appendElemToParent, elemCreator } from '../functions/elementCreators';\n\nconst renderPlayerInfoScreen = function (playerName_: string): void {\n\t// scroll to top of page\n\twindow.scrollTo(0, 0);\n\n\tconst main: HTMLElement | null = document.querySelector('.main');\n\n\tconst infoScreenContainer = elemCreator('div')(['infoScreen-container']);\n\tappendElemToParent(main)(infoScreenContainer);\n\n\tpreBattleTexts.push(`Ready fleet formation, Admiral ${playerName_}.`);\n\n\tcreateTypewriterEffect({\n\t\tcontainerElem: infoScreenContainer,\n\t\tstrings: preBattleTexts,\n\t\tspeed: 25,\n\t});\n};\n\nexport { renderPlayerInfoScreen };\n","import {\n\taddAttributeToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from '../functions/elementCreators';\n\nconst renderPlayerShipPlacementBoard = function (): void {\n\tconst main: HTMLElement | null = document.querySelector('.main');\n\n\tconst bothBoardsContainer = elemCreator('div')(['bothBoards-container']);\n\tappendElemToParent(main)(bothBoardsContainer);\n\n\tconst playerBoardWrapper = elemCreator('div')(['playerBoard-wrapper']);\n\tappendElemToParent(bothBoardsContainer)(playerBoardWrapper);\n\n\tconst playerBoardContainer = elemCreator('div')(['playerBoard-container']);\n\tappendElemToParent(playerBoardWrapper)(playerBoardContainer);\n\n\tfor (let i = 0; i < 10; i += 1) {\n\t\tfor (let j = 0; j < 10; j += 1) {\n\t\t\t// renders a div per iteration of for-loop and append\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['data-cellplayer', `${j},${i}`]]),\n\t\t\t\tappendElemToParent(playerBoardContainer)\n\t\t\t)(elemCreator('div')(['player-gameCell']));\n\t\t}\n\t}\n};\nexport { renderPlayerShipPlacementBoard };\n","const handleAxisToggleClick = function (this: HTMLButtonElement, ev: MouseEvent): void {\n\tconst currentText = this.textContent;\n\n\tif (currentText === 'Axis-X') {\n\t\tthis.textContent = '';\n\t\tthis.textContent = 'Axis-Y';\n\t} else if (currentText === 'Axis-Y') {\n\t\tthis.textContent = '';\n\t\tthis.textContent = 'Axis-X';\n\t}\n};\nexport { handleAxisToggleClick };\n","const accumulatePlayerShipCoords = function (currentShipCoords_: string[]): void {\n\tconst playerShipsCoords: string[] = JSON.parse(\n\t\tlocalStorage.getItem('playerShipsCoords') ?? ''\n\t);\n\n\t// adds currentship coordinate to rest of ships\n\tcurrentShipCoords_.forEach((coord) => playerShipsCoords.push(coord));\n\n\tlocalStorage.setItem('playerShipsCoords', JSON.stringify(playerShipsCoords));\n};\nexport { accumulatePlayerShipCoords };\n","const shipNames = {\n\thaven: {\n\t\tsuperdreadnoughts: [\n\t\t\t'Nouveau Paris',\n\t\t\t'Danville',\n\t\t\t'Havensport',\n\t\t\t'Juneau',\n\t\t\t'Kaplin',\n\t\t\t\"Macrea's Tor\",\n\t\t\t'La Martin',\n\t\t\t'LaFayette',\n\t\t\t'Lutetia',\n\t\t\t'Merston',\n\t\t\t'New Boston',\n\t\t\t'Toulon',\n\t\t\t'Tregizva',\n\t\t\t'Waldensville',\n\t\t\t'Kaplan',\n\t\t\t'Merston',\n\t\t\t'Shaldon',\n\t\t\t\"René d'Aiguillon\",\n\t\t\t'Du Quesne',\n\t\t\t\"D'Allonville\",\n\t\t\t'Alphand',\n\t\t\t'Baudin',\n\t\t\t'Charette',\n\t\t\t'Forbin',\n\t\t\t'Guichen',\n\t\t\t\"D'Iberville\",\n\t\t\t'Lepanto',\n\t\t\t'Mouchez',\n\t\t\t'Tilden',\n\t\t\t'Rouseau',\n\t\t\t'Salamis',\n\t\t\t'Sovereign of Space',\n\t\t\t'Bayard',\n\t\t\t'Cannonade',\n\t\t\t'Conquete',\n\t\t\t'Guerriere',\n\t\t\t'Hero',\n\t\t\t'Lancelot',\n\t\t\t'New Republic',\n\t\t\t'Victorieux',\n\t\t\t'Temeraire',\n\t\t],\n\t\tcarriers: [\n\t\t\t'Sword',\n\t\t\t'Claymore',\n\t\t\t'Cutlass',\n\t\t\t'Dirk',\n\t\t\t'Drusus',\n\t\t\t'Durandal',\n\t\t\t'Epee',\n\t\t\t'Estoc',\n\t\t\t'Excalibur',\n\t\t\t'Falchion',\n\t\t\t'Flamberge',\n\t\t\t'Foil',\n\t\t\t'Gladius',\n\t\t\t'Jian',\n\t\t\t'Katana',\n\t\t\t'Khopesh',\n\t\t\t'Poignard',\n\t\t\t'Raiden',\n\t\t\t'Rapier',\n\t\t\t'Sabre',\n\t\t\t'Scimitar',\n\t\t\t'Shamshir',\n\t\t\t'Wakasashi',\n\t\t\t'Mars',\n\t\t\t'Loki',\n\t\t\t'Marduk',\n\t\t\t'Nurghal',\n\t\t\t'Odin',\n\t\t\t'Thor',\n\t\t\t'Tyr',\n\t\t\t'Anhur',\n\t\t\t'Ares',\n\t\t\t'De Conde',\n\t\t\t'Hachiman',\n\t\t\t'Huan-Ti',\n\t\t\t'Ishtar',\n\t\t\t'Rienzi',\n\t\t\t'Tanit',\n\t\t\t'Krashnark',\n\t\t\t'Morrigan',\n\t\t\t'Yama',\n\t\t],\n\t\tbattleships: [\n\t\t\t'Tiger',\n\t\t\t'Bengal',\n\t\t\t'Bobcat',\n\t\t\t'Burmese',\n\t\t\t'Cheetah',\n\t\t\t'Cougar',\n\t\t\t'Jaguar',\n\t\t\t'Leopard',\n\t\t\t'Lion',\n\t\t\t'Lioness',\n\t\t\t'Lynx',\n\t\t\t'Manx',\n\t\t\t'Mountain Lion',\n\t\t\t'Ocelot',\n\t\t\t'Panther',\n\t\t\t'Puma',\n\t\t\t'Sabretooth',\n\t\t\t'Wildcat',\n\t\t\t'Sultan',\n\t\t\t'Abdali',\n\t\t\t'Achmed',\n\t\t\t'Alp Arslan',\n\t\t\t'Bayezid',\n\t\t\t'Fatih',\n\t\t\t'Isa',\n\t\t\t'Kerebin',\n\t\t\t'Malik',\n\t\t\t'Mehmed',\n\t\t\t'Murad',\n\t\t\t'Musa',\n\t\t\t'Rash al-Din',\n\t\t\t'Saladin',\n\t\t\t'Selim',\n\t\t\t'Sinjar',\n\t\t\t'Sulieman',\n\t\t\t'Tinaly',\n\t\t\t'Tolek',\n\t\t\t'Walid',\n\t\t\t'Yavuz',\n\t\t\t'Yildirim',\n\t\t\t'Attila',\n\t\t\t'Barbarosa',\n\t\t\t'Boyar',\n\t\t\t'Cassander',\n\t\t\t'Count Maresuke Nogi',\n\t\t\t'Count Tilly',\n\t\t\t'Cyrus',\n\t\t\t'Farnese',\n\t\t\t'Ivan IV',\n\t\t\t'Kutuzov',\n\t\t\t'MacArthur',\n\t\t\t'Modred',\n\t\t\t'Pappenheim',\n\t\t\t'Roxana',\n\t\t\t'Subutai',\n\t\t\t'Tammerlane',\n\t\t\t'Tepes',\n\t\t\t'Wallenstein',\n\t\t\t'William T. Sherman',\n\t\t\t'Triumphant',\n\t\t\t'Admiral Quinterra',\n\t\t\t'Conquerant',\n\t\t\t'Conquistador',\n\t\t\t'Schaumberg',\n\t\t\t'Theban Warrior',\n\t\t\t'Vindicator',\n\t\t\t'Citizen Admiral Tacosa',\n\t\t\t'Mohawk',\n\t\t\t'Saracen',\n\t\t\t'Veracity',\n\t\t],\n\t\tdestroyers: [\n\t\t\t'Bastogne',\n\t\t\t'Arlon',\n\t\t\t'Breslau ',\n\t\t\t'Bruges',\n\t\t\t'Busko',\n\t\t\t'Charleroi',\n\t\t\t'Gorzow',\n\t\t\t'Jaroslaw',\n\t\t\t'Kessler',\n\t\t\t'Krakow',\n\t\t\t'Leuven',\n\t\t\t'Liege',\n\t\t\t'Lubin',\n\t\t\t'Malbork',\n\t\t\t'Poznan',\n\t\t\t'Suwalki',\n\t\t\t'Torun',\n\t\t\t'Toulon',\n\t\t\t'Tournai',\n\t\t\t'Desforge',\n\t\t\t'Alcazar ',\n\t\t\t'Auphan',\n\t\t\t'Baudin',\n\t\t\t'Bouvet',\n\t\t\t'Bruat',\n\t\t\t'Courbet',\n\t\t\t'Decres',\n\t\t\t'Duperre',\n\t\t\t'Hamelin',\n\t\t\t'Kersaint',\n\t\t\t'Linois',\n\t\t\t'Morillot',\n\t\t\t'Muselier',\n\t\t\t'Dainville',\n\t\t\t'Picquet',\n\t\t\t'Requin',\n\t\t\t'Roussin',\n\t\t\t'Toulouse',\n\t\t\t'Hecate',\n\t\t\t'Hector',\n\t\t\t'Racer',\n\t\t],\n\t\tfrigates: [\n\t\t\t'Brilliance',\n\t\t\t'Glimmer',\n\t\t\t'Radiance',\n\t\t\t'Solar Flare',\n\t\t\t'Sunspot',\n\t\t\t'Conqueror',\n\t\t\t'Alexander',\n\t\t\t'Alvarado',\n\t\t\t'Babar',\n\t\t\t'Caesar',\n\t\t\t'Cortez',\n\t\t\t'Diaz',\n\t\t\t'Khan',\n\t\t\t'Hannibal',\n\t\t\t'Hideyoshi',\n\t\t\t'Huangdi',\n\t\t\t'Montezuma',\n\t\t\t'Napoleon',\n\t\t\t'Rameses',\n\t\t\t'Valdivia',\n\t\t\t'Vaubon',\n\t\t\t'Wari',\n\t\t\t'William',\n\t\t\t'Charles Wade Pope',\n\t\t\t'Marcus',\n\t\t\t'Beaudway',\n\t\t\t'Thomas Fisher',\n\t\t\t'Wiliam Harting',\n\t\t\t'Isaiah Kenter',\n\t\t\t'Joseph T. Marrone',\n\t\t\t'Kenneth Nastansky',\n\t\t\t'Esperanza de Souza',\n\t\t\t'Jonathan Talbott',\n\t\t\t'Bacchante',\n\t\t\t'Sabine',\n\t\t\t'Seahorse',\n\t\t],\n\t},\n\n\tmanticore: {\n\t\tsuperdreadnoughts: [\n\t\t\t'Invictus',\n\t\t\t'Imperator',\n\t\t\t'Incomparable',\n\t\t\t'Intolerant',\n\t\t\t'Intransigent',\n\t\t\t'Second Yeltsin',\n\t\t\t'Medusa',\n\t\t\t'Barnett',\n\t\t\t'Belisarius',\n\t\t\t'Bellona',\n\t\t\t'Elizabeth I',\n\t\t\t\"Ellen D'Orville\",\n\t\t\t'Hancock',\n\t\t\t'King Roger III',\n\t\t\t'Marduk',\n\t\t\t'Regulus',\n\t\t\t'Revenge',\n\t\t\t'Troubadour',\n\t\t\t'Thunderer',\n\t\t\t\"Trevor's Star\",\n\t\t\t'Victorious',\n\t\t\t'Warrior',\n\t\t\t\"Yeltsin's Star\",\n\t\t\t'King William',\n\t\t\t'King David',\n\t\t\t'King Edward',\n\t\t\t'King George',\n\t\t\t'King Michael',\n\t\t\t'King Roger',\n\t\t\t'Prince Charles',\n\t\t\t'Prince Malachai',\n\t\t\t'Prince Royal',\n\t\t\t'Queen Adrianne',\n\t\t\t'Queen Caitrin',\n\t\t\t'Manticore',\n\t\t\t'Gryphon',\n\t\t\t'Sphinx',\n\t\t\t'Samothrace',\n\t\t\t'Hercules',\n\t\t\t'Majestic',\n\t\t\t'Magnificent',\n\t\t\t'Monarch',\n\t\t\t'Scepter',\n\t\t\t'Sovereign',\n\t\t\t'Bellerophon',\n\t\t],\n\t\tcarriers: [\n\t\t\t'Redoubtable',\n\t\t\t'Champion',\n\t\t\t'Defiant',\n\t\t\t'Formidable',\n\t\t\t'Intolerant',\n\t\t\t'Invincible',\n\t\t\t'Irresistible',\n\t\t\t'Onslaught',\n\t\t\t'Renown',\n\t\t\t'Resolution',\n\t\t\t'Revenge',\n\t\t\t'Homer',\n\t\t\t'Achilles',\n\t\t\t'Agamemnon',\n\t\t\t'Cassandra',\n\t\t\t'Hecate',\n\t\t\t'Hector',\n\t\t\t'Menelaus',\n\t\t\t'Penthesilea',\n\t\t\t'Priam',\n\t\t\t'Reliant',\n\t\t\t'Alcibiades',\n\t\t\t'Amphitrite',\n\t\t\t'Achilles',\n\t\t\t'Dauntless',\n\t\t\t'Hasley',\n\t\t\t'Indomitable',\n\t\t\t'Ishtar',\n\t\t\t'Lysander',\n\t\t\t'Nike',\n\t\t\t'Nelson',\n\t\t\t'Retaliation',\n\t\t\t'Royalist',\n\t\t\t'Truculent',\n\t\t\t'Venom',\n\t\t\t'Victory',\n\t\t\t'Viper',\n\t\t\t'Warspite',\n\t\t\t'Xerxes',\n\t\t\t'Agamemnon',\n\t\t\t'Ajax',\n\t\t\t'Hector',\n\t\t\t'Patrocles',\n\t\t\t'Priam',\n\t\t\t'Nike',\n\t\t],\n\t\tbattleships: [\n\t\t\t'Prince Consort',\n\t\t\t'Prince Adrian',\n\t\t\t'Prince Justin',\n\t\t\t'Prince Michael',\n\t\t\t'Prince Roger',\n\t\t\t'Prince Stephen',\n\t\t\t'Prince Harold',\n\t\t\t'Princess Adrienne',\n\t\t\t'Princess Angelique',\n\t\t\t'Princess Aorianna',\n\t\t\t'Princess Caitrin',\n\t\t\t'Princess Joanna',\n\t\t\t'Princess Michelle',\n\t\t\t'Princess Samantha',\n\t\t\t'Princess Solange',\n\t\t\t'Crusader',\n\t\t\t'Alexius',\n\t\t\t'Eleanor',\n\t\t\t'Frederick',\n\t\t\t'Iberiana',\n\t\t\t'Lafroye',\n\t\t\t'Philip',\n\t\t\t'Richard',\n\t\t\t'Tancred',\n\t\t\t'Broadsword',\n\t\t\t'Claymore',\n\t\t\t'Cutlass',\n\t\t\t'Glaive',\n\t\t\t'Guisarm',\n\t\t\t'Halberd',\n\t\t\t'Pike',\n\t\t\t'Schiavone',\n\t\t\t'Alchemist',\n\t\t\t'Cantrip',\n\t\t\t'Circe',\n\t\t\t'Conjurer',\n\t\t\t'Druidess',\n\t\t\t'Enchanter',\n\t\t\t'Fearless ',\n\t\t\t'Magician',\n\t\t\t'Magus',\n\t\t\t'Merlin',\n\t\t\t'Necromancer',\n\t\t\t'Oracle',\n\t\t\t'Runebearer',\n\t\t\t'Santander',\n\t\t\t'Seeress',\n\t\t\t'Shaman',\n\t\t\t'Sorceror',\n\t\t\t'Star Knight',\n\t\t\t'Star Ranger',\n\t\t\t'Thaumaturge',\n\t\t\t'Valiant',\n\t\t\t'Warlock ',\n\t\t\t'Edward Saganami',\n\t\t\t'Jessica Epps',\n\t\t\t'Quentin Saint-James',\n\t\t\t'Hexapuma',\n\t\t\t'Gauntlet',\n\t\t],\n\t\tdestroyers: [\n\t\t\t'Culverin',\n\t\t\t'Cannonball',\n\t\t\t'Carronade',\n\t\t\t'Chainshot',\n\t\t\t'Chanson',\n\t\t\t'Aria',\n\t\t\t'Balladeer',\n\t\t\t'Bard',\n\t\t\t'Canticle',\n\t\t\t'Choralist',\n\t\t\t'Glorioso',\n\t\t\t'Madrigal',\n\t\t\t'Minstrel',\n\t\t\t'Nightingale',\n\t\t\t'Plain Song',\n\t\t\t'Rondeau',\n\t\t\t'Serenade',\n\t\t\t'Troubadur',\n\t\t\t'Oracle',\n\t\t\t'Vixen',\n\t\t\t'Windsong',\n\t\t\t'Havoc',\n\t\t\t'Chaos',\n\t\t\t'Devastation',\n\t\t\t'Harrow',\n\t\t\t'Hutspur',\n\t\t\t'Turbulent',\n\t\t\t'Vengeance',\n\t\t\t'Wrack',\n\t\t\t'Falcon',\n\t\t\t'Condor',\n\t\t\t'Goshawk',\n\t\t\t'Harrier',\n\t\t\t'Hawk',\n\t\t\t'Hawkwing3',\n\t\t\t'Kestrel',\n\t\t\t'Kingfisher',\n\t\t\t'Kite',\n\t\t\t'Linnet',\n\t\t\t'Merlin',\n\t\t\t'Nighthawk',\n\t\t\t'Peregrine',\n\t\t\t'Shrike',\n\t\t\t'Arrowhead',\n\t\t\t'Roland',\n\t\t],\n\t\tfrigates: [\n\t\t\t'Courageous',\n\t\t\t'Audacious',\n\t\t\t'Fearless',\n\t\t\t'Intransigent',\n\t\t\t'Intrepid',\n\t\t\t'Resolute',\n\t\t\t'Valiant',\n\t\t\t'Defiant',\n\t\t\t'Gallant',\n\t\t\t'Apollo',\n\t\t\t'Adonai',\n\t\t\t'Agni',\n\t\t\t'Amaterasu',\n\t\t\t'Anubis',\n\t\t\t'Aphrodite',\n\t\t\t'Arethusa',\n\t\t\t'Artemis',\n\t\t\t'Athena',\n\t\t\t'Chiron',\n\t\t\t'Hera',\n\t\t\t'Hermes',\n\t\t\t'Iris',\n\t\t\t'Leto',\n\t\t\t'Perseus',\n\t\t\t'Poseidon',\n\t\t\t'Thetis',\n\t\t\t'Xanthus',\n\t\t\t'Ares',\n\t\t\t'Illustrious',\n\t\t\t'Furious',\n\t\t\t'Magnificent',\n\t\t\t'Regal',\n\t\t\t'Avalon',\n\t\t\t'Aegis',\n\t\t],\n\t},\n};\n\nexport { shipNames };\n","import { returnRandomOrientation } from './returnRandomOrientation';\nimport { CompShipsPlacementChoice } from './types';\n\n// returns an object with the computer's ships' randomly generated coordinates\nfunction populateCompShipsCoords(): CompShipsPlacementChoice {\n\t// creates tuples[] of all possible coordinates\n\tconst allCoords: [number, number][] = [];\n\tfor (let i = 0; i < 10; i += 1) {\n\t\tfor (let j = 0; j < 10; j += 1) {\n\t\t\tallCoords.push([j, i]);\n\t\t}\n\t}\n\n\tconst shipsLengthTuple: [string, number][] = [\n\t\t['superdreadnought', 5],\n\t\t['carrier', 4],\n\t\t['battleship', 3],\n\t\t['destroyer', 2],\n\t\t['destroyer', 2],\n\t\t['frigate', 1],\n\t\t['frigate', 1],\n\t];\n\n\tconst shipsPresentCoordsSet = new Set<string>();\n\n\treturn Object.fromEntries(\n\t\tshipsLengthTuple.reduce(\n\t\t\t(\n\t\t\t\tacc: Map<string, Record<string, string> | Record<string, string>[]>,\n\t\t\t\t[shipType, shipLength]\n\t\t\t) => {\n\t\t\t\tlet withinBounds = false;\n\t\t\t\tlet isAnotherShipPresent = true;\n\t\t\t\tlet shipCoordsArr: [number, number][] = [];\n\n\t\t\t\t// keeps generating random coordinates and orientation until the ship fits within the board and doesn't overlap with another ship\n\t\t\t\twhile (!withinBounds || isAnotherShipPresent) {\n\t\t\t\t\tshipCoordsArr = [];\n\n\t\t\t\t\t// returns a random coordinate\n\t\t\t\t\tconst randCoord = (function () {\n\t\t\t\t\t\tlet randIndex = Math.floor(Math.random() * allCoords.length);\n\t\t\t\t\t\tlet randCoordStr = allCoords[randIndex].join(',');\n\n\t\t\t\t\t\twhile (shipsPresentCoordsSet.has(randCoordStr)) {\n\t\t\t\t\t\t\trandIndex = Math.floor(Math.random() * allCoords.length);\n\t\t\t\t\t\t\trandCoordStr = allCoords[randIndex].join(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn allCoords[randIndex];\n\t\t\t\t\t})();\n\n\t\t\t\t\t// returns a random orientation\n\t\t\t\t\tconst randOrientation = returnRandomOrientation();\n\n\t\t\t\t\tswitch (randOrientation) {\n\t\t\t\t\t\tcase 'horizontal': {\n\t\t\t\t\t\t\t// generates the ship's coordinates of corresponding length based on the random coordinate and orientation\n\t\t\t\t\t\t\tfor (let i = 0; i < shipLength; i += 1) {\n\t\t\t\t\t\t\t\tshipCoordsArr.push([randCoord[0] + i, randCoord[1]]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// checks if the ship fits within the board\n\t\t\t\t\t\t\twithinBounds = shipCoordsArr.every(\n\t\t\t\t\t\t\t\t([x, y]) => x >= 0 && x < 10 && y >= 0 && y < 10\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t// checks if the ship overlaps with another ship\n\t\t\t\t\t\t\tisAnotherShipPresent = shipCoordsArr.some((coord) =>\n\t\t\t\t\t\t\t\tshipsPresentCoordsSet.has(coord.join(','))\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// same as above but for vertical orientation\n\t\t\t\t\t\tcase 'vertical': {\n\t\t\t\t\t\t\tfor (let i = 0; i < shipLength; i += 1) {\n\t\t\t\t\t\t\t\tshipCoordsArr.push([randCoord[0], randCoord[1] + i]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\twithinBounds = shipCoordsArr.every(\n\t\t\t\t\t\t\t\t([x, y]) => x >= 0 && x < 10 && y >= 0 && y < 10\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tisAnotherShipPresent = shipCoordsArr.some((coord) =>\n\t\t\t\t\t\t\t\tshipsPresentCoordsSet.has(coord.join(','))\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// adds the ship's coords to the shipsPresentCoords\n\t\t\t\tshipCoordsArr.forEach((coord: [number, number]) =>\n\t\t\t\t\tshipsPresentCoordsSet.add(coord.join(','))\n\t\t\t\t);\n\t\t\t\tconsole.log(\n\t\t\t\t\t'shipsPresentCoords from populateCompShipsCoords()',\n\t\t\t\t\tshipsPresentCoordsSet\n\t\t\t\t);\n\n\t\t\t\tlet shipTypeCoordsObj: Map<string, string>;\n\t\t\t\t// creates a Map object with the ship's type as the key and an object with the ship's coordinates as the value\n\t\t\t\t// superdreadnought, carrier, and battleship are treated separately because they consist of a single object\n\t\t\t\tif (\n\t\t\t\t\tshipType === 'superdreadnought' ||\n\t\t\t\t\tshipType === 'carrier' ||\n\t\t\t\t\tshipType === 'battleship'\n\t\t\t\t) {\n\t\t\t\t\t// creates a Map object with the ship's type as the key and an object with the ship's coordinates as the value\n\t\t\t\t\tshipTypeCoordsObj = new Map([\n\t\t\t\t\t\t['head', shipCoordsArr[0].toString()],\n\t\t\t\t\t\t['tail', shipCoordsArr[shipCoordsArr.length - 1].toString()],\n\t\t\t\t\t]);\n\n\t\t\t\t\t// adds the ship's body coordinates to the Map object\n\t\t\t\t\tfor (let i = 1; i < shipCoordsArr.length - 1; i += 1) {\n\t\t\t\t\t\tshipTypeCoordsObj.set(\n\t\t\t\t\t\t\t`${shipType === 'battleship' ? `body` : `body${i}`}`,\n\t\t\t\t\t\t\tshipCoordsArr[i].toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tacc.set(shipType, Object.fromEntries(shipTypeCoordsObj));\n\t\t\t\t}\n\t\t\t\t// destroyer and frigate are treated separately because they consist of an array of objects\n\t\t\t\telse if (shipType === 'destroyer' || shipType === 'frigate') {\n\t\t\t\t\tswitch (shipType) {\n\t\t\t\t\t\tcase 'destroyer': {\n\t\t\t\t\t\t\tconst destroyerCoordObj = {\n\t\t\t\t\t\t\t\thead: shipCoordsArr[0].toString(),\n\t\t\t\t\t\t\t\ttail: shipCoordsArr[shipCoordsArr.length - 1].toString(),\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst prevDestroyerCoordObjArr = acc.get('destroyers') as\n\t\t\t\t\t\t\t\t| Record<string, string>[]\n\t\t\t\t\t\t\t\t| undefined;\n\n\t\t\t\t\t\t\tif (prevDestroyerCoordObjArr) {\n\t\t\t\t\t\t\t\tacc.set('destroyers', prevDestroyerCoordObjArr.concat(destroyerCoordObj));\n\t\t\t\t\t\t\t} else acc.set('destroyers', [destroyerCoordObj]);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'frigate': {\n\t\t\t\t\t\t\tconst frigateCoordObj = {\n\t\t\t\t\t\t\t\tbody: shipCoordsArr[0].toString(),\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst prevFrigateCoordObjArr = acc.get('frigates') as\n\t\t\t\t\t\t\t\t| Record<string, string>[]\n\t\t\t\t\t\t\t\t| undefined;\n\n\t\t\t\t\t\t\tif (prevFrigateCoordObjArr) {\n\t\t\t\t\t\t\t\tacc.set('frigates', prevFrigateCoordObjArr.concat(frigateCoordObj));\n\t\t\t\t\t\t\t} else acc.set('frigates', [frigateCoordObj]);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\tnew Map()\n\t\t)\n\t) as CompShipsPlacementChoice;\n}\n\nexport { populateCompShipsCoords };\n","function returnRandomOrientation(): 'horizontal' | 'vertical' {\n\tconst randIndex = Math.floor(Math.random() * 2);\n\treturn randIndex === 0 ? 'horizontal' : 'vertical';\n}\n\nexport { returnRandomOrientation };\n","import {\n\taddAttributeToElem,\n\taddStyleToElem,\n\taddTextToElem,\n\tpipe,\n} from '../functions/elementCreators';\nimport { CompShipsPlacementChoice, Div, NodesDiv } from '../functions/types';\n\nconst renderCompShipsOnBoard = function (\n\tcompShipsPlacementChoice_: CompShipsPlacementChoice\n): void {\n\t// used for hit detection\n\tconst compShipsCoords: string[] = JSON.parse(\n\t\tlocalStorage.getItem('compShipsCoords') ?? JSON.stringify([])\n\t);\n\n\tObject.entries(compShipsPlacementChoice_).forEach(([ship, shipObj]) => {\n\t\t// if the compShips obj does not exist, create it, then store it in camelcase i.e., compCarrier\n\t\tif (!localStorage.getItem(`comp${ship[0].toUpperCase() + ship.slice(1)}`)) {\n\t\t\tlocalStorage.setItem(\n\t\t\t\t`comp${ship[0].toUpperCase() + ship.slice(1)}`,\n\t\t\t\tJSON.stringify(shipObj)\n\t\t\t);\n\t\t}\n\n\t\t// for superdreadnought, carrier, battleship properties whose attributes do not consist of an array\n\t\tif (!Array.isArray(shipObj)) {\n\t\t\tObject.entries(shipObj).forEach(([shipSection, sectionCoords]) => {\n\t\t\t\t//grab the corresponding game board cell\n\t\t\t\tconst shipCell: Div = document.querySelector(\n\t\t\t\t\t`[data-cellcomp=\"${sectionCoords}\"]`\n\t\t\t\t);\n\n\t\t\t\tpipe(\n\t\t\t\t\taddAttributeToElem([['class', 'compShipPresent comp-gameCell']]),\n\t\t\t\t\taddTextToElem('✴'),\n\t\t\t\t\taddStyleToElem([['border', '1px solid #00f000']])\n\t\t\t\t)(shipCell);\n\n\t\t\t\t// store the co-ordinates\n\t\t\t\tcompShipsCoords.push(sectionCoords);\n\t\t\t});\n\t\t} else {\n\t\t\t// for destroyers and frigates properties whose attributes consist of an array\n\t\t\tshipObj.forEach((ship) => {\n\t\t\t\tObject.entries(ship).forEach(([shipSection, sectionCoords]) => {\n\t\t\t\t\t// grab the corresponding game board cell\n\t\t\t\t\tconst shipCell: Div = document.querySelector(\n\t\t\t\t\t\t`[data-cellcomp=\"${sectionCoords}\"]`\n\t\t\t\t\t);\n\n\t\t\t\t\tpipe(\n\t\t\t\t\t\taddAttributeToElem([['class', 'compShipPresent comp-gameCell']]),\n\t\t\t\t\t\taddTextToElem('✴'),\n\t\t\t\t\t\taddStyleToElem([['border', '1px solid #00f000']])\n\t\t\t\t\t)(shipCell);\n\n\t\t\t\t\t// store the co-ordinates\n\t\t\t\t\tcompShipsCoords.push(sectionCoords);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t});\n\n\tconst compGameCells: NodesDiv = document.querySelectorAll('.comp-gameCell');\n\n\t// differentiates between ships and empty spaces\n\tcompGameCells.forEach((cell) => {\n\t\tif (!cell.classList.contains('compShipPresent')) {\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'compShipNotPresent comp-gameCell']]),\n\t\t\t\taddTextToElem('✴')\n\t\t\t)(cell);\n\t\t}\n\t});\n\n\t// puts the coordinates in storage for future hit detection checks\n\tlocalStorage.setItem('compShipsCoords', JSON.stringify(compShipsCoords));\n};\n\nexport { renderCompShipsOnBoard };\n","import { populateCompShipsCoords } from '../functions/populateCompShipsCoords';\nimport { renderCompShipsOnBoard } from './renderCompShipsOnBoard';\n\nconst placeCompShipsOnBoard = function (): void {\n\tconst randCompShipPlacement = populateCompShipsCoords();\n\n\trenderCompShipsOnBoard(randCompShipPlacement);\n};\n\nexport { placeCompShipsOnBoard };\n","import {\n\taddAttributeToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from '../functions/elementCreators';\nimport { Div } from '../functions/types';\n\nconst renderCompBoard = function (): void {\n\tconst gameBoardContainer: Div = document.querySelector('.gameBoard-container');\n\n\tconst compBoardWrapper = elemCreator('div')(['compBoard-wrapper']);\n\tappendElemToParent(gameBoardContainer)(compBoardWrapper);\n\n\tconst compBoardContainer = elemCreator('div')(['compBoard-container']);\n\tappendElemToParent(compBoardWrapper)(compBoardContainer);\n\n\tfor (let i = 0; i < 10; i += 1) {\n\t\tfor (let j = 0; j < 10; j += 1) {\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['data-cellcomp', `${j},${i}`]]),\n\t\t\t\tappendElemToParent(compBoardContainer)\n\t\t\t)(elemCreator('div')(['comp-gameCell']));\n\t\t}\n\t}\n};\nexport { renderCompBoard };\n","import {\n\taddAttributeToElem,\n\taddStyleToElem,\n\taddTextToElem,\n\tpipe,\n} from './elementCreators';\nimport {\n\tBattleship,\n\tCarrier,\n\tDestroyer,\n\tFrigate,\n\tNodesDiv,\n\tSuperdreadnought,\n} from './types';\n\nfunction renderStarsAndShipsInPlayerBoard(): void {\n\tconst superdreadnoughtCoords: Superdreadnought = JSON.parse(\n\t\tlocalStorage.getItem('superdreadnought') ?? JSON.stringify([])\n\t);\n\tconst superdreadnoughtCoordsArray = Object.values(superdreadnoughtCoords);\n\n\tconst battleshipCoords: Battleship = JSON.parse(\n\t\tlocalStorage.getItem('battleship') ?? JSON.stringify([])\n\t);\n\tconst battleshipCoordsArray = Object.values(battleshipCoords);\n\n\tconst carrierCoords: Carrier = JSON.parse(\n\t\tlocalStorage.getItem('carrier') ?? JSON.stringify([])\n\t);\n\tconst carrierCoordsArray = Object.values(carrierCoords);\n\n\tconst destroyerCoords: Destroyer[] = JSON.parse(\n\t\tlocalStorage.getItem('destroyer') ?? JSON.stringify([])\n\t);\n\tconst destroyerCoordsArray = destroyerCoords.flatMap((destroyer) =>\n\t\tObject.values(destroyer)\n\t);\n\n\tconst frigateCoords: Frigate[] = JSON.parse(\n\t\tlocalStorage.getItem('frigate') ?? JSON.stringify([])\n\t);\n\tconst frigateCoordsArray = frigateCoords.flatMap((frigate) => Object.values(frigate));\n\n\t// grab the cells for the player's ships and add the corresponding letter\n\tconst playerGameCell: NodesDiv = document.querySelectorAll('.player-gameCell');\n\n\t// if the cell's data-cellplayer attribute is included in the array of coords for the ship, add the corresponding letter to the cell and add the class playerShipPresent\n\t// else add a star and class playerShipNotPresent\n\tplayerGameCell.forEach((cell) => {\n\t\tif (superdreadnoughtCoordsArray.includes(cell.dataset.cellplayer ?? '')) {\n\t\t\tpipe(\n\t\t\t\taddTextToElem('S'),\n\t\t\t\taddStyleToElem([['color', '#f0a400']]),\n\t\t\t\taddAttributeToElem([['class', 'player-gameCell playerShipPresent']])\n\t\t\t)(cell);\n\t\t} else if (battleshipCoordsArray.includes(cell.dataset.cellplayer ?? '')) {\n\t\t\tpipe(\n\t\t\t\taddTextToElem('B'),\n\t\t\t\taddStyleToElem([['color', '#f0a400']]),\n\t\t\t\taddAttributeToElem([['class', 'player-gameCell playerShipPresent']])\n\t\t\t)(cell);\n\t\t} else if (carrierCoordsArray.includes(cell.dataset.cellplayer ?? '')) {\n\t\t\tpipe(\n\t\t\t\taddTextToElem('C'),\n\t\t\t\taddStyleToElem([['color', '#f0a400']]),\n\t\t\t\taddAttributeToElem([['class', 'player-gameCell playerShipPresent']])\n\t\t\t)(cell);\n\t\t} else if (destroyerCoordsArray.includes(cell.dataset.cellplayer ?? '')) {\n\t\t\tpipe(\n\t\t\t\taddTextToElem('D'),\n\t\t\t\taddStyleToElem([['color', '#f0a400']]),\n\t\t\t\taddAttributeToElem([['class', 'player-gameCell playerShipPresent']])\n\t\t\t)(cell);\n\t\t} else if (frigateCoordsArray.includes(cell.dataset.cellplayer ?? '')) {\n\t\t\tpipe(\n\t\t\t\taddTextToElem('F'),\n\t\t\t\taddStyleToElem([['color', '#f0a400']]),\n\t\t\t\taddAttributeToElem([['class', 'player-gameCell playerShipPresent']])\n\t\t\t)(cell);\n\t\t} else {\n\t\t\tpipe(\n\t\t\t\taddTextToElem('✴'),\n\t\t\t\taddStyleToElem([['color', 'gainsboro']]),\n\t\t\t\taddAttributeToElem([['class', 'player-gameCell playerShipNotPresent']])\n\t\t\t)(cell);\n\t\t}\n\t});\n}\n\nexport { renderStarsAndShipsInPlayerBoard };\n","import {\n\taddAttributeToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from './elementCreators';\nimport { renderStarsAndShipsInPlayerBoard } from './renderStarsAndShipsInPlayerBoard';\n\nfunction renderPlayerBoard(): void {\n\tconst main: HTMLElement | null = document.querySelector('.main');\n\n\tconst gameBoardContainer = elemCreator('div')(['gameBoard-container']);\n\tappendElemToParent(main)(gameBoardContainer);\n\n\tconst gamePlayerBoardWrapper = elemCreator('div')(['gamePlayerBoard-wrapper']);\n\tappendElemToParent(gameBoardContainer)(gamePlayerBoardWrapper);\n\n\tconst playerBoardContainer = elemCreator('div')(['playerBoard-container']);\n\tappendElemToParent(gamePlayerBoardWrapper)(playerBoardContainer);\n\n\tfor (let i = 0; i < 10; i += 1) {\n\t\tfor (let j = 0; j < 10; j += 1) {\n\t\t\t// renders a div per iteration of for-loop and append\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['data-cellplayer', `${j},${i}`]]),\n\t\t\t\tappendElemToParent(playerBoardContainer)\n\t\t\t)(elemCreator('div')(['player-gameCell']));\n\t\t}\n\t}\n\n\trenderStarsAndShipsInPlayerBoard();\n}\n\nexport { renderPlayerBoard };\n","import {\n\tBattleship,\n\tCarrier,\n\tDestroyer,\n\tFrigate,\n\tPlayerCompShipsCoords,\n\tSuperdreadnought,\n} from './types';\n\nfunction returnPlayerCompShipsCoords(): PlayerCompShipsCoords {\n\t// grab the player and comp ships coords from local storage so we can assign ship cells in the tac overview to the correct ship cells from game board\n\t// coulda sorted the coords but this is more explicit and easier to read, albeit verbose and also guarantees order sequence\n\n\tconst playerSuperdreadnought: Superdreadnought = JSON.parse(\n\t\tlocalStorage.getItem('superdreadnought') ?? JSON.stringify([{}])\n\t);\n\tconst playerSuperdreadnoughtCoords = [\n\t\tplayerSuperdreadnought.head,\n\t\tplayerSuperdreadnought.body1,\n\t\tplayerSuperdreadnought.body2,\n\t\tplayerSuperdreadnought.body3,\n\t\tplayerSuperdreadnought.tail,\n\t];\n\n\tconst playerCarrier: Carrier = JSON.parse(\n\t\tlocalStorage.getItem('carrier') ?? JSON.stringify([{}])\n\t);\n\tconst playerCarrierCoords = [\n\t\tplayerCarrier.head,\n\t\tplayerCarrier.body1,\n\t\tplayerCarrier.body2,\n\t\tplayerCarrier.tail,\n\t];\n\n\tconst playerBattleship: Battleship = JSON.parse(\n\t\tlocalStorage.getItem('battleship') ?? JSON.stringify([{}])\n\t);\n\tconst playerBattleshipCoords = [\n\t\tplayerBattleship.head,\n\t\tplayerBattleship.body,\n\t\tplayerBattleship.tail,\n\t];\n\n\tconst playerDestroyers: Destroyer[] = JSON.parse(\n\t\tlocalStorage.getItem('destroyer') ?? JSON.stringify([{}])\n\t);\n\tconst playerDestroyersCoords = [\n\t\t[playerDestroyers[0].head, playerDestroyers[0].tail],\n\t\t[playerDestroyers[1].head, playerDestroyers[1].tail],\n\t];\n\n\tconst playerFrigates: Frigate[] = JSON.parse(\n\t\tlocalStorage.getItem('frigate') ?? JSON.stringify([{}])\n\t);\n\tconst playerFrigatesCoords = [[playerFrigates[0].body], [playerFrigates[1].body]];\n\n\tconst compSuperdreadnought: Superdreadnought = JSON.parse(\n\t\tlocalStorage.getItem('compSuperdreadnought') ?? JSON.stringify([{}])\n\t);\n\tconst compSuperdreadnoughtCoords = [\n\t\tcompSuperdreadnought.head,\n\t\tcompSuperdreadnought.body1,\n\t\tcompSuperdreadnought.body2,\n\t\tcompSuperdreadnought.body3,\n\t\tcompSuperdreadnought.tail,\n\t];\n\n\tconst compCarrier: Carrier = JSON.parse(\n\t\tlocalStorage.getItem('compCarrier') ?? JSON.stringify([{}])\n\t);\n\tconst compCarrierCoords = [\n\t\tcompCarrier.head,\n\t\tcompCarrier.body1,\n\t\tcompCarrier.body2,\n\t\tcompCarrier.tail,\n\t];\n\n\tconst compBattleship: Battleship = JSON.parse(\n\t\tlocalStorage.getItem('compBattleship') ?? JSON.stringify([{}])\n\t);\n\tconst compBattleshipCoords = [\n\t\tcompBattleship.head,\n\t\tcompBattleship.body,\n\t\tcompBattleship.tail,\n\t];\n\n\tconst compDestroyers: Destroyer[] = JSON.parse(\n\t\tlocalStorage.getItem('compDestroyers') ?? JSON.stringify([{}])\n\t);\n\tconst compDestroyersCoords = [\n\t\t[compDestroyers[0].head, compDestroyers[0].tail],\n\t\t[compDestroyers[1].head, compDestroyers[1].tail],\n\t];\n\n\tconst compFrigates: Frigate[] = JSON.parse(\n\t\tlocalStorage.getItem('compFrigates') ?? JSON.stringify([{}])\n\t);\n\tconst compFrigatesCoords = [[compFrigates[0].body], [compFrigates[1].body]];\n\n\treturn {\n\t\tplayerShipCoords: {\n\t\t\tsuperdreadnought: playerSuperdreadnoughtCoords,\n\t\t\tcarrier: playerCarrierCoords,\n\t\t\tbattleship: playerBattleshipCoords,\n\t\t\tdestroyers: playerDestroyersCoords,\n\t\t\tfrigates: playerFrigatesCoords,\n\t\t},\n\t\tcompShipCoords: {\n\t\t\tsuperdreadnought: compSuperdreadnoughtCoords,\n\t\t\tcarrier: compCarrierCoords,\n\t\t\tbattleship: compBattleshipCoords,\n\t\t\tdestroyers: compDestroyersCoords,\n\t\t\tfrigates: compFrigatesCoords,\n\t\t},\n\t};\n}\n\nexport { returnPlayerCompShipsCoords };\n","/**\n * Clones an array using structured clone algorithm\n * then shuffles the cloned array using the Durstenfeld shuffle algorithm (Fisher-Yates shuffle)\n * see https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n * @param array of generic type T\n * @returns new array of generic type T\n */\nfunction shuffleArray<T>(array: T[]): T[] {\n\tconst shuffledArray = structuredClone(array);\n\n\tfor (let i = shuffledArray.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n\t}\n\n\treturn shuffledArray;\n}\n\nexport { shuffleArray };\n","import {\n\taddAttributeToElem,\n\taddStyleToElem,\n\taddTextToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from './elementCreators';\nimport { returnPlayerCompShipsCoords } from './returnPlayerCompShipsCoords';\nimport { shuffleArray } from './shuffleArray';\nimport { Div, RandomizedHavenShipNames, RandomizedManticoreShipNames } from './types';\n\nfunction renderTacticalOverview(): void {\n\tconst gamePlayerBoardWrapper: Div = document.querySelector('.gamePlayerBoard-wrapper');\n\n\tconst compBoardWrapper: Div = document.querySelector('.compBoard-wrapper');\n\n\tconst tacticalOverviewWrapperPlayer = elemCreator('div')(['tacticalOverview-wrapper']);\n\tappendElemToParent(gamePlayerBoardWrapper)(tacticalOverviewWrapperPlayer);\n\n\tconst tacticalOverviewWrapperComp = elemCreator('div')(['tacticalOverview-wrapper']);\n\tappendElemToParent(compBoardWrapper)(tacticalOverviewWrapperComp);\n\n\tconst tacticalOverviewContainerPlayer = elemCreator('div')([\n\t\t'tacticalOverview-container',\n\t]);\n\tappendElemToParent(tacticalOverviewWrapperPlayer)(tacticalOverviewContainerPlayer);\n\n\tconst tacticalOverviewTitlePlayer = elemCreator('h2')(['tacticalOverview-title']);\n\tpipe(\n\t\taddTextToElem('Manticoran Navy Tenth Fleet'),\n\t\tappendElemToParent(tacticalOverviewContainerPlayer)\n\t)(tacticalOverviewTitlePlayer);\n\n\tconst tacticalOverviewContainerComp = elemCreator('div')([\n\t\t'tacticalOverview-container',\n\t]);\n\tappendElemToParent(tacticalOverviewWrapperComp)(tacticalOverviewContainerComp);\n\n\tconst tacticalOverviewTitleComp = elemCreator('h2')(['tacticalOverview-title']);\n\tpipe(\n\t\taddTextToElem('Havenite Navy Grendelsbane Fleet'),\n\t\tappendElemToParent(tacticalOverviewContainerComp)\n\t)(tacticalOverviewTitleComp);\n\n\tconst manticoreShipNamesCoords: RandomizedManticoreShipNames = JSON.parse(\n\t\tlocalStorage.getItem('manticoreShipNames') ?? JSON.stringify([{}])\n\t);\n\n\t// grab the ship coords from the board to use them in the tac overview cells to update hits\n\tconst { playerShipCoords } = returnPlayerCompShipsCoords();\n\n\t// loop through the player ship names and render the ship names along with the cells corresponding to the shiptype and coords from the board\n\tObject.entries(manticoreShipNamesCoords).forEach(\n\t\t([shipType, shipName]: [string, string | string[]]) => {\n\t\t\t//handle superdreadnought, carrier, battleship first\n\t\t\tif (!Array.isArray(shipName)) {\n\t\t\t\tconst shipNameContainer = elemCreator('div')(['shipName-container']);\n\t\t\t\tappendElemToParent(tacticalOverviewWrapperPlayer)(shipNameContainer);\n\n\t\t\t\tconst lengthOfCells =\n\t\t\t\t\tshipType === 'superdreadnought' ? 5 : shipType === 'carrier' ? 4 : 3;\n\n\t\t\t\tconst shipAndCoords: string[] =\n\t\t\t\t\tshipType === 'superdreadnought'\n\t\t\t\t\t\t? playerShipCoords.superdreadnought\n\t\t\t\t\t\t: shipType === 'carrier'\n\t\t\t\t\t\t? playerShipCoords.carrier\n\t\t\t\t\t\t: playerShipCoords.battleship;\n\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem(`RMNS ${shipName}`),\n\t\t\t\t\tappendElemToParent(shipNameContainer)\n\t\t\t\t)(elemCreator('p')(['shipName-text']));\n\n\t\t\t\tpipe(\n\t\t\t\t\taddAttributeToElem([['data-shiptype', `${shipType}`]]),\n\t\t\t\t\tappendElemToParent(shipNameContainer)\n\t\t\t\t)(elemCreator('div')(['tacticalCells-container']));\n\n\t\t\t\tfor (let i = 0; i < lengthOfCells; i += 1) {\n\t\t\t\t\tpipe(\n\t\t\t\t\t\taddAttributeToElem([[`data-playership`, `${shipAndCoords[i]}`]]),\n\t\t\t\t\t\taddTextToElem(shipType[0].toUpperCase()),\n\t\t\t\t\t\tappendElemToParent(shipNameContainer)\n\t\t\t\t\t)(elemCreator('div')(['player-tacticalCell']));\n\t\t\t\t}\n\t\t\t}\n\t\t\t// handle destroyers and frigates that are a string[]\n\t\t\telse {\n\t\t\t\tconst lengthOfCells = shipType === 'destroyers' ? 2 : 1;\n\n\t\t\t\tconst shipAndCoords: string[][] =\n\t\t\t\t\tshipType === 'destroyers'\n\t\t\t\t\t\t? playerShipCoords.destroyers\n\t\t\t\t\t\t: playerShipCoords.frigates;\n\n\t\t\t\tfor (let i = 0; i < 2; i += 1) {\n\t\t\t\t\tconst shipNameContainer = elemCreator('div')(['shipName-container']);\n\t\t\t\t\tappendElemToParent(tacticalOverviewWrapperPlayer)(shipNameContainer);\n\n\t\t\t\t\tpipe(\n\t\t\t\t\t\taddTextToElem(`RMNS ${shipName[i]}`),\n\t\t\t\t\t\tappendElemToParent(shipNameContainer)\n\t\t\t\t\t)(elemCreator('p')(['shipName-text']));\n\n\t\t\t\t\tconst tacticalCellsContainer = elemCreator('div')(['tacticalCells-container']);\n\t\t\t\t\tpipe(\n\t\t\t\t\t\taddAttributeToElem([['data-playershiptype', `${shipType}`]]),\n\t\t\t\t\t\tappendElemToParent(shipNameContainer)\n\t\t\t\t\t)(tacticalCellsContainer);\n\n\t\t\t\t\tfor (let j = 0; j < lengthOfCells; j += 1) {\n\t\t\t\t\t\tpipe(\n\t\t\t\t\t\t\taddAttributeToElem([[`data-playership`, `${shipAndCoords[i][j]}`]]),\n\t\t\t\t\t\t\taddTextToElem(shipType[0].toUpperCase()),\n\t\t\t\t\t\t\tappendElemToParent(tacticalCellsContainer)\n\t\t\t\t\t\t)(elemCreator('div')(['player-tacticalCell']));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t);\n\n\tconst havenShipNamesCoords: RandomizedHavenShipNames = JSON.parse(\n\t\tlocalStorage.getItem('havenShipNames') ?? JSON.stringify([{}])\n\t);\n\n\tconst havenShipTypeNamesArr: [string, string | string[]][] =\n\t\tObject.entries(havenShipNamesCoords);\n\t// shuffle array\n\tconst shuffledHavenShipTypeNamesCoordsArr = shuffleArray(havenShipTypeNamesArr);\n\n\t// loop through the comp ship names and render the ship names along with the cells corresponding to the shiptype and coords from the board\n\tshuffledHavenShipTypeNamesCoordsArr.forEach(\n\t\t([shipType, shipName]: [string, string | string[]]) => {\n\t\t\t// handle superdreadnought, carrier, battleship first\n\t\t\tif (!Array.isArray(shipName)) {\n\t\t\t\tconst shipNameContainer = elemCreator('div')(['shipName-container']);\n\t\t\t\tappendElemToParent(tacticalOverviewWrapperComp)(shipNameContainer);\n\n\t\t\t\tconst lengthOfCells =\n\t\t\t\t\tshipType === 'superdreadnought' ? 5 : shipType === 'carrier' ? 4 : 3;\n\n\t\t\t\tpipe(\n\t\t\t\t\taddAttributeToElem([['data-compshipnamecontainer', `${shipType}`]]),\n\t\t\t\t\taddTextToElem(`PNS ${shipName}`),\n\t\t\t\t\tappendElemToParent(shipNameContainer)\n\t\t\t\t)(elemCreator('p')(['shipName-text']));\n\n\t\t\t\tpipe(appendElemToParent(shipNameContainer))(\n\t\t\t\t\telemCreator('div')(['tacticalCells-container'])\n\t\t\t\t);\n\n\t\t\t\t// add the hidden cells that wil be revealed once the player has fired upon all adjacent cells\n\t\t\t\tfor (let i = 0; i < lengthOfCells; i += 1) {\n\t\t\t\t\tpipe(\n\t\t\t\t\t\taddAttributeToElem([\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t`data-compshipcell`,\n\t\t\t\t\t\t\t\t`${shipType[0].toUpperCase() + shipType.slice(1)}_${i}`,\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t]),\n\t\t\t\t\t\taddStyleToElem([['display', 'none']]),\n\t\t\t\t\t\tappendElemToParent(shipNameContainer)\n\t\t\t\t\t)(elemCreator('div')(['comp-tacticalCell']));\n\t\t\t\t}\n\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('?'),\n\t\t\t\t\taddAttributeToElem([\n\t\t\t\t\t\t[`data-compshipquestion`, `${shipType[0].toUpperCase() + shipType.slice(1)}`],\n\t\t\t\t\t]),\n\t\t\t\t\tappendElemToParent(shipNameContainer)\n\t\t\t\t)(elemCreator('div')(['comp-tacticalCell']));\n\t\t\t}\n\t\t\t// handle destroyers and frigates that are a string[]\n\t\t\telse {\n\t\t\t\tconst lengthOfCells = shipType === 'destroyers' ? 2 : 1;\n\n\t\t\t\tfor (let i = 0; i < 2; i += 1) {\n\t\t\t\t\tconst shipNameContainer = elemCreator('div')(['shipName-container']);\n\t\t\t\t\tappendElemToParent(tacticalOverviewWrapperComp)(shipNameContainer);\n\n\t\t\t\t\tpipe(\n\t\t\t\t\t\taddTextToElem(`PNS ${shipName[i]}`),\n\t\t\t\t\t\tappendElemToParent(shipNameContainer)\n\t\t\t\t\t)(elemCreator('p')(['shipName-text']));\n\n\t\t\t\t\tconst tacticalCellsContainer = elemCreator('div')(['tacticalCells-container']);\n\t\t\t\t\tpipe(\n\t\t\t\t\t\taddAttributeToElem([\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'data-compshiptype',\n\t\t\t\t\t\t\t\t`${shipType[0].toUpperCase() + shipType.slice(1)}_${i}`,\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t]),\n\t\t\t\t\t\tappendElemToParent(shipNameContainer)\n\t\t\t\t\t)(tacticalCellsContainer);\n\n\t\t\t\t\tpipe(\n\t\t\t\t\t\taddAttributeToElem([\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t`data-compshipquestion`,\n\t\t\t\t\t\t\t\t`${shipType[0].toUpperCase() + shipType.slice(1)}_${i}`,\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t]),\n\t\t\t\t\t\taddTextToElem('?'),\n\t\t\t\t\t\tappendElemToParent(shipNameContainer)\n\t\t\t\t\t)(elemCreator('div')(['comp-tacticalCell']));\n\n\t\t\t\t\t// add the hidden cells that wil be revealed once the player has fired upon all adjacent cells\n\t\t\t\t\tfor (let j = 0; j < lengthOfCells; j += 1) {\n\t\t\t\t\t\tpipe(\n\t\t\t\t\t\t\taddAttributeToElem([\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t`data-compshipcell`,\n\t\t\t\t\t\t\t\t\t`${shipType[0].toUpperCase() + shipType.slice(1)}_${i}_${j}`,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\taddStyleToElem([['display', 'none']]),\n\t\t\t\t\t\t\tappendElemToParent(shipNameContainer)\n\t\t\t\t\t\t)(elemCreator('div')(['comp-tacticalCell']));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t);\n}\n\nexport { renderTacticalOverview };\n","import { handlePlayerClickOnCompMisses } from '../events/handlePlayerClickOnCompMisses';\nimport { handlePlayerClickOnCompShips } from '../events/handlePlayerClickOnCompShips';\nimport { pipe, removeEvtListener } from '../functions/elementCreators';\nimport { NodesDiv } from '../functions/types';\n\nconst preventClicksAfterWin = function (): void {\n\tconst compShipPresent: NodesDiv = document.querySelectorAll('.compShipPresent');\n\tconst compShipNotPresent: NodesDiv = document.querySelectorAll('.compShipNotPresent');\n\n\t//prevents further clicks after winner is announced\n\tcompShipPresent.forEach((cell) => {\n\t\tpipe(removeEvtListener('click')(handlePlayerClickOnCompShips))(cell);\n\t});\n\tcompShipNotPresent.forEach((cell) => {\n\t\tpipe(removeEvtListener('click')(handlePlayerClickOnCompMisses))(cell);\n\t});\n};\nexport { preventClicksAfterWin };\n","const restartGame = function (): void {\n\tlocalStorage.clear();\n\twindow.scrollTo(0, 0);\n\tself.location.reload();\n};\nexport { restartGame };\n","import {\n\taddEvtListener,\n\taddStyleToElem,\n\taddTextToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from '../functions/elementCreators';\nimport { Div } from '../functions/types';\nimport { preventClicksAfterWin } from './preventClicksAfterWin';\nimport { restartGame } from './restartGame';\n\nconst announceGameWinner = function (winner_: string): void {\n\tconst main: HTMLElement | null = document.querySelector('.main');\n\n\tconst infoScreenWrapper: Div = document.querySelector('.infoScreen-wrapper');\n\tinfoScreenWrapper?.remove();\n\n\tconst winnerContainer = elemCreator('div')(['winner-container']);\n\tappendElemToParent(main)(winnerContainer);\n\n\tif (winner_ === 'comp') {\n\t\tpipe(\n\t\t\taddTextToElem('DEFEAT!'),\n\t\t\taddStyleToElem([['font-size', '2rem']]),\n\t\t\tappendElemToParent(winnerContainer)\n\t\t)(elemCreator('p')(['winner-announcement']));\n\n\t\tpipe(\n\t\t\taddTextToElem(\n\t\t\t\t'With heavy heart and profound regret, we must report a defeat in battle. Our valiant crew fought with all their strength and skill, but alas, the enemy proved too strong for us. We honor the memory of those who gave their lives in defense of the Kingdom, and we pledge to continue the fight with renewed determination. We shall not rest until victory is ours!'\n\t\t\t),\n\t\t\tappendElemToParent(winnerContainer)\n\t\t)(elemCreator('p')(['winner-announcement']));\n\n\t\t// removes event listeners after win\n\t\tpreventClicksAfterWin();\n\t} else {\n\t\tpipe(\n\t\t\taddTextToElem(`VICTORY!`),\n\t\t\taddStyleToElem([['font-size', '2rem']]),\n\t\t\tappendElemToParent(winnerContainer)\n\t\t)(elemCreator('p')(['winner-announcement']));\n\n\t\tpipe(\n\t\t\taddTextToElem(\n\t\t\t\t`The cheers of the crew fill the bridge as the last enemy ship explodes in a ball of fire. You have emerged victorious from the heat of battle, your ships battered but still flying. Your skill and courage in the face of overwhelming odds have saved the lives of your crew and secured another victory for the Star Kingdom of Manticore. As you survey the wreckage of the enemy fleet, you know that your actions will go down in history as a shining example of the indomitable spirit of the Manticoran Navy. \n\t\t\t\t\n\t\t\t\tCongrats ${winner_}! You have destroyed the Haven Fleet!\n\t\t\t\t`\n\t\t\t),\n\t\t\tappendElemToParent(winnerContainer)\n\t\t)(elemCreator('p')(['winner-announcement']));\n\n\t\tpreventClicksAfterWin();\n\t}\n\n\tpipe(\n\t\taddTextToElem('Restart'),\n\t\taddEvtListener('click')(restartGame),\n\t\tappendElemToParent(winnerContainer)\n\t)(elemCreator('button')(['bttn-restart']));\n\n\t// prevents computers turn from adding evt listeners back on\n\tlocalStorage.setItem('isGameWon', JSON.stringify(true));\n};\nexport { announceGameWinner };\n","const battleTexts = {\n\thitsOnShip: [\n\t\t'A hit, Sir!',\n\t\t'Direct hit, Sir!',\n\t\t'We must have taken out her forward impellers!',\n\t\t'Direct hit on their com section!',\n\t\t'We just took out most of her missile tracking capability!',\n\t\t'One hit, port side aft!',\n\t\t'A hit, Sir! At least one, and—',\n\t\t'Her forward impellers are down!',\n\t\t'Roll port! All batteries, engage!',\n\t\t'Engage with forward batteries!',\n\t\t\"They're taking the bait, Sir!\",\n\t\t'Formation Reno, Com—get those carriers in tighter!',\n\t\t'Recompute firing pattern.',\n\t\t'We just took out their forward impellers!',\n\t\t\"We've got a hit on their port engines, Sir! They're losing speed!\",\n\t\t'Direct hit on their main power junction, Sir! Their weapons are offline!',\n\t\t\"We've hit their fuel tanks, Sir! They're venting plasma!\",\n\t\t\"Their sidewalls are failing, Sir! One more hit and they're done for!\",\n\t\t\"We just took out their bridge, Sir! They're blind and adrift!\",\n\t\t\"Direct hit on their missile tubes, Sir! They're defenseless!\",\n\t\t\"We've knocked out their point defense, Sir! Our missiles are getting through!\",\n\t\t\"They're trying to break off, Sir! Keep up the pressure!\",\n\t\t\"We've taken out their propulsion, Sir! They're dead in the water!\",\n\t\t\"Their forward batteries are destroyed, Sir! They can't return fire!\",\n\t\t\"We've hit their command and control, Sir! They're in chaos!\",\n\t\t\"They're splitting their fire, Sir! Focus on the weaker target!\",\n\t\t\"Their port sidewall's down, Sir! We can take them out!\",\n\t\t\"We've disrupted their sensor array, Sir! They can't get a clear reading on us!\",\n\t\t\"Their maneuvering thrusters are offline, Sir! They can't evade us!\",\n\t],\n\tdamageOnShip: [\n\t\t\"Forward hold open to space! Mooring Tractor One's gone! Heavy casualties in Fusion One!\",\n\t\t\"They've lost Damage Control Three, Sir!\",\n\t\t\"Missile One is down, Sir! They're down to one tube.\",\n\t\t'Spinal Four gone, Sir!',\n\t\t\"They've lost the secondary fire control sensors!. Primaries unaffected.\",\n\t\t'Damage control to the bridge! Corpsman to the bridge!',\n\t\t\"Fusion One, Sir! The mag bottle's fluctuating and can't be shut down from here—something's cut the circuits!\",\n\t\t\"Sir, They're down to twelve birds for Missile Two, and out of laser heads.\",\n\t\t'Heavy damage aft! No contact at all with Two-Four or Two-Six.',\n\t\t\"Sir, They've lost a beta node; their acceleration is dropping.\",\n\t\t\"Theye've lost another beta node, Sir\",\n\t\t\"Point defense is hurt bad, Sir! They've lost four laser clusters and half their phased radar array.\",\n\t\t\"They've lost an energy torpedo and Number Two Laser out of the starboard broadside, but at least the starboard sidewall is still up.\",\n\t\t'Tractor Seven is gone!',\n\t\t'Compartments Eight-Niner-Two and Niner-Three open to space. No casualties!',\n\t\t'Two hits forward! Laser Three and Five destroyed. Radar Five is gone, Sir! Heavy casualties in Laser Three!',\n\t\t'Missile Two-One and Graser One gone! Heavy damage in the boat bay and Berthing Compartment Seven-five!',\n\t\t\"They've taken a hit, but we won't let that break our resolve! Medical teams to the casualties, and everyone else stay focused!\",\n\t\t\"Port torp tubes are down, Sir! They've lost half of their firepower!\",\n\t\t\"Sir, They've lost the entire port quarter! The starboard sidewall is holding, but not for long!\",\n\t\t\"Their starboard broadside is crippled, Sir! They've lost four laser clusters and our neutron cannon!\",\n\t\t\"They've lost Graser Three and Four, Sir! They're down to just two guns!\",\n\t\t\"The port wedge generator's gone, Sir! They're losing acceleration!\",\n\t\t\"Sir, They've lost two-thirds of our point defense capability! The enemy missiles are getting through!\",\n\t\t\"They've lost the aft fusion bottle, Sir! They're down to just one engine!\",\n\t\t\"Sir, They've lost our forward array! They can't get a clear reading on the enemy!\",\n\t\t\"They've lost their main battery, Sir! The enemy ship is still coming!\",\n\t\t\"They've lost three out of four grav plates, Sir! They're adrift!\",\n\t\t\"Sir, They've lost all communication with the forward compartments! They don't know what's happening up there!\",\n\t\t\"The port missile tube's destroyed, Sir! They're down to just one tube and no spares!\",\n\t\t\"The enemy's hit them with a grav lance, Sir! The hull's buckling!\",\n\t\t\"They've lost the port-side maneuvering thrusters, Sir! They can't dodge their fire!\",\n\t\t\"Sir, They've lost the entire bridge! They're blind and drifting!\",\n\t\t\"They've lost our aft impellers! They're drifting into enemy fire!\",\n\t\t\"Port engines destroyed! They can't maintain acceleration!\",\n\t\t\"Enemy has taken out their point defense! They're defenseless!\",\n\t\t\"Fusion reactor's gone critical!\",\n\t\t\"They've lost our port sidewall! They're tearing them apart!\",\n\t\t\"They maneuvering thrusters are destroyed! They can't dodge their fire!\",\n\t\t\"They've lost their forward impellers! They're drifting into enemy fire!\",\n\t\t\"Direct hit on their main battery! They're powerless!\",\n\t\t\"They've hit the bridge! They're going down!\",\n\t\t'Missiles incoming! Brace for impact!',\n\t\t\"Enemy has taken out their sensors! We can't get a lock on them!\",\n\t\t\"They've lost their main engines! They're dead in the water!\",\n\t\t\"Enemy has breached their hull! They're venting atmosphere!\",\n\t\t\"Their missile tubes are destroyed! They're helpless!\",\n\t\t\"They've lost their port battery! They can't return fire!\",\n\t],\n\tmissesOnShip: [\n\t\t'Dammit! We missed our target! Recalibrate those weapons and try again!',\n\t\t\"Target that ship again! We can't let them get away!\",\n\t\t\"They're dodging our fire! Keep your eyes on them and don't let them get away!\",\n\t\t\"We're not giving up that easily! Reload the missiles and try again!\",\n\t\t\"They're faster than we thought! Keep the pressure on them and don't let up!\",\n\t\t\"Don't let them get away! Target their engines and take them out!\",\n\t\t\"We missed the mark that time, but we'll get them next time! Keep those weapons hot!\",\n\t\t\"Target that ship and don't let them out of our sights! We can't let them escape!\",\n\t\t\"We missed them, but they won't get away that easily! Keep the fire coming!\",\n\t\t\"They're too nimble for us! We need to anticipate their movements and adjust our aim!\",\n\t\t\"Don't lose focus, people! Keep those weapons trained on the target and wait for the right moment to strike!\",\n\t\t'Our sensors are picking up their trajectory! Get those weapons locked in and fire at will!',\n\t\t\"They're trying to evade us! Stay alert and keep that ship in your crosshairs!\",\n\t\t\"We may have missed them this time, but we'll get another chance! Keep the pressure on!\",\n\t\t\"Don't let their maneuvers distract you! Stay on target and keep up the barrage!\",\n\t\t'The enemy has returned fire!',\n\t\t'Tracking reports sixteen incoming, Sir!',\n\t\t'Enemy jamming primary tracking systems!',\n\t\t'Enemy countermeasures active!',\n\t\t'Crossing minefield attack perimeter—now!',\n\t\t//\n\t\t'They missed! Counter missiles now!',\n\t\t'Ha! Go to rapid fire on all tubes!',\n\t\t\"We won't get another chance! Get those impellers back for me, Lieutenant!\",\n\t\t'A miss! Increase acceleration to max!',\n\t\t\"This is our chance! Close the range. We'll finish her with energy fire!\",\n\t\t'Missiles at three-five-two! Lucky this time..',\n\t\t'Hard a starboard!',\n\t\t'Pursuit vector, maximum acceleration!',\n\t\t'General signal to all heavy carriers. Return to formation at once. Repeat, return to formation at once!',\n\t\t'Damn! We missed them!',\n\t\t'Target evaded, adjust trajectory!',\n\t\t'All forward batteries, recalibrate and fire again!',\n\t\t\"They slipped away, but we'll get them next time!\",\n\t\t'Missed, but keep those guns trained on them!',\n\t\t\"They're too quick for us, but we'll catch up eventually!\",\n\t\t\"Continue evasive maneuvers, we'll have another chance!\",\n\t\t\"Fire again, don't let them escape!\",\n\t\t\"They're agile, but we'll find a way to hit them!\",\n\t\t\"We can't let them get away, keep firing!\",\n\t\t\"Target outmaneuvered us, but we're not giving up!\",\n\t\t\"Missed by a hair, but we'll make the next one count!\",\n\t\t\"Don't worry, we'll get them on the next pass!\",\n\t\t\"They're too fast, adjust for their trajectory and try again!\",\n\t\t\"That was too close, but we'll come back around!\",\n\t\t'We missed, but keep your focus and stay on target!',\n\t\t\"Their maneuvering is impressive, but we'll take them down eventually!\",\n\t\t'We need to anticipate their movements and adjust accordingly!',\n\t\t'Missed, but keep firing and keep them on the defensive!',\n\t],\n\tplayerShipDestroyed: [\n\t\t\"They've taken out one of our own! But we won't let their sacrifice be in vain. Keep fighting!\",\n\t\t'The loss of that ship is a tragedy, but we must stay focused and fight on!',\n\t\t\"We've lost a valuable ally, but we won't give up this fight! Keep pushing forward!\",\n\t\t\"The enemy has shown us no mercy, but we won't give them any either! Keep the pressure on!\",\n\t\t\"We mourn the loss of our comrades, but we won't let their sacrifice be forgotten. We'll fight on in their memory!\",\n\t\t\"We've lost one of our own, but we won't let their death be in vain. Keep up the fight!\",\n\t\t\"They may have taken out one of our ships, but they won't take us all down! Keep fighting, people!\",\n\t\t\"The loss of that ship is a heavy blow, but we won't let it break our spirit. Keep up the attack!\",\n\t\t\"The enemy thinks they've gained an advantage, but we won't let them win that easily. Stay strong, and stay focused!\",\n\t\t\"Our hearts go out to our fallen comrades, but we won't let their sacrifice be for nothing. Keep fighting, people!\",\n\t\t\"They've taken out one of our own, but we won't let that stop us. We'll avenge them and push on!\",\n\t\t\"The loss of that ship is a painful reminder of the stakes of this battle, but we won't give up. Keep the pressure on!\",\n\t\t\"Our enemy has struck a blow, but we will not be defeated! We will fight on and show them what we're made of!\",\n\t\t\"We've lost one of our own, but we won't let that deter us. We'll avenge them and continue the fight!\",\n\t\t\"The enemy has claimed one of our ships, but they won't claim us all. Keep the battle raging!\",\n\t],\n\n\tcompShipDestroyed: [\n\t\t\"Yes! She's streaming air, Sir!\",\n\t\t'Enemy vessel destroyed! Good shooting, people!',\n\t\t'That should give them something to think about!',\n\t\t'Target eliminated! Move on to the next one!',\n\t\t\"We've neutralized their threat! On to the next target!\",\n\t\t\"Enemy ship down! Let's keep up the pressure!\",\n\t\t\"That'll teach them to mess with us!\",\n\t\t'Nice work, everyone! Keep it up!',\n\t\t\"Enemy vessel neutralized! Let's keep the momentum going!\",\n\t\t\"Target destroyed! Now let's take out their friends!\",\n\t\t\"That's one less enemy to worry about!\",\n\t\t\"Enemy vessel eliminated! Let's keep pushing forward!\",\n\t\t'Direct hit! Enemy ship destroyed!',\n\t\t\"Good shooting, gunners! That one's not coming back!\",\n\t\t'Enemy vessel neutralized! Keep up the good work!',\n\t\t\"Target eliminated! Let's move on to the next one!\",\n\t\t'Enemy vessel down! Keep the pressure on!',\n\t\t'Another one bites the dust! Great job, everyone!',\n\t\t\"Enemy ship destroyed! Let's keep up the pace!\",\n\t\t'Target destroyed! Now onto the next one!',\n\t\t\"We've taken out an enemy vessel! Let's go for more!\",\n\t\t'Enemy vessel neutralized! Keep up the good work, crew!',\n\t\t'Direct hit! Enemy ship destroyed! Excellent shooting!',\n\t\t\"We've eliminated an enemy vessel! Let's keep the momentum going!\",\n\t\t'Enemy ship down! Great work, everyone!',\n\t\t\"Target destroyed! We're one step closer to victory!\",\n\t\t\"Enemy vessel eliminated! Let's keep pushing forward!\",\n\t],\n};\n\nexport { battleTexts };\n","function tossCoin(): boolean {\n\treturn Math.random() > 0.5;\n}\n\nexport { tossCoin };\n","import { battleTexts } from '../data/battleTexts';\nimport { createTypewriterEffect } from './createTypewriterEffect';\nimport { appendElemToParent, elemCreator } from './elementCreators';\nimport { tossCoin } from './tossCoin';\nimport { Div, RandomizedHavenShipNames, RandomizedManticoreShipNames } from './types';\n\ntype RenderBattleMessageHelperProps = {\n\ttowardsCombatant: 'player' | 'comp';\n\tfiredStatus: 'hit' | 'miss' | 'sunk';\n\tshipTypeHit?: string;\n\tshipNumber?: number;\n};\n\nasync function renderBattleMessageHelper({\n\ttowardsCombatant,\n\tfiredStatus,\n\tshipTypeHit,\n\tshipNumber,\n}: RenderBattleMessageHelperProps): Promise<void> {\n\tconst randHitsStrings = [\n\t\t'A hit on',\n\t\t'Direct hit on',\n\t\t'Shields weak on',\n\t\t'Hull integrity is weakening on',\n\t\t'Impellers damaged on',\n\t\t'Engines are out on',\n\t\t'Weapons systems offline on',\n\t\t'Life support failing on',\n\t\t'Structural damage on',\n\t\t'Reactor breach on',\n\t\t'Target immobilized on',\n\t\t'Power systems fluctuating on',\n\t\t'Navigational systems down on',\n\t\t'Communication systems disabled on',\n\t\t'Gravity generators failing on',\n\t\t'Primary sensor array damaged on',\n\t\t'Secondary defenses compromised on',\n\t\t'Point defense systems offline on',\n\t\t'Missile tubes destroyed on',\n\t];\n\tconst hitsPrecursorString = () =>\n\t\trandHitsStrings[Math.floor(Math.random() * randHitsStrings.length)];\n\n\tconst havenShipNames: RandomizedHavenShipNames = JSON.parse(\n\t\tlocalStorage.getItem('havenShipNames') ?? ''\n\t);\n\tconst manticoreShipNames: RandomizedManticoreShipNames = JSON.parse(\n\t\tlocalStorage.getItem('manticoreShipNames') ?? ''\n\t);\n\n\tconst playerName = JSON.parse(localStorage.getItem('playerName') ?? '');\n\n\tconst battleMessageContainer: Div = document.querySelector('.battleMessage-container');\n\n\tconst battleMessageElem = elemCreator('p')(['battleMessageElem']);\n\tappendElemToParent(battleMessageContainer)(battleMessageElem);\n\n\tconst today = new Date();\n\tconst formatter = new Intl.DateTimeFormat('en-US', {\n\t\thour: 'numeric',\n\t\tminute: 'numeric',\n\t\tsecond: 'numeric',\n\t});\n\tconst formattedTime = formatter.format(today);\n\n\tconst shipName =\n\t\ttowardsCombatant === 'comp'\n\t\t\t? shipTypeHit &&\n\t\t\t  (shipTypeHit === 'superdreadnought'\n\t\t\t\t\t? havenShipNames.superdreadnought\n\t\t\t\t\t: shipTypeHit === 'carrier'\n\t\t\t\t\t? havenShipNames.carrier\n\t\t\t\t\t: shipTypeHit === 'battleship'\n\t\t\t\t\t? havenShipNames.battleship\n\t\t\t\t\t: shipTypeHit === 'destroyer' && shipNumber\n\t\t\t\t\t? havenShipNames.destroyers[shipNumber]\n\t\t\t\t\t: shipTypeHit === 'frigate' && shipNumber\n\t\t\t\t\t? havenShipNames.frigates[shipNumber]\n\t\t\t\t\t: '')\n\t\t\t: shipTypeHit &&\n\t\t\t  (shipTypeHit === 'superdreadnought'\n\t\t\t\t\t? manticoreShipNames.superdreadnought\n\t\t\t\t\t: shipTypeHit === 'carrier'\n\t\t\t\t\t? manticoreShipNames.carrier\n\t\t\t\t\t: shipTypeHit === 'battleship'\n\t\t\t\t\t? manticoreShipNames.battleship\n\t\t\t\t\t: shipTypeHit === 'destroyer' && shipNumber\n\t\t\t\t\t? manticoreShipNames.destroyers[shipNumber]\n\t\t\t\t\t: shipTypeHit === 'frigate' && shipNumber\n\t\t\t\t\t? manticoreShipNames.frigates[shipNumber]\n\t\t\t\t\t: '');\n\n\tif (towardsCombatant === 'comp') {\n\t\tconst statusText =\n\t\t\tfiredStatus === 'hit'\n\t\t\t\t? battleTexts.hitsOnShip[\n\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.hitsOnShip.length)\n\t\t\t\t  ]\n\t\t\t\t: firedStatus === 'miss'\n\t\t\t\t? battleTexts.missesOnShip[\n\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.missesOnShip.length)\n\t\t\t\t  ]\n\t\t\t\t: firedStatus === 'sunk'\n\t\t\t\t? battleTexts.compShipDestroyed[\n\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.compShipDestroyed.length)\n\t\t\t\t  ]\n\t\t\t\t: '';\n\n\t\t// if ship was hit or sunk\n\t\tif (shipTypeHit) {\n\t\t\tconst battleMessageStrings = [\n\t\t\t\t`${formattedTime}:: ${\n\t\t\t\t\ttossCoin() ? `Admiral ${playerName}!` : ''\n\t\t\t\t} ${hitsPrecursorString()} the PNS ${shipName}! ${statusText}`,\n\t\t\t];\n\n\t\t\tcreateTypewriterEffect({\n\t\t\t\tcontainerElem: battleMessageContainer,\n\t\t\t\tstrings: battleMessageStrings,\n\t\t\t\tspeed: 15,\n\t\t\t});\n\t\t}\n\t\t// if ship was missed\n\t\telse {\n\t\t\tconst battleMessageStrings = [`${formattedTime}::\t${statusText}`];\n\n\t\t\tcreateTypewriterEffect({\n\t\t\t\tcontainerElem: battleMessageContainer,\n\t\t\t\tstrings: battleMessageStrings,\n\t\t\t\tspeed: 15,\n\t\t\t});\n\t\t}\n\t} else if (towardsCombatant === 'player') {\n\t\t// if a miss towards player dont display a message\n\t\tif (!shipTypeHit) return;\n\n\t\t// only add text if ship was hit or sunk\n\t\tconst statusText =\n\t\t\tfiredStatus === 'hit'\n\t\t\t\t? battleTexts.damageOnShip[\n\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.damageOnShip.length)\n\t\t\t\t  ]\n\t\t\t\t: firedStatus === 'sunk'\n\t\t\t\t? battleTexts.playerShipDestroyed[\n\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.playerShipDestroyed.length)\n\t\t\t\t  ]\n\t\t\t\t: '';\n\n\t\tif (firedStatus === 'hit') {\n\t\t\tconst battleMessageStrings = [\n\t\t\t\t`${formattedTime}::\t${\n\t\t\t\t\ttossCoin() ? `Admiral ${playerName}!` : ''\n\t\t\t\t} ${hitsPrecursorString()} the ${shipTypeHit} RMNS ${shipName}! ${statusText}`,\n\t\t\t];\n\n\t\t\tcreateTypewriterEffect({\n\t\t\t\tcontainerElem: battleMessageContainer,\n\t\t\t\tstrings: battleMessageStrings,\n\t\t\t\tspeed: 15,\n\t\t\t});\n\t\t} else if (firedStatus === 'sunk') {\n\t\t\tconst battleMessageStrings = [\n\t\t\t\t`${formattedTime}::\t${hitsPrecursorString()} the ${shipTypeHit} RMNS ${shipName}! Admiral ${playerName}! Core breach detected!\n\t\t\t\t...\n\t\t\t\tSir, she's gone... Dear God, all those people... `,\n\t\t\t];\n\n\t\t\tcreateTypewriterEffect({\n\t\t\t\tcontainerElem: battleMessageContainer,\n\t\t\t\tstrings: battleMessageStrings,\n\t\t\t\tspeed: 15,\n\t\t\t});\n\t\t}\n\t}\n}\nexport { renderBattleMessageHelper };\n","import { appendElemToParent, elemCreator } from '../functions/elementCreators';\nimport { renderBattleMessageHelper } from '../functions/renderBattleMessageHelper';\nimport {\n\tDestroyer,\n\tDiv,\n\tFrigate,\n\tRandomizedHavenShipNames,\n\tRandomizedManticoreShipNames,\n} from '../functions/types';\n\ntype renderBattleMessageElemProps = {\n\tcurrentCellCoord: string;\n\tcurrentShipSymbol: string;\n\ttowardsCombatant: 'player' | 'comp';\n\thitOrMiss: 'hit' | 'miss';\n\tsunkShipName?: string;\n};\n\nconst renderBattleMessageElem = async function ({\n\tcurrentCellCoord,\n\tcurrentShipSymbol,\n\ttowardsCombatant,\n\thitOrMiss,\n\tsunkShipName,\n}: renderBattleMessageElemProps): Promise<void> {\n\tconst havenShipNames: RandomizedHavenShipNames = JSON.parse(\n\t\tlocalStorage.getItem('havenShipNames') ?? ''\n\t);\n\tconst manticoreShipNames: RandomizedManticoreShipNames = JSON.parse(\n\t\tlocalStorage.getItem('manticoreShipNames') ?? ''\n\t);\n\n\tconst battleMessageContainer: Div = document.querySelector('.battleMessage-container');\n\n\tconst battleMessageElem = elemCreator('p')(['battleMessageElem']);\n\tappendElemToParent(battleMessageContainer)(battleMessageElem);\n\n\tif (towardsCombatant === 'comp') {\n\t\t// checks what compShip currentCellCoord is part of, as the compGridCells do not pass in a string textContent to differentiate between the ship types unlike the playerGridCells\n\t\tconst compSuperdreadnought: string[] = Object.values(\n\t\t\tJSON.parse(localStorage.getItem('compSuperdreadnought') ?? JSON.stringify([]))\n\t\t);\n\t\tconst compCarrier: string[] = Object.values(\n\t\t\tJSON.parse(localStorage.getItem('compCarrier') ?? JSON.stringify([]))\n\t\t);\n\t\tconst compBattleship: string[] = Object.values(\n\t\t\tJSON.parse(localStorage.getItem('compBattleship') ?? JSON.stringify([]))\n\t\t);\n\n\t\t// destroyers consists of an array of objects\n\t\tconst compDestroyers: string[] = JSON.parse(\n\t\t\tlocalStorage.getItem('compDestroyers') ?? JSON.stringify([])\n\t\t).flatMap((destroyer: Destroyer) => Object.values(destroyer));\n\n\t\tconst compFrigates: string[] = JSON.parse(\n\t\t\tlocalStorage.getItem('compFrigates') ?? JSON.stringify([])\n\t\t).flatMap((frigate: Frigate) => Object.values(frigate));\n\n\t\tif (hitOrMiss === 'hit') {\n\t\t\t// player attacking computer scores a hit\n\t\t\tif (compSuperdreadnought.includes(currentCellCoord)) {\n\t\t\t\t// displays hit on superdreadnought with randomized text\n\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\ttowardsCombatant: 'comp',\n\t\t\t\t\tfiredStatus: 'hit',\n\t\t\t\t\tshipTypeHit: 'superdreadnought',\n\t\t\t\t});\n\t\t\t} else if (compCarrier.includes(currentCellCoord)) {\n\t\t\t\t// displays hit on carrier with randomized text\n\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\ttowardsCombatant: 'comp',\n\t\t\t\t\tfiredStatus: 'hit',\n\t\t\t\t\tshipTypeHit: 'carrier',\n\t\t\t\t});\n\t\t\t} else if (compBattleship.includes(currentCellCoord)) {\n\t\t\t\t// displays hit on battleship with randomized text\n\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\ttowardsCombatant: 'comp',\n\t\t\t\t\tfiredStatus: 'hit',\n\t\t\t\t\tshipTypeHit: 'battleship',\n\t\t\t\t});\n\t\t\t} else if (compDestroyers.includes(currentCellCoord)) {\n\t\t\t\t// there are two destroyers to connect names\n\t\t\t\tconst [destroyer1Coords, _]: string[] = JSON.parse(\n\t\t\t\t\tlocalStorage.getItem('compDestroyers') ?? JSON.stringify([])\n\t\t\t\t).map((destroyer: Destroyer) => Object.values(destroyer));\n\n\t\t\t\t// displays hit on destroyer with randomized text\n\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\ttowardsCombatant: 'comp',\n\t\t\t\t\tfiredStatus: 'hit',\n\t\t\t\t\tshipTypeHit: 'destroyer',\n\t\t\t\t\tshipNumber: destroyer1Coords.includes(currentCellCoord) ? 0 : 1,\n\t\t\t\t});\n\t\t\t} else if (compFrigates.includes(currentCellCoord)) {\n\t\t\t\t// there are two frigates to connect names\n\t\t\t\tconst [frigate1Coords, _]: string[] = JSON.parse(\n\t\t\t\t\tlocalStorage.getItem('compFrigates') ?? JSON.stringify([])\n\t\t\t\t).map((frigate: Frigate) => Object.values(frigate));\n\n\t\t\t\t// displays hit on frigate with randomized text\n\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\ttowardsCombatant: 'comp',\n\t\t\t\t\tfiredStatus: 'hit',\n\t\t\t\t\tshipTypeHit: 'frigate',\n\t\t\t\t\tshipNumber: frigate1Coords.includes(currentCellCoord) ? 0 : 1,\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (hitOrMiss === 'miss') {\n\t\t\t// player attacking computer misses\n\t\t\t// displays miss on computer with randomized text\n\t\t\trenderBattleMessageHelper({\n\t\t\t\ttowardsCombatant: 'comp',\n\t\t\t\tfiredStatus: 'miss',\n\t\t\t});\n\t\t}\n\t} else if (towardsCombatant === 'player') {\n\t\tif (hitOrMiss === 'hit') {\n\t\t\t// if computer attacking player registers a hit\n\t\t\tif (currentShipSymbol === 'S') {\n\t\t\t\t// computer hits player's superdreadnought\n\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\ttowardsCombatant: 'player',\n\t\t\t\t\tfiredStatus: 'hit',\n\t\t\t\t\tshipTypeHit: 'superdreadnought',\n\t\t\t\t});\n\n\t\t\t\t// comp sinks player's superdreadnought\n\t\t\t\tif (sunkShipName === manticoreShipNames.superdreadnought) {\n\t\t\t\t\t// player CIC text that indicates that computer has sunk their superdreadnought\n\t\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\t\ttowardsCombatant: 'player',\n\t\t\t\t\t\tfiredStatus: 'sunk',\n\t\t\t\t\t\tshipTypeHit: 'superdreadnought',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (currentShipSymbol === 'C') {\n\t\t\t\t// computer hits player's carrier\n\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\ttowardsCombatant: 'player',\n\t\t\t\t\tfiredStatus: 'hit',\n\t\t\t\t\tshipTypeHit: 'carrier',\n\t\t\t\t});\n\n\t\t\t\t// comp sinks player's carrier\n\t\t\t\tif (sunkShipName === manticoreShipNames.carrier) {\n\t\t\t\t\t// player CIC text that indicates that computer has sunk their carrier\n\t\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\t\ttowardsCombatant: 'player',\n\t\t\t\t\t\tfiredStatus: 'sunk',\n\t\t\t\t\t\tshipTypeHit: 'carrier',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (currentShipSymbol === 'B') {\n\t\t\t\t// computer hits player's battleship\n\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\ttowardsCombatant: 'player',\n\t\t\t\t\tfiredStatus: 'hit',\n\t\t\t\t\tshipTypeHit: 'battleship',\n\t\t\t\t});\n\n\t\t\t\t// comp sinks player's battleship\n\t\t\t\tif (sunkShipName === manticoreShipNames.battleship) {\n\t\t\t\t\t// player CIC text that indicates that computer has sunk their battleship\n\t\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\t\ttowardsCombatant: 'player',\n\t\t\t\t\t\tfiredStatus: 'sunk',\n\t\t\t\t\t\tshipTypeHit: 'battleship',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (currentShipSymbol === 'D') {\n\t\t\t\t// there are two destroyers to connect names\n\t\t\t\tconst [destroyer1, _]: Destroyer[] = JSON.parse(\n\t\t\t\t\tlocalStorage.getItem('destroyer') ?? ''\n\t\t\t\t);\n\t\t\t\tconst destroyer1Coords: string[] = Object.values(destroyer1);\n\n\t\t\t\t// computer hits player's destroyer\n\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\ttowardsCombatant: 'player',\n\t\t\t\t\tfiredStatus: 'hit',\n\t\t\t\t\tshipTypeHit: 'destroyer',\n\t\t\t\t\tshipNumber: destroyer1Coords.includes(currentCellCoord) ? 0 : 1,\n\t\t\t\t});\n\n\t\t\t\t// comp sinks player's destroyer\n\t\t\t\tif (\n\t\t\t\t\tsunkShipName === manticoreShipNames.destroyers[0] ||\n\t\t\t\t\tsunkShipName === manticoreShipNames.destroyers[1]\n\t\t\t\t) {\n\t\t\t\t\t// player CIC text that indicates that computer has sunk their destroyer\n\t\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\t\ttowardsCombatant: 'player',\n\t\t\t\t\t\tfiredStatus: 'sunk',\n\t\t\t\t\t\tshipTypeHit: 'destroyer',\n\t\t\t\t\t\tshipNumber: destroyer1Coords.includes(currentCellCoord) ? 0 : 1,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (currentShipSymbol === 'F') {\n\t\t\t\t// there are two frigates to connect names\n\t\t\t\tconst [frigate1, _]: Frigate[] = JSON.parse(\n\t\t\t\t\tlocalStorage.getItem('frigate') ?? ''\n\t\t\t\t);\n\t\t\t\tconst frigate1Coords: string[] = Object.values(frigate1);\n\n\t\t\t\t// computer hits player's frigate\n\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\ttowardsCombatant: 'player',\n\t\t\t\t\tfiredStatus: 'hit',\n\t\t\t\t\tshipTypeHit: 'frigate',\n\t\t\t\t\tshipNumber: frigate1Coords.includes(currentCellCoord) ? 0 : 1,\n\t\t\t\t});\n\n\t\t\t\t// comp sinks player's frigate\n\t\t\t\tif (\n\t\t\t\t\tsunkShipName === manticoreShipNames.frigates[0] ||\n\t\t\t\t\tsunkShipName === manticoreShipNames.frigates[1]\n\t\t\t\t) {\n\t\t\t\t\t// player CIC text that indicates that computer has sunk their frigate\n\t\t\t\t\trenderBattleMessageHelper({\n\t\t\t\t\t\ttowardsCombatant: 'player',\n\t\t\t\t\t\tfiredStatus: 'sunk',\n\t\t\t\t\t\tshipTypeHit: 'frigate',\n\t\t\t\t\t\tshipNumber: frigate1Coords.includes(currentCellCoord) ? 0 : 1,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//auto-scrolls to the bottom to have the most recent message visible\n\tconst scrollHeight = battleMessageContainer?.scrollHeight ?? 0;\n\n\tbattleMessageContainer?.scroll({ top: scrollHeight, left: 0, behavior: 'smooth' });\n};\nexport { renderBattleMessageElem };\n","import { PlayerCompShipsCoords } from './types';\n\ntype ReturnShipSymbolFromCoordProps = {\n\tplayerCompShipsCoords: PlayerCompShipsCoords;\n\tcurrentCellCoord: string;\n\ttowardsCombatant: 'player' | 'comp';\n};\n\nfunction returnShipSymbolFromCoord({\n\tplayerCompShipsCoords,\n\tcurrentCellCoord,\n\ttowardsCombatant,\n}: ReturnShipSymbolFromCoordProps): string {\n\tconst { playerShipCoords, compShipCoords } = playerCompShipsCoords;\n\n\tlet shipSymbol = '';\n\n\tif (towardsCombatant === 'player') {\n\t\tshipSymbol = Object.entries(playerShipCoords).reduce(\n\t\t\t(acc, [shipName, shipCoords]: [string, string[] | string[][]]) => {\n\t\t\t\tconst shipCoords_ = shipCoords.flat(3);\n\t\t\t\tif (shipCoords_.includes(currentCellCoord)) {\n\t\t\t\t\tacc = shipName[0].toUpperCase();\n\t\t\t\t}\n\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\t''\n\t\t);\n\t}\n\n\tif (towardsCombatant === 'comp') {\n\t\tshipSymbol = Object.entries(compShipCoords).reduce(\n\t\t\t(acc, [shipName, shipCoords]: [string, string[] | string[][]]) => {\n\t\t\t\tconst shipCoords_ = shipCoords.flat(3);\n\t\t\t\tif (shipCoords_.includes(currentCellCoord)) {\n\t\t\t\t\tacc = shipName[0].toUpperCase();\n\t\t\t\t}\n\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\t''\n\t\t);\n\t}\n\n\treturn shipSymbol;\n}\n\nexport { returnShipSymbolFromCoord };\n","import { returnPlayerCompShipsCoords } from './returnPlayerCompShipsCoords';\nimport {\n\tRandomizedHavenShipNames,\n\tRandomizedManticoreShipNames,\n\tShipHits,\n} from './types';\n\n// returns an object with the sunk ship name if a ship has been sunk\nfunction returnSunkShipObj(\n\tcurrentCellCoord: string,\n\tcurrentShipSymbol: string,\n\ttowardsCombatant: 'player' | 'comp'\n): { player: null | string; comp: null | string } {\n\tconst playerCompShipsCoords = returnPlayerCompShipsCoords();\n\n\t// store hits on ships to determine if a ship has been sunk\n\tconst shipHits: ShipHits = JSON.parse(\n\t\tlocalStorage.getItem('shipHits') ??\n\t\t\tJSON.stringify({\n\t\t\t\tplayerShips: {\n\t\t\t\t\tsuperdreadnought: 0,\n\t\t\t\t\tcarrier: 0,\n\t\t\t\t\tbattleship: 0,\n\t\t\t\t\tdestroyers: [0, 0],\n\t\t\t\t\tfrigates: [0, 0],\n\t\t\t\t},\n\t\t\t\tcompShips: {\n\t\t\t\t\tsuperdreadnought: 0,\n\t\t\t\t\tcarrier: 0,\n\t\t\t\t\tbattleship: 0,\n\t\t\t\t\tdestroyers: [0, 0],\n\t\t\t\t\tfrigates: [0, 0],\n\t\t\t\t},\n\t\t\t})\n\t);\n\n\tconst havenShipNames: RandomizedHavenShipNames = JSON.parse(\n\t\tlocalStorage.getItem('havenShipNames') ?? ''\n\t);\n\tconst manticoreShipNames: RandomizedManticoreShipNames = JSON.parse(\n\t\tlocalStorage.getItem('manticoreShipNames') ?? ''\n\t);\n\n\tconst sunkShipObj: { player: null | string; comp: null | string } = {\n\t\tplayer: null,\n\t\tcomp: null,\n\t};\n\n\tif (towardsCombatant === 'player') {\n\t\tswitch (currentShipSymbol) {\n\t\t\tcase 'S': {\n\t\t\t\tshipHits.playerShips.superdreadnought < 4\n\t\t\t\t\t? (shipHits.playerShips.superdreadnought += 1)\n\t\t\t\t\t: (sunkShipObj.player = manticoreShipNames.superdreadnought);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'C': {\n\t\t\t\tshipHits.playerShips.carrier < 3\n\t\t\t\t\t? (shipHits.playerShips.carrier += 1)\n\t\t\t\t\t: (sunkShipObj.player = manticoreShipNames.carrier);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'B': {\n\t\t\t\tshipHits.playerShips.battleship < 2\n\t\t\t\t\t? (shipHits.playerShips.battleship += 1)\n\t\t\t\t\t: (sunkShipObj.player = manticoreShipNames.battleship);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'D': {\n\t\t\t\tif (\n\t\t\t\t\tplayerCompShipsCoords.playerShipCoords.destroyers[0].includes(currentCellCoord)\n\t\t\t\t) {\n\t\t\t\t\tshipHits.playerShips.destroyers[0] < 1\n\t\t\t\t\t\t? (shipHits.playerShips.destroyers[0] += 1)\n\t\t\t\t\t\t: (sunkShipObj.player = manticoreShipNames.destroyers[0]);\n\t\t\t\t} else {\n\t\t\t\t\tshipHits.playerShips.destroyers[1] < 1\n\t\t\t\t\t\t? (shipHits.playerShips.destroyers[1] += 1)\n\t\t\t\t\t\t: (sunkShipObj.player = manticoreShipNames.destroyers[1]);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'F': {\n\t\t\t\tif (\n\t\t\t\t\tplayerCompShipsCoords.playerShipCoords.frigates[0].includes(currentCellCoord)\n\t\t\t\t) {\n\t\t\t\t\tsunkShipObj.player = manticoreShipNames.frigates[0];\n\t\t\t\t} else sunkShipObj.player = manticoreShipNames.frigates[1];\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t// towards combatant === 'comp'\n\telse {\n\t\tswitch (currentShipSymbol) {\n\t\t\tcase 'S': {\n\t\t\t\tshipHits.compShips.superdreadnought < 4\n\t\t\t\t\t? (shipHits.compShips.superdreadnought += 1)\n\t\t\t\t\t: (sunkShipObj.comp = havenShipNames.superdreadnought);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'C': {\n\t\t\t\tshipHits.compShips.carrier < 3\n\t\t\t\t\t? (shipHits.compShips.carrier += 1)\n\t\t\t\t\t: (sunkShipObj.comp = havenShipNames.carrier);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'B': {\n\t\t\t\tshipHits.compShips.battleship < 2\n\t\t\t\t\t? (shipHits.compShips.battleship += 1)\n\t\t\t\t\t: (sunkShipObj.comp = havenShipNames.battleship);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'D': {\n\t\t\t\tif (\n\t\t\t\t\tplayerCompShipsCoords.compShipCoords.destroyers[0].includes(currentCellCoord)\n\t\t\t\t) {\n\t\t\t\t\tshipHits.compShips.destroyers[0] < 1\n\t\t\t\t\t\t? (shipHits.compShips.destroyers[0] += 1)\n\t\t\t\t\t\t: (sunkShipObj.comp = havenShipNames.destroyers[0]);\n\t\t\t\t} else {\n\t\t\t\t\tshipHits.compShips.destroyers[1] < 1\n\t\t\t\t\t\t? (shipHits.compShips.destroyers[1] += 1)\n\t\t\t\t\t\t: (sunkShipObj.comp = havenShipNames.destroyers[1]);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'F': {\n\t\t\t\tif (playerCompShipsCoords.compShipCoords.frigates[0].includes(currentCellCoord)) {\n\t\t\t\t\tsunkShipObj.comp = havenShipNames.frigates[0];\n\t\t\t\t} else sunkShipObj.comp = havenShipNames.frigates[1];\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tlocalStorage.setItem('shipHits', JSON.stringify(shipHits));\n\n\treturn sunkShipObj;\n}\n\nexport { returnSunkShipObj };\n","type BeforeAfterShipCellsFiredUponStatusProps = {\n\tshipType?: 'Superdreadnought' | 'Carrier' | 'Battleship' | 'Destroyers' | 'Frigates';\n\tcoordsArr: string[];\n\tcompShipsHitCoordsSet: Set<string>;\n\tcompShipsMissesCoordsSet: Set<string>;\n};\n\nfunction beforeAfterShipCellsFiredUponStatus({\n\tshipType,\n\tcoordsArr,\n\tcompShipsHitCoordsSet,\n\tcompShipsMissesCoordsSet,\n}: BeforeAfterShipCellsFiredUponStatusProps): {\n\tisBeforeShipCellFiredUpon: boolean;\n\tisAfterShipCellFiredUpon: boolean;\n} {\n\t// since frigates are only one cells each, both directions must be checked\n\t// to determine if the frigate is surrounded\n\tif (shipType === 'Frigates') {\n\t\t// no sorting as frigate coords are only one cell each\n\t\tconst frigateCell = coordsArr[0];\n\t\tconst frigateCellX = parseInt(frigateCell.split(',')[0]);\n\t\tconst frigateCellY = parseInt(frigateCell.split(',')[1]);\n\n\t\t// top cell\n\t\tconst topCell = `${frigateCellX},${frigateCellY - 1}`;\n\t\tconst topCellWithinBounds = parseInt(topCell.split(',')[1]) >= 0;\n\t\t// right cell\n\t\tconst rightCell = `${frigateCellX + 1},${frigateCellY}`;\n\t\tconst rightCellWithinBounds = parseInt(rightCell.split(',')[0]) <= 9;\n\t\t// bottom cell\n\t\tconst bottomCell = `${frigateCellX},${frigateCellY + 1}`;\n\t\tconst bottomCellWithinBounds = parseInt(bottomCell.split(',')[1]) <= 9;\n\t\t// left cell\n\t\tconst leftCell = `${frigateCellX - 1},${frigateCellY}`;\n\t\tconst leftCellWithinBounds = parseInt(leftCell.split(',')[0]) >= 0;\n\n\t\t// if the cells are not within bounds, they are considered to have been fired upon\n\t\tconst isTopCellFiredUpon = topCellWithinBounds\n\t\t\t? compShipsHitCoordsSet.has(topCell) || compShipsMissesCoordsSet.has(topCell)\n\t\t\t: true;\n\t\tconst isRightCellFiredUpon = rightCellWithinBounds\n\t\t\t? compShipsHitCoordsSet.has(rightCell) || compShipsMissesCoordsSet.has(rightCell)\n\t\t\t: true;\n\t\tconst isBottomCellFiredUpon = bottomCellWithinBounds\n\t\t\t? compShipsHitCoordsSet.has(bottomCell) || compShipsMissesCoordsSet.has(bottomCell)\n\t\t\t: true;\n\t\tconst isLeftCellFiredUpon = leftCellWithinBounds\n\t\t\t? compShipsHitCoordsSet.has(leftCell) || compShipsMissesCoordsSet.has(leftCell)\n\t\t\t: true;\n\n\t\tconst isBeforeShipCellFiredUpon = isTopCellFiredUpon && isLeftCellFiredUpon;\n\t\tconst isAfterShipCellFiredUpon = isRightCellFiredUpon && isBottomCellFiredUpon;\n\n\t\treturn {\n\t\t\tisBeforeShipCellFiredUpon,\n\t\t\tisAfterShipCellFiredUpon,\n\t\t};\n\t}\n\n\t// following is for all other ship types except frigates\n\t// need  to sort the coords because they were grabbed from an object and\n\t// js does not guarantee the order of the keys in an object\n\tconst coordsArrClone = structuredClone(coordsArr);\n\tconst sortedCoordsArr = coordsArrClone.sort((a, b) => {\n\t\tconst aX = parseInt(a.split(',')[0].replace('\"', ''));\n\t\tconst aY = parseInt(a.split(',')[1].replace('\"', ''));\n\t\tconst bX = parseInt(b.split(',')[0].replace('\"', ''));\n\t\tconst bY = parseInt(b.split(',')[1].replace('\"', ''));\n\n\t\tif (aX < bX) return -1;\n\t\tif (aX > bX) return 1;\n\t\tif (aY < bY) return -1;\n\t\tif (aY > bY) return 1;\n\n\t\treturn 0;\n\t});\n\n\t// determine the direction of the ship\n\tconst firstCoord = sortedCoordsArr[0];\n\tconst lastCoord = sortedCoordsArr[sortedCoordsArr.length - 1];\n\n\tconst firstCoordXY = firstCoord.split(',');\n\tconst lastCoordXY = lastCoord.split(',');\n\tconst firstCoordX = parseInt(firstCoordXY[0].replace('\"', ''));\n\tconst firstCoordY = parseInt(firstCoordXY[1].replace('\"', ''));\n\tconst lastCoordX = parseInt(lastCoordXY[0].replace('\"', ''));\n\tconst lastCoordY = parseInt(lastCoordXY[1].replace('\"', ''));\n\tconst isHorizontal = firstCoordY === lastCoordY;\n\t// const isVertical = firstCoordX === lastCoordX;\n\n\t// determine the cells just before and just after the ship\n\tconst beforeShipCell = isHorizontal\n\t\t? `${firstCoordX - 1},${firstCoordY}`\n\t\t: `${firstCoordX},${firstCoordY - 1}`;\n\tconst beforeShipCellX = parseInt(beforeShipCell.split(',')[0]);\n\tconst beforeShipCellY = parseInt(beforeShipCell.split(',')[1]);\n\tconst beforeShipCellWithinBounds = isHorizontal\n\t\t? beforeShipCellX <= 9 && beforeShipCellX >= 0\n\t\t: beforeShipCellY <= 9 && beforeShipCellY >= 0;\n\t// if the cell is not within bounds, it is considered to have been fired upon\n\tconst isBeforeShipCellFiredUpon = beforeShipCellWithinBounds\n\t\t? compShipsHitCoordsSet.has(beforeShipCell) ||\n\t\t  compShipsMissesCoordsSet.has(beforeShipCell)\n\t\t: true;\n\n\tconst afterShipCell = isHorizontal\n\t\t? `${lastCoordX + 1},${lastCoordY}`\n\t\t: `${lastCoordX},${lastCoordY + 1}`;\n\tconst afterShipCellX = parseInt(afterShipCell.split(',')[0]);\n\tconst afterShipCellY = parseInt(afterShipCell.split(',')[1]);\n\tconst afterShipCellWithinBounds = isHorizontal\n\t\t? afterShipCellX <= 9 && afterShipCellX >= 0\n\t\t: afterShipCellY <= 9 && afterShipCellY >= 0;\n\t// if the cell is not within bounds, it is considered to have been fired upon\n\tconst isAfterShipCellFiredUpon = afterShipCellWithinBounds\n\t\t? compShipsHitCoordsSet.has(afterShipCell) ||\n\t\t  compShipsMissesCoordsSet.has(afterShipCell)\n\t\t: true;\n\n\treturn {\n\t\tisBeforeShipCellFiredUpon,\n\t\tisAfterShipCellFiredUpon,\n\t};\n}\n\nexport { beforeAfterShipCellsFiredUponStatus };\n","import { beforeAfterShipCellsFiredUponStatus } from './beforeAfterShipCellsFiredUponStatus';\nimport {\n\taddStyleToElem,\n\taddTextToElem,\n\tpipe,\n\tremoveStyleFromElem,\n} from './elementCreators';\nimport {\n\tBattleship,\n\tBigShips,\n\tCarrier,\n\tDestroyer,\n\tDiv,\n\tFrigate,\n\tPara,\n\tSmallShips,\n\tSuperdreadnought,\n} from './types';\n\nfunction updateCompTacticalOverviewShips(): void {\n\t// grab all coords of comp ships\n\tconst superdreadnoughtCoords: Superdreadnought = JSON.parse(\n\t\tlocalStorage.getItem('compSuperdreadnought') ?? JSON.stringify([])\n\t);\n\tconst superdreadnoughtCoordsArray: string[] = Object.values(superdreadnoughtCoords);\n\n\tconst battleshipCoords: Battleship = JSON.parse(\n\t\tlocalStorage.getItem('compBattleship') ?? JSON.stringify([])\n\t);\n\tconst battleshipCoordsArray: string[] = Object.values(battleshipCoords);\n\n\tconst carrierCoords: Carrier = JSON.parse(\n\t\tlocalStorage.getItem('compCarrier') ?? JSON.stringify([])\n\t);\n\tconst carrierCoordsArray: string[] = Object.values(carrierCoords);\n\n\tconst destroyerCoords: Destroyer[] = JSON.parse(\n\t\tlocalStorage.getItem('compDestroyers') ?? JSON.stringify([])\n\t);\n\tconst destroyerCoordsArray: string[][] = destroyerCoords.map((destroyer) =>\n\t\tObject.values(destroyer)\n\t);\n\n\tconst frigateCoords: Frigate[] = JSON.parse(\n\t\tlocalStorage.getItem('compFrigates') ?? JSON.stringify([])\n\t);\n\tconst frigateCoordsArray: string[][] = frigateCoords.map((frigate) =>\n\t\tObject.values(frigate)\n\t);\n\n\t// coords of player misses on computer ships\n\tconst compShipsMissesCoords: string[] = JSON.parse(\n\t\tlocalStorage.getItem('compShipsMissesCoords') ?? JSON.stringify([])\n\t);\n\tconst compShipsMissesCoordsSet = new Set<string>(compShipsMissesCoords);\n\n\t// coords of player hits on computer ships\n\tconst compShipsHitCoords: string[] = JSON.parse(\n\t\tlocalStorage.getItem('compShipsHitCoords') ?? JSON.stringify([])\n\t);\n\tconst compShipsHitCoordsSet = new Set<string>(compShipsHitCoords);\n\n\tconst shipTypesCoords: [BigShips, string[]][] = [\n\t\t['Superdreadnought', superdreadnoughtCoordsArray],\n\t\t['Battleship', battleshipCoordsArray],\n\t\t['Carrier', carrierCoordsArray],\n\t];\n\n\tshipTypesCoords.forEach(([shipType, coords]: [BigShips, string[]]) => {\n\t\tconst isEveryShipCoordHit = coords.reduce((acc, coord) => {\n\t\t\tif (!compShipsHitCoordsSet.has(coord)) acc = false;\n\n\t\t\treturn acc;\n\t\t}, true);\n\n\t\t// if every ship coord is hit, check if the cell before and after the ship is also hit, then the ship is sunk and the ship is displayed as sunk in the tactical overview without prematurely displaying to the player\n\t\tif (isEveryShipCoordHit) {\n\t\t\t// sorts the coords, determines direction, and determines the cells just before and after the ship and whether they have been fired upon\n\t\t\tconst { isBeforeShipCellFiredUpon, isAfterShipCellFiredUpon } =\n\t\t\t\tbeforeAfterShipCellsFiredUponStatus({\n\t\t\t\t\tshipType,\n\t\t\t\t\tcoordsArr: coords,\n\t\t\t\t\tcompShipsHitCoordsSet,\n\t\t\t\t\tcompShipsMissesCoordsSet,\n\t\t\t\t});\n\n\t\t\t// if the cells just before and just after the ship have been fired upon (either hit or miss), then the ship is confirmed sunk and safe to update the tactical overview\n\t\t\tif (isBeforeShipCellFiredUpon && isAfterShipCellFiredUpon) {\n\t\t\t\t// grab the tac overview comp '?' cell and remove it\n\t\t\t\tconst questionMarkCell: Para = document.querySelector(\n\t\t\t\t\t`[data-compshipquestion=\"${shipType}\"]`\n\t\t\t\t);\n\t\t\t\tif (questionMarkCell) questionMarkCell.remove();\n\n\t\t\t\tconst lengthOfCells =\n\t\t\t\t\tshipType === 'Superdreadnought' ? 5 : shipType === 'Carrier' ? 4 : 3;\n\n\t\t\t\t// display sunk ship with '💥' emoji\n\t\t\t\tfor (let i = 0; i < lengthOfCells; i += 1) {\n\t\t\t\t\tconst hiddenCell: Div = document.querySelector(\n\t\t\t\t\t\t`[data-compshipcell=\"${shipType}_${i}\"]`\n\t\t\t\t\t);\n\t\t\t\t\tif (hiddenCell && hiddenCell.style.display === 'none') {\n\t\t\t\t\t\tpipe(\n\t\t\t\t\t\t\tremoveStyleFromElem('display'),\n\t\t\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t\t\t['display', 'visible'],\n\t\t\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\taddTextToElem('💥')\n\t\t\t\t\t\t)(hiddenCell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tconst shipTypesCoordsArrArr: [SmallShips, Array<string[]>][] = [\n\t\t['Destroyers', destroyerCoordsArray],\n\t\t['Frigates', frigateCoordsArray],\n\t];\n\n\tshipTypesCoordsArrArr.forEach(\n\t\t([shipType, coordsArrArr]: [SmallShips, Array<string[]>]) => {\n\t\t\tcoordsArrArr.forEach((coordsArr: string[], idx: number) => {\n\t\t\t\tconst isEveryShipCoordHit = coordsArr.reduce((acc, coord) => {\n\t\t\t\t\tif (!compShipsHitCoordsSet.has(coord)) acc = false;\n\n\t\t\t\t\treturn acc;\n\t\t\t\t}, true);\n\n\t\t\t\t// if every ship coord is hit, check if the cell before and after the ship is also hit, then the ship is sunk and the ship is displayed as sunk in the tactical overview without prematurely displaying to the player\n\t\t\t\tif (isEveryShipCoordHit) {\n\t\t\t\t\t// sorts the coords, determines direction, and determines the cells just before and after the ship and whether they have been fired upon\n\t\t\t\t\tconst { isBeforeShipCellFiredUpon, isAfterShipCellFiredUpon } =\n\t\t\t\t\t\tbeforeAfterShipCellsFiredUponStatus({\n\t\t\t\t\t\t\tshipType,\n\t\t\t\t\t\t\tcoordsArr,\n\t\t\t\t\t\t\tcompShipsHitCoordsSet,\n\t\t\t\t\t\t\tcompShipsMissesCoordsSet,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t// if the cells just before and just after the ship have been fired upon (either hit or miss), then the ship is confirmed sunk and safe to update the tactical overview\n\t\t\t\t\tif (isBeforeShipCellFiredUpon && isAfterShipCellFiredUpon) {\n\t\t\t\t\t\t// grab the tac overview comp '?' cell and remove it\n\t\t\t\t\t\tconst questionMarkCell: Para = document.querySelector(\n\t\t\t\t\t\t\t`[data-compshipquestion=\"${shipType}_${idx}\"]`\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (questionMarkCell) questionMarkCell.remove();\n\n\t\t\t\t\t\t// display sunk ship with '💥' emoji\n\t\t\t\t\t\tfor (let i = 0; i < coordsArr.length; i += 1) {\n\t\t\t\t\t\t\tconst hiddenCell: Div = document.querySelector(\n\t\t\t\t\t\t\t\t`[data-compshipcell=\"${shipType}_${idx}_${i}\"]`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (hiddenCell && hiddenCell.style.display === 'none') {\n\t\t\t\t\t\t\t\tpipe(\n\t\t\t\t\t\t\t\t\tremoveStyleFromElem('display'),\n\t\t\t\t\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t\t\t\t\t['display', 'visible'],\n\t\t\t\t\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\taddTextToElem('💥')\n\t\t\t\t\t\t\t\t)(hiddenCell);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t);\n}\n\nexport { updateCompTacticalOverviewShips };\n","import { announceGameWinner } from '../functions/announceGameWinner';\nimport { computersTurn } from '../functions/computersTurn';\nimport { pipe, removeEvtListener } from '../functions/elementCreators';\nimport { renderBattleMessageElem } from '../functions/renderBattleMessage';\nimport { returnPlayerCompShipsCoords } from '../functions/returnPlayerCompShipsCoords';\nimport { returnShipSymbolFromCoord } from '../functions/returnShipSymbolFromCoord';\nimport { returnSunkShipObj } from '../functions/returnSunkShipObj';\nimport { NodesDiv } from '../functions/types';\nimport { updateCompTacticalOverviewShips } from '../functions/updateCompTacticalOverviewShips';\nimport { handlePlayerClickOnCompMisses } from './handlePlayerClickOnCompMisses';\n\nconst handlePlayerClickOnCompShips = function (\n\tthis: HTMLDivElement,\n\tev: MouseEvent\n): void {\n\t// initialize the hit counter on first hit\n\t// when total hits reaches 18, game ends\n\tif (!localStorage.getItem('totalHitsOnCompShips')) {\n\t\tlocalStorage.setItem('totalHitsOnCompShips', JSON.stringify(0));\n\t}\n\n\tconst compShipsCoords: string[] = JSON.parse(\n\t\tlocalStorage.getItem('compShipsCoords') ?? ''\n\t);\n\n\tlet totalHitsOnCompShips: number = JSON.parse(\n\t\tlocalStorage.getItem('totalHitsOnCompShips') ?? ''\n\t);\n\n\tconst currentCellCoord = this.dataset.cellcomp ?? '';\n\t// prevents winner being called when a miss is registered\n\tif (compShipsCoords.includes(currentCellCoord)) {\n\t\t// checks hit counter to see if its the last hit\n\t\tif (totalHitsOnCompShips === 17) {\n\t\t\tconst playerName = JSON.parse(localStorage.getItem('playerName') ?? '');\n\n\t\t\tannounceGameWinner(playerName);\n\t\t}\n\t}\n\n\t// used to identify the ship that was hit\n\tconst playerCompShipsCoords = returnPlayerCompShipsCoords();\n\n\tconsole.log(\n\t\t'playerCompShipsCoords from handlePlayerClickOnCompShips(): ',\n\t\tplayerCompShipsCoords\n\t);\n\n\t// required so that the renderBattleMessageElem function can display the appropriate message\n\tconst towardsCombatant = 'comp';\n\tconst hitOrMiss = 'hit';\n\tconst currentShipSymbol = returnShipSymbolFromCoord({\n\t\tplayerCompShipsCoords,\n\t\tcurrentCellCoord,\n\t\ttowardsCombatant,\n\t});\n\n\t// stores hits on corresponding ships to determine if a ship has been sunk\n\tconst sunkShipObj = returnSunkShipObj(\n\t\tcurrentCellCoord,\n\t\tcurrentShipSymbol,\n\t\ttowardsCombatant\n\t);\n\tconst sunkShipName =\n\t\tsunkShipObj.player === null || sunkShipObj.player === undefined\n\t\t\t? (sunkShipObj.comp as string)\n\t\t\t: (sunkShipObj.player as string);\n\n\trenderBattleMessageElem({\n\t\tcurrentCellCoord,\n\t\tcurrentShipSymbol,\n\t\ttowardsCombatant,\n\t\thitOrMiss,\n\t\tsunkShipName,\n\t});\n\n\t// updates the comp board cell to visually indicate hit\n\tthis.textContent = '';\n\tthis.textContent = '💥';\n\tthis.style.color = '#f0a400';\n\n\t// prevents clicks on previously hit cells counting towards totalHitsOnCompShips\n\tif (!localStorage.getItem('compShipsHitCoords')) {\n\t\tlocalStorage.setItem('compShipsHitCoords', JSON.stringify([]));\n\t}\n\tconst compShipsHitCoords: string[] = JSON.parse(\n\t\tlocalStorage.getItem('compShipsHitCoords') ?? ''\n\t);\n\n\t// updates hit counter only when new hit is not on a previously hit cell, and store\n\tif (!compShipsHitCoords.includes(currentCellCoord)) {\n\t\t// stores the unique hit co-ordinate\n\t\tcompShipsHitCoords.push(currentCellCoord);\n\t\tlocalStorage.setItem('compShipsHitCoords', JSON.stringify(compShipsHitCoords));\n\n\t\t// increments the hit counter and store\n\t\ttotalHitsOnCompShips = totalHitsOnCompShips + 1;\n\t\tlocalStorage.setItem('totalHitsOnCompShips', JSON.stringify(totalHitsOnCompShips));\n\t}\n\n\t// update the comp tactical overview\n\tupdateCompTacticalOverviewShips();\n\n\t// all JS synchronous functions run-to-completion and since click callbacks are also synchronous, the setTimeout function is passed to a browser API and immediately starts the timer while the rest of the synchronous functions are run and popped off the call stack.\n\t// the remove click event listeners callback functions are the last synchronous instructions to be executed preventing the player from clicking any comp board cells for two seconds\n\t// After two seconds, the event loop pushes the setTimeout callback function to the macrotask queue (the higher priority microtask queue is empty because there are no promises), and once the event loop confirms call stack is empty, pushes the computersTurn function to the stack and is run and then event listeners are added back on\n\t// simulates a rudimentary game loop  and gives the illusion of time taken for the computer to \"think\"\n\tconst compShipPresent: NodesDiv = document.querySelectorAll('.compShipPresent');\n\tconst compShipNotPresent: NodesDiv = document.querySelectorAll('.compShipNotPresent');\n\n\tcompShipPresent.forEach((cell) => {\n\t\tpipe(removeEvtListener('click')(handlePlayerClickOnCompShips))(cell);\n\t});\n\tcompShipNotPresent.forEach((cell) => {\n\t\tpipe(removeEvtListener('click')(handlePlayerClickOnCompMisses))(cell);\n\t});\n\n\tsetTimeout(computersTurn, 2000);\n};\nexport { handlePlayerClickOnCompShips };\n","function generateAdjacentCoordsArr(coord: string, length = 1): string[] {\n\tconst xyCoords = coord.split(',');\n\tconst xCoord = parseInt(xyCoords[0].replace('\"', ''));\n\tconst yCoord = parseInt(xyCoords[1].replace('\"', ''));\n\n\t// generate adjacent coords of specified length based on coord location\n\tconst adjacentCoords: string[] = [];\n\n\tfor (let i = 1; i <= length; i += 1) {\n\t\t// top\n\t\tconst topCoord = `${xCoord},${yCoord - i}`;\n\t\tif (yCoord - i >= 0) adjacentCoords.push(topCoord);\n\n\t\t// right\n\t\tconst rightCoord = `${xCoord + i},${yCoord}`;\n\t\tif (xCoord + i <= 9) adjacentCoords.push(rightCoord);\n\n\t\t// bottom\n\t\tconst bottomCoord = `${xCoord},${yCoord + i}`;\n\t\tif (yCoord + i <= 9) adjacentCoords.push(bottomCoord);\n\n\t\t// left\n\t\tconst leftCoord = `${xCoord - i},${yCoord}`;\n\t\tif (xCoord - i >= 0) adjacentCoords.push(leftCoord);\n\t}\n\n\treturn adjacentCoords;\n}\n\nexport { generateAdjacentCoordsArr };\n","import { generateAdjacentCoordsArr } from './generateAdjacentCoordsArr';\n\ntype GenerateFiringSolutionProps = {\n\tcompHitOnPlayerCoordsSet: Set<string>;\n\tcompMissOnPlayerCoordsSet: Set<string>;\n};\n\nfunction generateFiringSolution({\n\tcompHitOnPlayerCoordsSet,\n\tcompMissOnPlayerCoordsSet,\n}: GenerateFiringSolutionProps): string {\n\t// generate a cloud of all adjacent coords of all previous hits\n\t// each of these adjacent coords that have not been previously fired upon will be used to generate ranked tuples\n\tconst uniqueAdjacentCoords: string[] = Array.from(compHitOnPlayerCoordsSet)\n\t\t.flatMap((coord) => generateAdjacentCoordsArr(coord))\n\t\t.filter(\n\t\t\t(coord) =>\n\t\t\t\t!compMissOnPlayerCoordsSet.has(coord) && !compHitOnPlayerCoordsSet.has(coord)\n\t\t);\n\n\t// if there are no unique adjacent coords, meaning all surrounding coords\n\t// have been hit, return an empty string so that the caller can call the\n\t// random coord guess function\n\tif (uniqueAdjacentCoords.length === 0) return '';\n\n\t// create ranked tuples of the adjacent coords\n\tconst adjCoordsRankedTuples: [string, number][] = uniqueAdjacentCoords.reduce(\n\t\t(rankedTuples: [string, number][], uniqueAdjCoord: string) => {\n\t\t\t// for each of the unique adjacent coords, we generate another cloud of\n\t\t\t// adjacent coords but this time with a radius of 2 and we count the\n\t\t\t// number of times these new coords intersect with previous hits\n\n\t\t\t// this approach favours coords that are on the same axes as prev hits\n\t\t\t// and can more reliably hit the adjacent coord in the same axis rather\n\t\t\t// than hunting in another axis\n\t\t\tconst newAdjCoords: string[] = generateAdjacentCoordsArr(uniqueAdjCoord, 2);\n\n\t\t\tconst coordScore: number = newAdjCoords.reduce(\n\t\t\t\t(score: number, newAdjCoord: string) => {\n\t\t\t\t\tif (compHitOnPlayerCoordsSet.has(newAdjCoord)) score += 1;\n\n\t\t\t\t\treturn score;\n\t\t\t\t},\n\t\t\t\t0\n\t\t\t);\n\n\t\t\trankedTuples.push([uniqueAdjCoord, coordScore]);\n\n\t\t\treturn rankedTuples;\n\t\t},\n\t\t[]\n\t);\n\n\tconst sortedAdjCoordsRankedTuples: [string, number][] = adjCoordsRankedTuples.sort(\n\t\t(a, b) => b[1] - a[1]\n\t);\n\n\treturn sortedAdjCoordsRankedTuples[0][0];\n}\n\nexport { generateFiringSolution };\n","const genRandCompAttackGuess = function (prevCompFiringCoords: string[]): string {\n\tlet compAttackGuess = `${Math.floor(Math.random() * 10)},${Math.floor(\n\t\tMath.random() * 10\n\t)}`;\n\n\t// checks if guess is in previous guesses, if so runs the random function again\n\t// avoids guessing the same co-ordinates\n\tlet isUniqueCoordinate = false;\n\n\twhile (!isUniqueCoordinate) {\n\t\tif (prevCompFiringCoords.includes(compAttackGuess)) {\n\t\t\t//if the guessed co-ordinate has already been tried\n\t\t\tisUniqueCoordinate = false;\n\n\t\t\tcompAttackGuess = `${Math.floor(Math.random() * 10)},${Math.floor(\n\t\t\t\tMath.random() * 10\n\t\t\t)}`;\n\t\t} else isUniqueCoordinate = true;\n\t}\n\n\treturn compAttackGuess;\n};\nexport { genRandCompAttackGuess };\n","import { generateFiringSolution } from './generateFiringSolution';\nimport { genRandCompAttackGuess } from './genRandCompAttackGuess';\n\nfunction generateProbabilisticFiringCoord(): string {\n\tconst prevCompHitOrMiss: 'hit' | 'miss' = localStorage.getItem('prevCompHitOrMiss') as\n\t\t| 'hit'\n\t\t| 'miss';\n\n\tconst compHitOnPlayerCoordsArr: string[] = JSON.parse(\n\t\tlocalStorage.getItem('compHitOnPlayerCoordsArr') ?? '[]'\n\t);\n\tconst compHitOnPlayerCoordsSet = new Set<string>(compHitOnPlayerCoordsArr);\n\n\tconst compMissOnPlayerCoordsArr: string[] = JSON.parse(\n\t\tlocalStorage.getItem('compMissOnPlayerCoordsArr') ?? '[]'\n\t);\n\tconst compMissOnPlayerCoordsSet = new Set<string>(compMissOnPlayerCoordsArr);\n\n\tconst prevCompFiringCoords = [\n\t\tcompHitOnPlayerCoordsArr,\n\t\tcompMissOnPlayerCoordsArr,\n\t].flat();\n\n\tlet newFiringCoordinate = '';\n\n\t// only runs on first computer turn as prevCompHitOrMiss is undefined\n\tif (!prevCompHitOrMiss) {\n\t\tnewFiringCoordinate = genRandCompAttackGuess(prevCompFiringCoords);\n\t} else {\n\t\t// if there havent been any hits yet, generate a random guess\n\t\tif (compHitOnPlayerCoordsArr.length === 0) {\n\t\t\tnewFiringCoordinate = genRandCompAttackGuess(prevCompFiringCoords);\n\t\t}\n\t\t// if there have been hits, generate a firing solution\n\t\telse {\n\t\t\tnewFiringCoordinate = generateFiringSolution({\n\t\t\t\tcompHitOnPlayerCoordsSet,\n\t\t\t\tcompMissOnPlayerCoordsSet,\n\t\t\t});\n\t\t\tnewFiringCoordinate =\n\t\t\t\tnewFiringCoordinate === ''\n\t\t\t\t\t? genRandCompAttackGuess(prevCompFiringCoords)\n\t\t\t\t\t: newFiringCoordinate;\n\t\t}\n\t}\n\n\treturn newFiringCoordinate;\n}\n\nexport { generateProbabilisticFiringCoord };\n","function storeCompHitMissCoords(\n\tcompAttackGuess_: string,\n\thitOrMiss: 'hit' | 'miss'\n): void {\n\tlocalStorage.setItem('prevCompHitOrMiss', hitOrMiss);\n\tswitch (hitOrMiss) {\n\t\tcase 'hit': {\n\t\t\tlocalStorage.setItem('prevCompHitOnPlayerCoord', JSON.stringify(compAttackGuess_));\n\n\t\t\tconst compHitOnPlayerCoordsArr: string[] = JSON.parse(\n\t\t\t\tlocalStorage.getItem('compHitOnPlayerCoordsArr') ?? JSON.stringify([])\n\t\t\t);\n\t\t\t// adds current hit to array\n\t\t\tcompHitOnPlayerCoordsArr.push(compAttackGuess_);\n\n\t\t\t// updates store\n\t\t\tlocalStorage.setItem(\n\t\t\t\t'compHitOnPlayerCoordsArr',\n\t\t\t\tJSON.stringify(compHitOnPlayerCoordsArr)\n\t\t\t);\n\n\t\t\tbreak;\n\t\t}\n\t\tcase 'miss': {\n\t\t\tlocalStorage.setItem('prevCompMissOnPlayerCoord', JSON.stringify(compAttackGuess_));\n\n\t\t\tconst compMissOnPlayerCoordsArr: string[] = JSON.parse(\n\t\t\t\tlocalStorage.getItem('compMissOnPlayerCoordsArr') ?? JSON.stringify([])\n\t\t\t);\n\t\t\t// adds current miss to array\n\t\t\tcompMissOnPlayerCoordsArr.push(compAttackGuess_);\n\n\t\t\t// updates store\n\t\t\tlocalStorage.setItem(\n\t\t\t\t'compMissOnPlayerCoordsArr',\n\t\t\t\tJSON.stringify(compMissOnPlayerCoordsArr)\n\t\t\t);\n\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tbreak;\n\t}\n}\n\nexport { storeCompHitMissCoords };\n","import { Div } from './types';\n\nfunction updatePlayerTacticalOverviewCells(currentCellCoord: string): void {\n\tconst cellToUpdate: Div = document.querySelector(\n\t\t`[data-playership=\"${currentCellCoord}\"]`\n\t);\n\tif (cellToUpdate) {\n\t\tcellToUpdate.textContent = '';\n\t\tcellToUpdate.textContent = '💥';\n\t\tcellToUpdate.style.color = '#f0a400';\n\t}\n}\n\nexport { updatePlayerTacticalOverviewCells };\n","import { addStyleToElem, pipe } from '../functions/elementCreators';\nimport { returnSunkShipObj } from '../functions/returnSunkShipObj';\nimport { storeCompHitMissCoords } from '../functions/storeCompHitMissCoords';\nimport { Div } from '../functions/types';\nimport { updatePlayerTacticalOverviewCells } from '../functions/updatePlayerTacticalOverviewCells';\nimport { renderBattleMessageElem } from './renderBattleMessage';\n\nconst computerAttacks = function (compAttackGuess_: string): void {\n\tconst playerShipsCoords: string[] = JSON.parse(\n\t\tlocalStorage.getItem('playerShipsCoords') ?? '[]'\n\t);\n\n\tlet totalHitsOnPlayerShips: number = JSON.parse(\n\t\tlocalStorage.getItem('totalHitsOnPlayerShips') ?? '0'\n\t);\n\n\t// compAttackGuess_ is assumed to be unique at this point\n\t// checks if playerShip is present\n\tif (playerShipsCoords.includes(compAttackGuess_)) {\n\t\tconst playerShipCell: Div = document.querySelector(\n\t\t\t`[data-cellplayer=\"${compAttackGuess_}\"]`\n\t\t);\n\n\t\tconst currentCellCoord = compAttackGuess_;\n\t\tconst currentShipSymbol = playerShipCell?.textContent ?? '';\n\t\tconst towardsCombatant = 'player';\n\t\tconst hitOrMiss = 'hit';\n\n\t\t// update tactical overview ship cells to visually indicate hit\n\t\tupdatePlayerTacticalOverviewCells(currentCellCoord);\n\n\t\t// stores hits on corresponding ships to determine if a ship has been sunk\n\t\tconst sunkShipObj = returnSunkShipObj(\n\t\t\tcurrentCellCoord,\n\t\t\tcurrentShipSymbol,\n\t\t\ttowardsCombatant\n\t\t);\n\t\tconst sunkShipName =\n\t\t\tsunkShipObj.player === null\n\t\t\t\t? (sunkShipObj.comp as string)\n\t\t\t\t: (sunkShipObj.player as string);\n\n\t\t// calls function to display battle message when computer registers a hit on a player ship\n\t\trenderBattleMessageElem({\n\t\t\tcurrentCellCoord,\n\t\t\tcurrentShipSymbol,\n\t\t\ttowardsCombatant,\n\t\t\thitOrMiss,\n\t\t\tsunkShipName,\n\t\t});\n\n\t\t// updates playercell to visually indicate hit\n\t\tif (playerShipCell) {\n\t\t\tplayerShipCell.textContent = '';\n\t\t\tplayerShipCell.textContent = '💥';\n\t\t}\n\n\t\t// updates hit counter and store\n\t\ttotalHitsOnPlayerShips = totalHitsOnPlayerShips + 1;\n\t\tlocalStorage.setItem(\n\t\t\t'totalHitsOnPlayerShips',\n\t\t\tJSON.stringify(totalHitsOnPlayerShips)\n\t\t);\n\n\t\t// stores the current hit co-ordinates and hit type to assist comp firing solution\n\t\tstoreCompHitMissCoords(compAttackGuess_, 'hit');\n\t} else {\n\t\t//if its a miss\n\t\tconst playerShipCell: Div = document.querySelector(\n\t\t\t`[data-cellplayer=\"${compAttackGuess_}\"]`\n\t\t);\n\n\t\t// assigns '✖' to currently missed co-ordinate and colors it  amber\n\t\tif (playerShipCell) {\n\t\t\tplayerShipCell.textContent = '';\n\t\t\tplayerShipCell.textContent = '✖';\n\t\t\tpipe(addStyleToElem([['color', '#f0a400']]))(playerShipCell);\n\t\t}\n\n\t\t// initializes storage for previously missed co-ordinates\n\t\tif (!localStorage.getItem('prevCompMissOnPlayerCoord')) {\n\t\t\tlocalStorage.setItem('prevCompMissOnPlayerCoord', JSON.stringify(''));\n\t\t}\n\n\t\t// grabs the previous miss co-ordinates in order to turn them back into gray\n\t\tconst prevCompMissOnPlayerCoord = JSON.parse(\n\t\t\tlocalStorage.getItem('prevCompMissOnPlayerCoord') ?? ''\n\t\t);\n\t\tconst prevCompMissOnPlayerCell: Div = document.querySelector(\n\t\t\t`[data-cellplayer=\"${prevCompMissOnPlayerCoord}\"]`\n\t\t);\n\t\tpipe(addStyleToElem([['color', 'gainsboro']]))(prevCompMissOnPlayerCell);\n\n\t\t//store the current miss co-ordinates and hit type to assist comp firing solution\n\t\tstoreCompHitMissCoords(compAttackGuess_, 'miss');\n\t}\n};\nexport { computerAttacks };\n","import { handlePlayerClickOnCompMisses } from '../events/handlePlayerClickOnCompMisses';\nimport { handlePlayerClickOnCompShips } from '../events/handlePlayerClickOnCompShips';\nimport { addEvtListener, pipe } from '../functions/elementCreators';\nimport { generateProbabilisticFiringCoord } from '../functions/generateProbabilisticFiringCoord';\nimport { NodesDiv } from '../functions/types';\nimport { announceGameWinner } from './announceGameWinner';\nimport { computerAttacks } from './computerAttacks';\n\nconst computersTurn = function (): void {\n\t// checks if game has been won\n\tif (!localStorage.getItem('isGameWon')) {\n\t\tlocalStorage.setItem('isGameWon', JSON.stringify(''));\n\t}\n\tconst isGameWon: boolean = JSON.parse(localStorage.getItem('isGameWon') ?? '');\n\n\t// this conditional check is to prevent computer from having a turn after player has destroyed all computer ships\n\tif (!isGameWon) {\n\t\tif (!localStorage.getItem('totalHitsOnPlayerShips')) {\n\t\t\tlocalStorage.setItem('totalHitsOnPlayerShips', JSON.stringify(0));\n\t\t}\n\n\t\tconst playerShipsCoords: string[] = JSON.parse(\n\t\t\tlocalStorage.getItem('playerShipsCoords') ?? JSON.stringify([])\n\t\t);\n\n\t\t// const compAttackGuess = genRandCompAttackGuess();\n\t\tconst compAttackGuess = generateProbabilisticFiringCoord();\n\n\t\t// if compAttackGuess is on a playerShipCoord, then checks the hit counter\n\t\t// avoids registering a win when the computer misses\n\t\tif (playerShipsCoords.includes(compAttackGuess)) {\n\t\t\tconst totalHitsOnPlayerShips: number = JSON.parse(\n\t\t\t\tlocalStorage.getItem('totalHitsOnPlayerShips') ?? ''\n\t\t\t);\n\t\t\tif (totalHitsOnPlayerShips === 17) {\n\t\t\t\t// calls game winner function\n\t\t\t\tannounceGameWinner('comp');\n\t\t\t}\n\t\t}\n\n\t\t// if no winner, continues attack\n\t\tcomputerAttacks(compAttackGuess);\n\n\t\t// if game win condition has not been reached, adds the event listeners back on to continue round\n\t\tconst compShipPresent: NodesDiv = document.querySelectorAll('.compShipPresent');\n\t\tcompShipPresent.forEach((cell) => {\n\t\t\tpipe(addEvtListener('click')(handlePlayerClickOnCompShips))(cell);\n\t\t});\n\n\t\tconst compShipNotPresent: NodesDiv = document.querySelectorAll('.compShipNotPresent');\n\t\tcompShipNotPresent.forEach((cell) => {\n\t\t\tpipe(addEvtListener('click')(handlePlayerClickOnCompMisses))(cell);\n\t\t});\n\t}\n};\nexport { computersTurn };\n","import { computersTurn } from '../functions/computersTurn';\nimport { addStyleToElem, pipe, removeEvtListener } from '../functions/elementCreators';\nimport { renderBattleMessageElem } from '../functions/renderBattleMessage';\nimport { Div, NodesDiv } from '../functions/types';\nimport { updateCompTacticalOverviewShips } from '../functions/updateCompTacticalOverviewShips';\nimport { handlePlayerClickOnCompShips } from './handlePlayerClickOnCompShips';\n\nconst handlePlayerClickOnCompMisses = function (\n\tthis: HTMLDivElement,\n\tev: MouseEvent\n): void {\n\tconst currentCellCoord = this.dataset.cellcomp ?? '';\n\tconst currentShipSymbol = this.textContent ?? '';\n\tconst towardsCombatant = 'comp';\n\tconst hitOrMiss = 'miss';\n\n\trenderBattleMessageElem({\n\t\tcurrentCellCoord,\n\t\tcurrentShipSymbol,\n\t\ttowardsCombatant,\n\t\thitOrMiss,\n\t});\n\n\t// assigns '✖' to currently missed co-ordinate and colors it amber\n\tthis.textContent == '';\n\tthis.textContent = '✖';\n\tpipe(addStyleToElem([['color', '#f0a400']]))(this);\n\n\t// initializse storage for previously missed co-ordinates\n\tif (!localStorage.getItem('prevPlayerMissOnCompCoord')) {\n\t\tlocalStorage.setItem('prevPlayerMissOnCompCoord', JSON.stringify(''));\n\t}\n\n\t// grabs the previous miss co-ordinates in order to turn them back into gray\n\tconst prevPlayerMissOnCompCoord = JSON.parse(\n\t\tlocalStorage.getItem('prevPlayerMissOnCompCoord') ?? ''\n\t);\n\tconst prevPlayerMissOnCompCell: Div = document.querySelector(\n\t\t`[data-cellcomp=\"${prevPlayerMissOnCompCoord}\"]`\n\t);\n\tpipe(addStyleToElem([['color', 'gainsboro']]))(prevPlayerMissOnCompCell);\n\n\t// stores current miss co-ordinates in order to highlight the current round's co-ordinates\n\tlocalStorage.setItem('prevPlayerMissOnCompCoord', JSON.stringify(currentCellCoord));\n\n\t// store miss coords\n\tconst compShipsMissesCoords = JSON.parse(\n\t\tlocalStorage.getItem('compShipsMissesCoords') ?? JSON.stringify([])\n\t);\n\tcompShipsMissesCoords.push(currentCellCoord);\n\tlocalStorage.setItem('compShipsMissesCoords', JSON.stringify(compShipsMissesCoords));\n\n\t// update the comp tactical overview\n\tupdateCompTacticalOverviewShips();\n\n\t// all JS synchronous functions run-to-completion and since click callbacks are also synchronous, the setTimeout function is passed to a browser API and immediately starts the timer while the rest of the synchronous functions are run and popped off the call stack.\n\t// the remove click event listeners callback functions are the last synchronous instructions to be executed preventing the player from clicking any comp board cells for two seconds\n\t// After two seconds, the event loop pushes the setTimeout callback function to the macrotask queue (the higher priority microtask queue is empty because there are no promises), and once the event loop confirms call stack is empty, pushes the computersTurn function to the stack and is run and then event listeners are added back on\n\t// simulates a rudimentary game loop and gives the illusion of time taken for the computer to \"think\"\n\tconst compShipNotPresent: NodesDiv = document.querySelectorAll('.compShipNotPresent');\n\tconst compShipPresent: NodesDiv = document.querySelectorAll('.compShipPresent');\n\n\tcompShipNotPresent.forEach((cell) => {\n\t\tpipe(removeEvtListener('click')(handlePlayerClickOnCompMisses))(cell);\n\t});\n\tcompShipPresent.forEach((cell) => {\n\t\tpipe(removeEvtListener('click')(handlePlayerClickOnCompShips))(cell);\n\t});\n\n\t//computers turn\n\tsetTimeout(computersTurn, 2000);\n};\nexport { handlePlayerClickOnCompMisses };\n","import { shipNames } from '../data/shipNames';\nimport {\n\taddEvtListener,\n\taddTextToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from '../functions/elementCreators';\nimport { placeCompShipsOnBoard } from '../functions/placeCompShipsOnBoard';\nimport { randomizeAndStoreShipNames } from '../functions/randomizeAndStoreShipNames';\nimport { renderCompBoard } from '../functions/renderCompBoard';\nimport { renderPlayerBoard } from '../functions/renderPlayerBoard';\nimport { renderTacticalOverview } from '../functions/renderTacticalOverview';\nimport { Div, NodesDiv } from '../functions/types';\nimport { handlePlayerClickOnCompMisses } from './handlePlayerClickOnCompMisses';\nimport { handlePlayerClickOnCompShips } from './handlePlayerClickOnCompShips';\n\nconst handleStartButtonClick = function (this: HTMLButtonElement, ev: MouseEvent): void {\n\t// scroll to top of window\n\twindow.scrollTo(0, 0);\n\n\t// removes the previous info screen\n\tconst infoScreenContainer = document.querySelector('.infoScreen-container');\n\tinfoScreenContainer?.remove();\n\n\tconst preBattleInfoScreen = document.querySelector('.preBattle-infoScreen');\n\tpreBattleInfoScreen?.remove();\n\n\t// removes the ship bttns wrapper\n\tconst shipBttnsWrapper = document.querySelector('.shipBttns-wrapper');\n\tshipBttnsWrapper?.remove();\n\n\tconst bothBoardsContainer = document.querySelector('.bothBoards-container');\n\tbothBoardsContainer?.remove();\n\n\t// remove the start button\n\tthis.remove();\n\n\t// renders player and comp board and places the ships\n\trenderPlayerBoard();\n\trenderCompBoard();\n\t// placeCompShipsOnBoard(compShipsPlacementChoicesArr);\n\tplaceCompShipsOnBoard();\n\n\t//randomizes and store ship names for each battle\n\trandomizeAndStoreShipNames(shipNames);\n\n\tif (!localStorage.getItem('isGameRunning')) {\n\t\tlocalStorage.setItem('isGameRunning', JSON.stringify(true));\n\t}\n\n\t// adds evt listeners to comp game board cells\n\tconst compShipPresentCells: NodesDiv = document.querySelectorAll('.compShipPresent');\n\tcompShipPresentCells.forEach((cell) =>\n\t\taddEvtListener('click')(handlePlayerClickOnCompShips)(cell)\n\t);\n\n\tconst compShipNotPresentCells: NodesDiv =\n\t\tdocument.querySelectorAll('.compShipNotPresent');\n\tcompShipNotPresentCells.forEach((cell) =>\n\t\taddEvtListener('click')(handlePlayerClickOnCompMisses)(cell)\n\t);\n\n\t// renders a new info screen for the battle texts\n\tconst main: HTMLElement | null = document.querySelector('.main');\n\n\tpipe(appendElemToParent(main))(elemCreator('div')(['infoScreen-wrapper']));\n\n\t// render tactical overview\n\trenderTacticalOverview();\n\n\tconst gameBoardContainer: Div = document.querySelector('.gameBoard-container');\n\n\t// renders a new info screen for the battle texts\n\tconst battleMessageWrapper = elemCreator('div')(['battleMessage-wrapper']);\n\tpipe(appendElemToParent(gameBoardContainer))(battleMessageWrapper);\n\n\tpipe(\n\t\taddTextToElem('Manticoran Tenth Fleet CIC'),\n\t\tappendElemToParent(battleMessageWrapper)\n\t)(elemCreator('h2')(['battleMessageTitleElem']));\n\n\tconst today = new Date();\n\tconst formatter = new Intl.DateTimeFormat('en-US', {\n\t\tmonth: 'short',\n\t\tday: 'numeric',\n\t});\n\tconst formattedDate = formatter.format(today);\n\n\tpipe(\n\t\taddTextToElem(`Imperial Terran-year 1913 ${formattedDate}`),\n\t\tappendElemToParent(battleMessageWrapper)\n\t)(elemCreator('h4')(['battleMessageElem']));\n\n\tconst battleMessageContainer = elemCreator('div')(['battleMessage-container']);\n\tappendElemToParent(battleMessageWrapper)(battleMessageContainer);\n};\n\nexport { handleStartButtonClick };\n","import { ShipNamesPool } from '../functions/types';\n\nconst randomizeAndStoreShipNames = function (shipNames_: ShipNamesPool): void {\n\t// used to display a persistent (throughout the game round) name, that corresponds to the type of ship, that is displayed when a hit is registered\n\tif (!localStorage.getItem('playerShipNames')) {\n\t\tlocalStorage.setItem('playerShipNames', JSON.stringify([]));\n\t}\n\n\t// creates a randomized ship name per game session and stores it to be used for the battle messages\n\tObject.entries(shipNames_).forEach(([polity, shipTypes]) => {\n\t\tif (polity === 'haven') {\n\t\t\tconst havenShipNames = new Map();\n\n\t\t\tObject.entries(shipTypes).forEach(([shipType, shipNamesArr]) => {\n\t\t\t\t// need two names for destroyers and frigates\n\t\t\t\tif (shipType === 'destroyers' || shipType === 'frigates') {\n\t\t\t\t\tconst tempShipNamesArr = [\n\t\t\t\t\t\tshipNamesArr[Math.floor(Math.random() * shipNamesArr.length)],\n\t\t\t\t\t\tshipNamesArr[Math.floor(Math.random() * shipNamesArr.length)],\n\t\t\t\t\t];\n\n\t\t\t\t\thavenShipNames.set(shipType, tempShipNamesArr);\n\t\t\t\t} else {\n\t\t\t\t\t// only one name for superdreadnought, carrier and battleship\n\t\t\t\t\thavenShipNames.set(\n\t\t\t\t\t\t//changes from plural to singular\n\t\t\t\t\t\tshipType.slice(0, -1),\n\t\t\t\t\t\tshipNamesArr[Math.floor(Math.random() * shipNamesArr.length)]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlocalStorage.setItem(\n\t\t\t\t'havenShipNames',\n\t\t\t\tJSON.stringify(Object.fromEntries(havenShipNames))\n\t\t\t);\n\t\t} else if (polity === 'manticore') {\n\t\t\tconst manticoreShipNames = new Map();\n\n\t\t\tObject.entries(shipTypes).forEach(([shipType, shipNamesArr]) => {\n\t\t\t\t// need two names for destroyers and frigates\n\t\t\t\tif (shipType === 'destroyers' || shipType === 'frigates') {\n\t\t\t\t\tconst tempShipNamesArr = [\n\t\t\t\t\t\tshipNamesArr[Math.floor(Math.random() * shipNamesArr.length)],\n\t\t\t\t\t\tshipNamesArr[Math.floor(Math.random() * shipNamesArr.length)],\n\t\t\t\t\t];\n\n\t\t\t\t\tmanticoreShipNames.set(shipType, tempShipNamesArr);\n\t\t\t\t} else {\n\t\t\t\t\t// only one name for superdreadnought, carrier and battleship\n\t\t\t\t\tmanticoreShipNames.set(\n\t\t\t\t\t\tshipType.slice(0, -1),\n\t\t\t\t\t\tshipNamesArr[Math.floor(Math.random() * shipNamesArr.length)]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlocalStorage.setItem(\n\t\t\t\t'manticoreShipNames',\n\t\t\t\tJSON.stringify(Object.fromEntries(manticoreShipNames))\n\t\t\t);\n\t\t}\n\t});\n};\nexport { randomizeAndStoreShipNames };\n","import { handleStartButtonClick } from '../events/handleStartButtonClick';\nimport {\n\taddAttributeToElem,\n\taddEvtListener,\n\taddTextToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from '../functions/elementCreators';\nimport { Button, Div } from '../functions/types';\n\nconst renderStartButton = function (): void {\n\t// removes the ship selection buttons\n\tconst shipsBttnContainer: Div = document.querySelector('.shipsBttn-container');\n\tshipsBttnContainer?.remove();\n\t// removes axis selection button\n\tconst axisSelectorBttn: Button = document.querySelector('.bttn-axisSelector');\n\taxisSelectorBttn?.remove();\n\n\tconst shipBttnsWrapper: Div = document.querySelector('.shipBttns-wrapper');\n\n\t// renders start game button\n\tpipe(\n\t\taddTextToElem('Engage!'),\n\t\taddAttributeToElem([\n\t\t\t['type', 'button'],\n\t\t\t['value', 'start'],\n\t\t]),\n\t\taddEvtListener('click')(handleStartButtonClick),\n\t\tappendElemToParent(shipBttnsWrapper)\n\t)(elemCreator('button')(['bttn', 'bttn-startGame']));\n};\nexport { renderStartButton };\n","import { renderStarsInPlayerBoard } from './renderStarsInPlayerBoard';\nimport { renderStartButton } from './renderStartButton';\n\nconst checkAllShipsInPlace = function (): void {\n\t// if playerShip co-ordinates does not exist, create it to check its length which is the sum total of length of all player ships\n\tif (localStorage.getItem('playerShipsCoords')) {\n\t\tconst shipsCoordsArr: string[] = JSON.parse(\n\t\t\tlocalStorage.getItem('playerShipsCoords') ?? JSON.stringify([])\n\t\t);\n\n\t\t// if all the player ships have been placed\n\t\tif (shipsCoordsArr.length === 18) {\n\t\t\t// adds stars to player board\n\t\t\trenderStarsInPlayerBoard();\n\t\t\t// STARTS GAME\n\t\t\trenderStartButton();\n\t\t}\n\t}\n};\nexport { checkAllShipsInPlace };\n","import { addAttributeToElem, addTextToElem, pipe } from '../functions/elementCreators';\nimport { NodesDiv } from '../functions/types';\n\nconst renderStarsInPlayerBoard = function (): void {\n\tconst playerGameCell: NodesDiv = document.querySelectorAll('.player-gameCell');\n\n\t// adds stars and a corresponding class to differentiate the cells which do not consist of a player ship\n\tplayerGameCell.forEach((cell) => {\n\t\tif (!cell.classList.contains('playerShipPresent')) {\n\t\t\tpipe(\n\t\t\t\taddTextToElem('✴'),\n\t\t\t\taddAttributeToElem([['class', 'player-gameCell playerShipNotPresent']])\n\t\t\t)(cell);\n\t\t}\n\t});\n};\nexport { renderStarsInPlayerBoard };\n","const doesShipPlacementOverlap = function (\n\tshipLength_: number,\n\tcurrentAxis_: string,\n\tcurrentX_: string,\n\tcurrentY_: string\n) {\n\t// initializes on first call for overlap detection\n\tif (!localStorage.getItem('playerShipsCoords')) {\n\t\tlocalStorage.setItem('playerShipsCoords', JSON.stringify([]));\n\t}\n\tconst playerShipsCoords: string[] = JSON.parse(\n\t\tlocalStorage.getItem('playerShipsCoords') ?? ''\n\t);\n\n\tif (currentAxis_ === 'Axis-X') {\n\t\tfor (let i = 0; i < shipLength_; i += 1) {\n\t\t\t// overlap detection\n\t\t\tif (playerShipsCoords.includes(`${Number(currentX_) + i},${currentY_}`)) {\n\t\t\t\talert(\n\t\t\t\t\t'A ship is already present at these coordinates. Please choose another area.  (｡ •́︿•̀｡ )'\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t} else if (currentAxis_ === 'Axis-Y') {\n\t\tfor (let i = 0; i < shipLength_; i += 1) {\n\t\t\tif (playerShipsCoords.includes(`${currentX_},${Number(currentY_) + i}`)) {\n\t\t\t\talert(\n\t\t\t\t\t'A ship is already present at these coordinates. Please choose another area.  (｡ •́︿•̀｡ )'\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n};\nexport { doesShipPlacementOverlap };\n","const isCorrectNumberOfShips = function (\n\tship_: string,\n\tamount_: string\n): boolean | undefined {\n\t// capitalizes first letters\n\tconst ship = ship_[0].toUpperCase() + ship_.slice(1);\n\tconst amount = amount_[0].toUpperCase() + amount_.slice(1);\n\n\tif (amount_ === 'single') {\n\t\t// for persistent state and enforces single ship\n\t\tif (!localStorage.getItem(`is${amount}${ship}`)) {\n\t\t\tlocalStorage.setItem(`is${amount}${ship}`, JSON.stringify(true));\n\t\t}\n\t\treturn true;\n\t} else if (amount_ === 'double') {\n\t\tconst shipObjArr: unknown[] = JSON.parse(localStorage.getItem(`${ship_}`) ?? '');\n\n\t\tif (shipObjArr.length < 2) {\n\t\t\t// for persistent state and enforces double ships\n\t\t\tif (!localStorage.getItem(`is${amount}${ship}`)) {\n\t\t\t\tlocalStorage.setItem(`is${amount}${ship}`, JSON.stringify(true));\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (shipObjArr.length === 2) {\n\t\t\tlocalStorage.setItem(`is${amount}${ship}`, JSON.stringify(false));\n\t\t\treturn false;\n\t\t}\n\t}\n};\n\nexport { isCorrectNumberOfShips };\n","import { addStyleToElem, addTextToElem, pipe } from '../functions/elementCreators';\nimport { Div } from '../functions/types';\n\nconst handleBattleshipMouseEnter = function (this: HTMLDivElement, ev: MouseEvent): void {\n\t// grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector');\n\tconst currentAxis = axisSelector?.textContent;\n\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 3; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t);\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('B'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 3; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t);\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('B'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t}\n};\nexport { handleBattleshipMouseEnter };\n","import { addStyleToElem, pipe } from '../functions/elementCreators';\nimport { Div } from '../functions/types';\n\nconst handleBattleshipMouseLeave = function (this: HTMLDivElement, ev: MouseEvent): void {\n\t// grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector');\n\tconst currentAxis = axisSelector?.textContent;\n\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 3; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t);\n\n\t\t\t// avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = '';\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 3; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t);\n\n\t\t\t// avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = '';\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport { handleBattleshipMouseLeave };\n","import { addStyleToElem, addTextToElem, pipe } from '../functions/elementCreators';\nimport { Div } from '../functions/types';\n\nconst handleCarrierMouseEnter = function (this: HTMLDivElement, ev: MouseEvent): void {\n\t// grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector');\n\tconst currentAxis = axisSelector?.textContent;\n\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 4; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t);\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('C'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 4; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t);\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('C'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport { handleCarrierMouseEnter };\n","import { addStyleToElem, pipe } from '../functions/elementCreators';\nimport { Div } from '../functions/types';\n\nconst handleCarrierMouseLeave = function (this: HTMLDivElement, ev: MouseEvent): void {\n\t// grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector');\n\tconst currentAxis = axisSelector?.textContent;\n\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 4; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t);\n\n\t\t\t// avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = '';\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 4; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t);\n\n\t\t\t// avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = '';\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t}\n};\nexport { handleCarrierMouseLeave };\n","import { addStyleToElem, addTextToElem, pipe } from '../functions/elementCreators';\nimport { Div } from '../functions/types';\n\nconst handleDestroyerMouseEnter = function (this: HTMLDivElement, ev: MouseEvent): void {\n\t// grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector');\n\tconst currentAxis = axisSelector?.textContent;\n\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 2; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t);\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('D'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 2; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t);\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('D'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t}\n};\nexport { handleDestroyerMouseEnter };\n","import { addStyleToElem, pipe } from '../functions/elementCreators';\nimport { Div } from '../functions/types';\n\nconst handleDestroyerMouseLeave = function (this: HTMLDivElement, ev: MouseEvent): void {\n\t// grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector');\n\tconst currentAxis = axisSelector?.textContent;\n\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 2; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t);\n\n\t\t\t// avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = '';\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 2; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t);\n\n\t\t\t// avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = '';\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t}\n};\nexport { handleDestroyerMouseLeave };\n","import { addStyleToElem, addTextToElem, pipe } from '../functions/elementCreators';\nimport { Div } from '../functions/types';\n\nconst handleFrigateMouseEnter = function (this: HTMLDivElement, ev: MouseEvent): void {\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// changes cell on hover\n\tconst nextCell: Div = document.querySelector(\n\t\t`[data-cellplayer=\"${currentX},${currentY}\"]`\n\t);\n\n\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\tpipe(\n\t\t\taddTextToElem('F'),\n\t\t\taddStyleToElem([\n\t\t\t\t['color', '#f0a400'],\n\t\t\t\t['cursor', 'crosshair'],\n\t\t\t])\n\t\t)(nextCell);\n\t}\n};\nexport { handleFrigateMouseEnter };\n","import { addStyleToElem, pipe } from '../functions/elementCreators';\nimport { Div } from '../functions/types';\n\nconst handleFrigateMouseLeave = function (this: HTMLDivElement, ev: MouseEvent): void {\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// changes cell on hover\n\tconst nextCell: Div = document.querySelector(\n\t\t`[data-cellplayer=\"${currentX},${currentY}\"]`\n\t);\n\n\t// avoids changing cells of ships already present\n\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\tif (nextCell) nextCell.textContent = '';\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'default'],\n\t\t\t])\n\t\t)(nextCell);\n\t}\n};\nexport { handleFrigateMouseLeave };\n","import { addStyleToElem, addTextToElem, pipe } from '../functions/elementCreators';\nimport { Div } from '../functions/types';\n\nconst handleSuperdreadnoughtMouseEnter = function (\n\tthis: HTMLDivElement,\n\tev: MouseEvent\n): void {\n\t// grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector');\n\tconst currentAxis = axisSelector?.textContent;\n\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 5; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t);\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('S'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 5; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t);\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('S'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t}\n};\nexport { handleSuperdreadnoughtMouseEnter };\n","import { addStyleToElem, pipe } from '../functions/elementCreators';\nimport { Div } from '../functions/types';\n\nconst handleSuperdreadnoughtMouseLeave = function (\n\tthis: HTMLDivElement,\n\tev: MouseEvent\n): void {\n\t// grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector');\n\tconst currentAxis = axisSelector?.textContent;\n\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 5; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t);\n\n\t\t\t// avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = '';\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 5; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t);\n\n\t\t\t// avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = '';\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell);\n\t\t\t}\n\t\t}\n\t}\n};\nexport { handleSuperdreadnoughtMouseLeave };\n","import { accumulatePlayerShipCoords } from '../functions/accumulatePlayerShipCoords';\nimport { checkAllShipsInPlace } from '../functions/checkAllShipsInPlace';\nimport { doesShipPlacementOverlap } from '../functions/doesShipPlacementOverlap';\nimport {\n\taddAttributeToElem,\n\taddEvtListener,\n\taddStyleToElem,\n\taddTextToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../functions/elementCreators';\nimport { isCorrectNumberOfShips } from '../functions/isCorrectNumberOfShips';\nimport { Button, Div, NodesDiv, Superdreadnought } from '../functions/types';\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick';\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick';\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick';\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick';\nimport { handleSuperdreadnoughtMouseEnter } from './handleSuperdreadnoughtMouseEnter';\nimport { handleSuperdreadnoughtMouseLeave } from './handleSuperdreadnoughtMouseLeave';\n\nconst handleSuperdreadnoughtCellClick = function (\n\tthis: HTMLDivElement,\n\tev: MouseEvent\n): null | undefined {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell');\n\n\t// grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector');\n\tconst currentAxis = axisSelector?.textContent;\n\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// initializes the carrier object upon first call\n\tif (!localStorage.getItem('superdreadnought')) {\n\t\tlocalStorage.setItem('superdreadnought', JSON.stringify(''));\n\t}\n\n\tlet superdreadnought: Superdreadnought = JSON.parse(\n\t\tlocalStorage.getItem('superdreadnought') ?? ''\n\t);\n\n\tconst superdreadnoughtCoords: string[] = [];\n\n\tconst ship = 'superdreadnought';\n\tconst amount = 'single';\n\n\t// for horizontal placement\n\tif (currentAxis === 'Axis-X' && isCorrectNumberOfShips(ship, amount)) {\n\t\t// grid boundary detection\n\t\tif (Number(currentX) > 5) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)');\n\t\t\treturn null;\n\t\t}\n\n\t\t// overlap detection\n\t\tif (doesShipPlacementOverlap(5, currentAxis, currentX, currentY)) return null;\n\n\t\t// places superdreadnought on the grid\n\t\tfor (let i = 0; i < 5; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t);\n\t\t\t// prevents duplicate letters being placed\n\t\t\tif (nextCell) nextCell.textContent = '';\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('S')\n\t\t\t)(nextCell);\n\n\t\t\tsuperdreadnoughtCoords.push(`${Number(currentX) + i},${currentY}`);\n\t\t}\n\n\t\t// prevents updating after first click\n\t\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t\t// updates superdreadnought object attributes\n\t\t\tsuperdreadnought = {\n\t\t\t\thead: superdreadnoughtCoords[0],\n\t\t\t\tbody1: superdreadnoughtCoords[1],\n\t\t\t\tbody2: superdreadnoughtCoords[2],\n\t\t\t\tbody3: superdreadnoughtCoords[3],\n\t\t\t\ttail: superdreadnoughtCoords[4],\n\t\t\t};\n\t\t}\n\n\t\tlocalStorage.setItem('isSingleSuperdreadnought', JSON.stringify(false));\n\t} // for vertical placement\n\telse if (currentAxis === 'Axis-Y' && isCorrectNumberOfShips(ship, 'single')) {\n\t\t// grid boundary detection\n\t\tif (Number(currentY) > 5) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)');\n\t\t\treturn null;\n\t\t}\n\n\t\t// overlap detection\n\t\tif (doesShipPlacementOverlap(5, currentAxis, currentX, currentY)) return null;\n\n\t\t// places superdreadnought on the grid\n\t\tfor (let i = 0; i < 5; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t);\n\n\t\t\t// prevents duplicate letters being placed\n\t\t\tif (nextCell) nextCell.textContent = '';\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('S')\n\t\t\t)(nextCell);\n\n\t\t\tsuperdreadnoughtCoords.push(`${currentX},${Number(currentY) + i}`);\n\t\t}\n\n\t\t// prevents updating after first click\n\t\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t\t// updates superdreadnought object attributes\n\t\t\tsuperdreadnought = {\n\t\t\t\thead: superdreadnoughtCoords[0],\n\t\t\t\tbody1: superdreadnoughtCoords[1],\n\t\t\t\tbody2: superdreadnoughtCoords[2],\n\t\t\t\tbody3: superdreadnoughtCoords[3],\n\t\t\t\ttail: superdreadnoughtCoords[4],\n\t\t\t};\n\t\t}\n\n\t\tlocalStorage.setItem('isSingleSuperdreadnought', JSON.stringify(false));\n\t}\n\n\t// stores superdreadnought\n\tlocalStorage.setItem('superdreadnought', JSON.stringify(superdreadnought));\n\n\t// stores current ship coords to pool of all ship coords\n\taccumulatePlayerShipCoords(superdreadnoughtCoords);\n\n\tif (isCorrectNumberOfShips(ship, amount) === true) {\n\t\t// after 'this' button has been clicked, sets the color to grey to visually indicate finished\n\t\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought');\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t])\n\t\t)(superdreadnoughtBttn);\n\n\t\t// enables events on other shipButtons after superdreadnought has been placed and sets color to green to visually indicate that they can be clicked if they have not been previously disabled after a click\n\t\tconst carrierBttn: Button = document.querySelector('.bttn-carrier');\n\t\tif (carrierBttn && carrierBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleCarrierBttnClick)\n\t\t\t)(carrierBttn);\n\n\t\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship');\n\t\tif (battleshipBttn && battleshipBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleBattleshipBttnClick)\n\t\t\t)(battleshipBttn);\n\n\t\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer');\n\t\tif (destroyerBttn && destroyerBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleDestroyerBttnClick)\n\t\t\t)(destroyerBttn);\n\n\t\tconst frigateBttn: Button = document.querySelector('.bttn-frigate');\n\t\tif (frigateBttn && frigateBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleFrigateBttnClick)\n\t\t\t)(frigateBttn);\n\n\t\t// removes event listeners after single superdreadnought has been placed\n\t\tplayerGameCells.forEach((player) => {\n\t\t\tpipe(\n\t\t\t\tremoveEvtListener('click')(handleSuperdreadnoughtCellClick),\n\t\t\t\tremoveEvtListener('mouseenter')(handleSuperdreadnoughtMouseEnter),\n\t\t\t\tremoveEvtListener('mouseleave')(handleSuperdreadnoughtMouseLeave)\n\t\t\t)(player);\n\t\t});\n\t}\n\n\t// if all ships placed, renders start button\n\tcheckAllShipsInPlace();\n};\nexport { handleSuperdreadnoughtCellClick };\n","import {\n\taddEvtListener,\n\taddStyleToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../functions/elementCreators';\nimport { Button, NodesDiv } from '../functions/types';\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick';\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick';\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick';\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick';\nimport { handleSuperdreadnoughtCellClick } from './handleSuperdreadnoughtCellClick';\nimport { handleSuperdreadnoughtMouseEnter } from './handleSuperdreadnoughtMouseEnter';\nimport { handleSuperdreadnoughtMouseLeave } from './handleSuperdreadnoughtMouseLeave';\n\nconst handleSuperdreadnoughtBttnClick = function (\n\tthis: HTMLButtonElement,\n\tev: MouseEvent\n): void {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell');\n\n\t// disables this button after clicking\n\tthis.disabled = true;\n\n\t// visually indicates that 'this' button is selected\n\tpipe(\n\t\taddStyleToElem([\n\t\t\t['border', '1px solid #f0a400'],\n\t\t\t['color', '#f0a400'],\n\t\t])\n\t)(this);\n\n\t// disables clicking on other shipButtons while selected\n\t// prevents double selection\n\tconst carrierBttn: Button = document.querySelector('.bttn-carrier');\n\tif (carrierBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleCarrierBttnClick)\n\t\t)(carrierBttn);\n\n\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship');\n\tif (battleshipBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleBattleshipBttnClick)\n\t\t)(battleshipBttn);\n\n\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer');\n\tif (destroyerBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleDestroyerBttnClick)\n\t\t)(destroyerBttn);\n\n\tconst frigateBttn: Button = document.querySelector('.bttn-frigate');\n\tif (frigateBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleFrigateBttnClick)\n\t\t)(frigateBttn);\n\n\t// assigns event listeners to each player game cell after clicking superdreadnought button\n\tplayerGameCells.forEach((player) =>\n\t\tpipe(\n\t\t\taddEvtListener('click')(handleSuperdreadnoughtCellClick),\n\t\t\taddEvtListener('mouseenter')(handleSuperdreadnoughtMouseEnter),\n\t\t\taddEvtListener('mouseleave')(handleSuperdreadnoughtMouseLeave)\n\t\t)(player)\n\t);\n};\nexport { handleSuperdreadnoughtBttnClick };\n","import { accumulatePlayerShipCoords } from '../functions/accumulatePlayerShipCoords';\nimport { checkAllShipsInPlace } from '../functions/checkAllShipsInPlace';\nimport { doesShipPlacementOverlap } from '../functions/doesShipPlacementOverlap';\nimport {\n\taddAttributeToElem,\n\taddEvtListener,\n\taddStyleToElem,\n\taddTextToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../functions/elementCreators';\nimport { isCorrectNumberOfShips } from '../functions/isCorrectNumberOfShips';\nimport { Button, Div, Frigate, NodesDiv } from '../functions/types';\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick';\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick';\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick';\nimport { handleFrigateMouseEnter } from './handleFrigateMouseEnter';\nimport { handleFrigateMouseLeave } from './handleFrigateMouseLeave';\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick';\n\nconst handleFrigateCellClick = function (\n\tthis: HTMLDivElement,\n\tev: MouseEvent\n): null | undefined {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell');\n\n\t// grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector');\n\tconst currentAxis = axisSelector?.textContent ?? '';\n\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// initializes the ship object upon first call\n\tif (!localStorage.getItem('frigate')) {\n\t\tlocalStorage.setItem('frigate', JSON.stringify([]));\n\t}\n\tconst frigate: Frigate[] = JSON.parse(localStorage.getItem('frigate') ?? '');\n\n\tconst frigateCoords: string[] = [];\n\n\tconst ship = 'frigate';\n\tconst amount = 'double';\n\n\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t// overlap detection\n\t\tif (doesShipPlacementOverlap(1, currentAxis, currentX, currentY)) return null;\n\n\t\t// places frigate on the grid\n\t\tconst nextCell: Div = document.querySelector(\n\t\t\t`[data-cellplayer=\"${currentX},${currentY}\"]`\n\t\t);\n\t\t// prevents duplicate letters being placed\n\t\tif (nextCell) nextCell.textContent = '';\n\n\t\tpipe(\n\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\taddStyleToElem([\n\t\t\t\t['color', '#f0a400'],\n\t\t\t\t['cursor', 'default'],\n\t\t\t]),\n\t\t\taddTextToElem('F')\n\t\t)(nextCell);\n\n\t\tfrigateCoords.push(`${currentX},${currentY}`);\n\n\t\t// only updates if there are 2 or less ships\n\t\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t\tfrigate.push({ body: frigateCoords[0] });\n\t\t}\n\t} else if (isCorrectNumberOfShips(ship, amount) === false) {\n\t\treturn null;\n\t}\n\n\t// stores frigate\n\tlocalStorage.setItem('frigate', JSON.stringify(frigate));\n\n\t// stores current ship coords to pool of all ship coords\n\taccumulatePlayerShipCoords(frigateCoords);\n\n\tif (isCorrectNumberOfShips(ship, amount) === false) {\n\t\t// after 'this' button has been clicked, sets the color to grey to visually indicate finished\n\t\tconst frigateBttn: Button = document.querySelector('.bttn-frigate');\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t])\n\t\t)(frigateBttn);\n\n\t\t// enables events on other shipButtons after both frigates have been placed and sets color to green to visually indicate that they can be clicked if they have not been previously disabled after a click\n\t\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought');\n\t\tif (superdreadnoughtBttn && superdreadnoughtBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t\t)(superdreadnoughtBttn);\n\n\t\tconst carrierBttn: Button = document.querySelector('.bttn-carrier');\n\t\tif (carrierBttn && carrierBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleCarrierBttnClick)\n\t\t\t)(carrierBttn);\n\n\t\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship');\n\t\tif (battleshipBttn && battleshipBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleBattleshipBttnClick)\n\t\t\t)(battleshipBttn);\n\n\t\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer');\n\t\tif (destroyerBttn && destroyerBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleDestroyerBttnClick)\n\t\t\t)(destroyerBttn);\n\n\t\t//removes event listeners after both frigates have been placed\n\t\tplayerGameCells.forEach((player) => {\n\t\t\tpipe(\n\t\t\t\tremoveEvtListener('click')(handleFrigateCellClick),\n\t\t\t\tremoveEvtListener('mouseenter')(handleFrigateMouseEnter),\n\t\t\t\tremoveEvtListener('mouseleave')(handleFrigateMouseLeave)\n\t\t\t)(player);\n\t\t});\n\t}\n\n\t//if all ships placed, renders start button\n\tcheckAllShipsInPlace();\n};\n\nexport { handleFrigateCellClick };\n","import {\n\taddEvtListener,\n\taddStyleToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../functions/elementCreators';\nimport { Button, NodesDiv } from '../functions/types';\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick';\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick';\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick';\nimport { handleFrigateCellClick } from './handleFrigateCellClick';\nimport { handleFrigateMouseEnter } from './handleFrigateMouseEnter';\nimport { handleFrigateMouseLeave } from './handleFrigateMouseLeave';\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick';\n\nconst handleFrigateBttnClick = function (this: HTMLButtonElement, ev: MouseEvent): void {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell');\n\n\t// disables this button after clicking\n\tthis.disabled = true;\n\n\t// visually indicates that 'this' button is selected\n\tpipe(\n\t\taddStyleToElem([\n\t\t\t['border', '1px solid #f0a400'],\n\t\t\t['color', '#f0a400'],\n\t\t])\n\t)(this);\n\n\t// disables events on other shipButtons while selected\n\t// prevents double selection\n\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought');\n\tif (superdreadnoughtBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t)(superdreadnoughtBttn);\n\n\tconst carrierBttn: Button = document.querySelector('.bttn-carrier');\n\tif (carrierBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleCarrierBttnClick)\n\t\t)(carrierBttn);\n\n\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship');\n\tif (battleshipBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleBattleshipBttnClick)\n\t\t)(battleshipBttn);\n\n\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer');\n\tif (destroyerBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleDestroyerBttnClick)\n\t\t)(destroyerBttn);\n\n\t// assigns event listeners to each player game cell after clicking destroyer button\n\tplayerGameCells.forEach((player) =>\n\t\tpipe(\n\t\t\taddEvtListener('click')(handleFrigateCellClick),\n\t\t\taddEvtListener('mouseenter')(handleFrigateMouseEnter),\n\t\t\taddEvtListener('mouseleave')(handleFrigateMouseLeave)\n\t\t)(player)\n\t);\n};\nexport { handleFrigateBttnClick };\n","import { accumulatePlayerShipCoords } from '../functions/accumulatePlayerShipCoords';\nimport { checkAllShipsInPlace } from '../functions/checkAllShipsInPlace';\nimport { doesShipPlacementOverlap } from '../functions/doesShipPlacementOverlap';\nimport {\n\taddAttributeToElem,\n\taddEvtListener,\n\taddStyleToElem,\n\taddTextToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../functions/elementCreators';\nimport { isCorrectNumberOfShips } from '../functions/isCorrectNumberOfShips';\nimport { Button, Destroyer, Div, NodesDiv } from '../functions/types';\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick';\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick';\nimport { handleDestroyerMouseEnter } from './handleDestroyerMouseEnter';\nimport { handleDestroyerMouseLeave } from './handleDestroyerMouseLeave';\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick';\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick';\n\nconst handleDestroyerCellClick = function (\n\tthis: HTMLDivElement,\n\tev: MouseEvent\n): null | undefined {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell');\n\n\t// grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector');\n\tconst currentAxis = axisSelector?.textContent;\n\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// initializes the ship object upon first call\n\tif (!localStorage.getItem('destroyer')) {\n\t\tlocalStorage.setItem('destroyer', JSON.stringify([]));\n\t}\n\tconst destroyer: Destroyer[] = JSON.parse(localStorage.getItem('destroyer') ?? '');\n\n\tconst destroyerCoords: string[] = [];\n\n\tconst ship = 'destroyer';\n\tconst amount = 'double';\n\n\t// for horizontal placement\n\tif (currentAxis === 'Axis-X' && isCorrectNumberOfShips(ship, amount)) {\n\t\t//grid boundary detection\n\t\tif (Number(currentX) > 8) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)');\n\t\t\treturn null;\n\t\t}\n\n\t\t// overlap detection\n\t\tif (doesShipPlacementOverlap(2, currentAxis, currentX, currentY)) return null;\n\n\t\t// places destroyer on the grid\n\t\tfor (let i = 0; i < 2; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t);\n\t\t\t// prevents duplicate letters being placed\n\t\t\tif (nextCell) nextCell.textContent = '';\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('D')\n\t\t\t)(nextCell);\n\n\t\t\tdestroyerCoords.push(`${Number(currentX) + i},${currentY}`);\n\t\t}\n\n\t\t// only updates if there are 2 or less ships\n\t\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t\tdestroyer.push({ head: destroyerCoords[0], tail: destroyerCoords[1] });\n\t\t}\n\t} // for vertical placement\n\telse if (currentAxis === 'Axis-Y' && isCorrectNumberOfShips(ship, amount)) {\n\t\t// grid boundary detection\n\t\tif (Number(currentY) > 8) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)');\n\t\t\treturn null;\n\t\t}\n\n\t\t// overlap detection\n\t\tif (doesShipPlacementOverlap(2, currentAxis, currentX, currentY)) return null;\n\n\t\tfor (let i = 0; i < 2; i += 1) {\n\t\t\t// places destroyer on the grid\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t);\n\t\t\t// prevents duplicate letters being placed\n\t\t\tif (nextCell) nextCell.textContent = '';\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('D')\n\t\t\t)(nextCell);\n\n\t\t\tdestroyerCoords.push(`${currentX},${Number(currentY) + i}`);\n\t\t}\n\n\t\t// only updates if there are 2 or less ships\n\t\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t\tdestroyer.push({ head: destroyerCoords[0], tail: destroyerCoords[1] });\n\t\t}\n\t} else if (isCorrectNumberOfShips(ship, amount) === false) return null;\n\n\t// stores destroyer\n\tlocalStorage.setItem('destroyer', JSON.stringify(destroyer));\n\n\t// stores current ship coords to pool of all ship coords\n\taccumulatePlayerShipCoords(destroyerCoords);\n\n\tif (isCorrectNumberOfShips(ship, amount) === false) {\n\t\t// after 'this' button has been clicked, sets the color to grey to visually indicate finished\n\t\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer');\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t])\n\t\t)(destroyerBttn);\n\n\t\t// enables events on other shipButtons after both destroyers have been placed and sets color to green to visually indicate that they can be clicked if they have not been previously disabled after a click\n\t\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought');\n\t\tif (superdreadnoughtBttn && superdreadnoughtBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t\t)(superdreadnoughtBttn);\n\n\t\tconst carrierBttn: Button = document.querySelector('.bttn-carrier');\n\t\tif (carrierBttn && carrierBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleCarrierBttnClick)\n\t\t\t)(carrierBttn);\n\n\t\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship');\n\t\tif (battleshipBttn && battleshipBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleBattleshipBttnClick)\n\t\t\t)(battleshipBttn);\n\n\t\tconst frigateBttn: Button = document.querySelector('.bttn-frigate');\n\t\tif (frigateBttn && frigateBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleFrigateBttnClick)\n\t\t\t)(frigateBttn);\n\n\t\t//removes event listeners after both destroyers have been placed\n\t\tplayerGameCells.forEach((player) => {\n\t\t\tpipe(\n\t\t\t\tremoveEvtListener('click')(handleDestroyerCellClick),\n\t\t\t\tremoveEvtListener('mouseenter')(handleDestroyerMouseEnter),\n\t\t\t\tremoveEvtListener('mouseleave')(handleDestroyerMouseLeave)\n\t\t\t)(player);\n\t\t});\n\t}\n\n\t//if all ships placed, renders start button\n\tcheckAllShipsInPlace();\n};\n\nexport { handleDestroyerCellClick };\n","import {\n\taddEvtListener,\n\taddStyleToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../functions/elementCreators';\nimport { Button, NodesDiv } from '../functions/types';\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick';\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick';\nimport { handleDestroyerCellClick } from './handleDestroyerCellClick';\nimport { handleDestroyerMouseEnter } from './handleDestroyerMouseEnter';\nimport { handleDestroyerMouseLeave } from './handleDestroyerMouseLeave';\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick';\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick';\n\nconst handleDestroyerBttnClick = function (\n\tthis: HTMLButtonElement,\n\tev: MouseEvent\n): void {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell');\n\n\t// assigns event listeners to each player game cell after clicking destroyer button\n\tplayerGameCells.forEach((player) =>\n\t\tpipe(\n\t\t\taddEvtListener('click')(handleDestroyerCellClick),\n\t\t\taddEvtListener('mouseenter')(handleDestroyerMouseEnter),\n\t\t\taddEvtListener('mouseleave')(handleDestroyerMouseLeave)\n\t\t)(player)\n\t);\n\n\t// disables this button after clicking\n\tthis.disabled = true;\n\n\t// visually indicates that 'this' button is selected\n\tpipe(\n\t\taddStyleToElem([\n\t\t\t['border', '1px solid #f0a400'],\n\t\t\t['color', '#f0a400'],\n\t\t])\n\t)(this);\n\n\t// disables clicking on other shipButtons while selected\n\t// prevents double selection\n\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought');\n\tif (superdreadnoughtBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t)(superdreadnoughtBttn);\n\n\tconst carrierBttn: Button = document.querySelector('.bttn-carrier');\n\tif (carrierBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleCarrierBttnClick)\n\t\t)(carrierBttn);\n\n\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship');\n\tif (battleshipBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleBattleshipBttnClick)\n\t\t)(battleshipBttn);\n\n\tconst frigateBttn: Button = document.querySelector('.bttn-frigate');\n\tif (frigateBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleFrigateBttnClick)\n\t\t)(frigateBttn);\n};\n\nexport { handleDestroyerBttnClick };\n","import { accumulatePlayerShipCoords } from '../functions/accumulatePlayerShipCoords';\nimport { checkAllShipsInPlace } from '../functions/checkAllShipsInPlace';\nimport { doesShipPlacementOverlap } from '../functions/doesShipPlacementOverlap';\nimport {\n\taddAttributeToElem,\n\taddEvtListener,\n\taddStyleToElem,\n\taddTextToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../functions/elementCreators';\nimport { isCorrectNumberOfShips } from '../functions/isCorrectNumberOfShips';\nimport { Button, Carrier, Div, NodesDiv } from '../functions/types';\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick';\nimport { handleCarrierMouseEnter } from './handleCarrierMouseEnter';\nimport { handleCarrierMouseLeave } from './handleCarrierMouseLeave';\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick';\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick';\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick';\n\nconst handleCarrierCellClick = function (\n\tthis: HTMLDivElement,\n\tev: MouseEvent\n): null | undefined {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell');\n\n\t// grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector');\n\tconst currentAxis = axisSelector?.textContent;\n\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// initializes the carrier object upon first call\n\tif (!localStorage.getItem('carrier')) {\n\t\tlocalStorage.setItem('carrier', JSON.stringify([]));\n\t}\n\n\tlet carrier: Carrier = JSON.parse(localStorage.getItem('carrier') ?? '');\n\n\tconst carrierCoords: string[] = [];\n\n\tconst ship = 'carrier';\n\tconst amount = 'single';\n\n\t// for horizontal placement\n\tif (currentAxis === 'Axis-X' && isCorrectNumberOfShips(ship, amount)) {\n\t\t// grid boundary detection\n\t\tif (Number(currentX) > 6) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)');\n\t\t\treturn null;\n\t\t}\n\n\t\t// overlap detection\n\t\tif (doesShipPlacementOverlap(4, currentAxis, currentX, currentY)) return null;\n\n\t\t// places carrier on grid\n\t\tfor (let i = 0; i < 4; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t);\n\n\t\t\t// prevents duplicate letters being placed\n\t\t\tif (nextCell) nextCell.textContent = '';\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('C')\n\t\t\t)(nextCell);\n\n\t\t\tcarrierCoords.push(`${Number(currentX) + i},${currentY}`);\n\t\t}\n\n\t\t// prevents updating after first click\n\t\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t\t//update carrier object attributes\n\t\t\tcarrier = {\n\t\t\t\thead: carrierCoords[0],\n\t\t\t\tbody1: carrierCoords[1],\n\t\t\t\tbody2: carrierCoords[2],\n\t\t\t\ttail: carrierCoords[3],\n\t\t\t};\n\t\t}\n\n\t\tlocalStorage.setItem('isSingleCarrier', JSON.stringify(false));\n\t} // for vertical placement\n\telse if (currentAxis === 'Axis-Y' && isCorrectNumberOfShips(ship, amount)) {\n\t\t//grid boundary detection\n\t\tif (Number(currentY) > 6) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)');\n\t\t\treturn null;\n\t\t}\n\n\t\t// overlap detection\n\t\tif (doesShipPlacementOverlap(4, currentAxis, currentX, currentY)) return null;\n\n\t\t// places carrier on grid\n\t\tfor (let i = 0; i < 4; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t);\n\t\t\t//prevents duplicate letters being placed\n\t\t\tif (nextCell) nextCell.textContent = '';\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('C')\n\t\t\t)(nextCell);\n\n\t\t\tcarrierCoords.push(`${currentX},${Number(currentY) + i}`);\n\t\t}\n\n\t\t// prevents updating after first click\n\t\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t\t// updates carrier object attributes\n\t\t\tcarrier = {\n\t\t\t\thead: carrierCoords[0],\n\t\t\t\tbody1: carrierCoords[1],\n\t\t\t\tbody2: carrierCoords[2],\n\t\t\t\ttail: carrierCoords[3],\n\t\t\t};\n\t\t}\n\n\t\tlocalStorage.setItem('isSingleCarrier', JSON.stringify(false));\n\t}\n\n\t// stores carrier\n\tlocalStorage.setItem('carrier', JSON.stringify(carrier));\n\n\t// stores current ship coords to pool of all ship coords\n\taccumulatePlayerShipCoords(carrierCoords);\n\n\tif (isCorrectNumberOfShips(ship, amount) === true) {\n\t\t// after 'this' button has been clicked, sets the color to grey to visually indicate finished\n\t\tconst carrierBttn: Button = document.querySelector('.bttn-carrier');\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t])\n\t\t)(carrierBttn);\n\n\t\t// enables events on other shipButtons after carrier has been placed and sets color to green to visually indicate that they can be clicked if they have not been previously disabled after a click\n\t\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought');\n\t\tif (superdreadnoughtBttn && superdreadnoughtBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t\t)(superdreadnoughtBttn);\n\n\t\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship');\n\t\tif (battleshipBttn && battleshipBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleBattleshipBttnClick)\n\t\t\t)(battleshipBttn);\n\n\t\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer');\n\t\tif (destroyerBttn && destroyerBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleDestroyerBttnClick)\n\t\t\t)(destroyerBttn);\n\n\t\tconst frigateBttn: Button = document.querySelector('.bttn-frigate');\n\t\tif (frigateBttn && frigateBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleFrigateBttnClick)\n\t\t\t)(frigateBttn);\n\n\t\t// removes event listeners after single carrier has been placed\n\t\tplayerGameCells.forEach((player) => {\n\t\t\tpipe(\n\t\t\t\tremoveEvtListener('click')(handleCarrierCellClick),\n\t\t\t\tremoveEvtListener('mouseenter')(handleCarrierMouseEnter),\n\t\t\t\tremoveEvtListener('mouseleave')(handleCarrierMouseLeave)\n\t\t\t)(player);\n\t\t});\n\t}\n\n\t//if all ships placed, renders start button\n\tcheckAllShipsInPlace();\n};\nexport { handleCarrierCellClick };\n","import {\n\taddEvtListener,\n\taddStyleToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../functions/elementCreators';\nimport { Button, NodesDiv } from '../functions/types';\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick';\nimport { handleCarrierCellClick } from './handleCarrierCellClick';\nimport { handleCarrierMouseEnter } from './handleCarrierMouseEnter';\nimport { handleCarrierMouseLeave } from './handleCarrierMouseLeave';\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick';\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick';\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick';\n\nconst handleCarrierBttnClick = function (this: HTMLButtonElement, ev: MouseEvent): void {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell');\n\n\t// disables button after clicking once\n\tthis.disabled = true;\n\n\t// visually indicates that 'this' button is selected\n\tpipe(\n\t\taddStyleToElem([\n\t\t\t['border', '1px solid #f0a400'],\n\t\t\t['color', '#f0a400'],\n\t\t])\n\t)(this);\n\n\t// disables clicking on other shipButtons while selected\n\t// prevents double selection\n\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought');\n\tif (superdreadnoughtBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t)(superdreadnoughtBttn);\n\n\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship');\n\tif (battleshipBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleBattleshipBttnClick)\n\t\t)(battleshipBttn);\n\n\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer');\n\tif (destroyerBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleDestroyerBttnClick)\n\t\t)(destroyerBttn);\n\n\tconst frigateBttn: Button = document.querySelector('.bttn-frigate');\n\tif (frigateBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleFrigateBttnClick)\n\t\t)(frigateBttn);\n\n\t// assigns event listener to each player game cell after clicking superdreadnought button\n\tplayerGameCells.forEach((player) =>\n\t\tpipe(\n\t\t\taddEvtListener('click')(handleCarrierCellClick),\n\t\t\taddEvtListener('mouseenter')(handleCarrierMouseEnter),\n\t\t\taddEvtListener('mouseleave')(handleCarrierMouseLeave)\n\t\t)(player)\n\t);\n};\n\nexport { handleCarrierBttnClick };\n","import { accumulatePlayerShipCoords } from '../functions/accumulatePlayerShipCoords';\nimport { checkAllShipsInPlace } from '../functions/checkAllShipsInPlace';\nimport { doesShipPlacementOverlap } from '../functions/doesShipPlacementOverlap';\nimport {\n\taddAttributeToElem,\n\taddEvtListener,\n\taddStyleToElem,\n\taddTextToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../functions/elementCreators';\nimport { isCorrectNumberOfShips } from '../functions/isCorrectNumberOfShips';\nimport { Battleship, Button, Div, NodesDiv } from '../functions/types';\nimport { handleBattleshipMouseEnter } from './handleBattleshipMouseEnter';\nimport { handleBattleshipMouseLeave } from './handleBattleshipMouseLeave';\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick';\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick';\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick';\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick';\n\nconst handleBattleshipCellClick = function (\n\tthis: HTMLDivElement,\n\tev: MouseEvent\n): null | undefined {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell');\n\n\t// grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector');\n\tconst currentAxis = axisSelector?.textContent;\n\n\t// grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',');\n\tconst currentX = currentCell?.[0] ?? '';\n\tconst currentY = currentCell?.[1] ?? '';\n\n\t// initializes the ship object upon first call\n\tif (!localStorage.getItem('battleship')) {\n\t\tlocalStorage.setItem('battleship', JSON.stringify(''));\n\t}\n\tlet battleship: Battleship = JSON.parse(localStorage.getItem('battleship') ?? '');\n\n\tconst battleshipCoords: string[] = [];\n\n\tconst ship = 'battleship';\n\tconst amount = 'single';\n\n\t// for horizontal placement\n\tif (currentAxis === 'Axis-X' && isCorrectNumberOfShips(ship, amount)) {\n\t\t// grid boundary detection\n\t\tif (Number(currentX) > 7) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)');\n\t\t\treturn null;\n\t\t}\n\n\t\t// overlap detection\n\t\tif (doesShipPlacementOverlap(3, currentAxis, currentX, currentY)) return null;\n\n\t\t// places battleship on the grid\n\t\tfor (let i = 0; i < 3; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t);\n\t\t\tif (nextCell) nextCell.textContent = '';\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('B')\n\t\t\t)(nextCell);\n\n\t\t\tbattleshipCoords.push(`${Number(currentX) + i},${currentY}`);\n\t\t}\n\n\t\t// prevents updating after first click\n\t\tif (isCorrectNumberOfShips(ship, 'single')) {\n\t\t\t// updates battleship object attributes\n\t\t\tbattleship = {\n\t\t\t\thead: battleshipCoords[0],\n\t\t\t\tbody: battleshipCoords[1],\n\t\t\t\ttail: battleshipCoords[2],\n\t\t\t};\n\t\t}\n\n\t\tlocalStorage.setItem('isSingleBattleship', JSON.stringify(false));\n\t} // for vertical placement\n\telse if (currentAxis === 'Axis-Y' && isCorrectNumberOfShips(ship, amount)) {\n\t\t// grid boundary detection\n\t\tif (Number(currentY) > 7) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)');\n\t\t\treturn null;\n\t\t}\n\n\t\t// overlap detection\n\t\tif (doesShipPlacementOverlap(3, currentAxis, currentX, currentY)) return null;\n\n\t\tfor (let i = 0; i < 3; i += 1) {\n\t\t\t// places battleship on the grid\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t);\n\t\t\t// prevents duplicate letters being placed\n\t\t\tif (nextCell) nextCell.textContent = '';\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('B')\n\t\t\t)(nextCell);\n\n\t\t\tbattleshipCoords.push(`${currentX},${Number(currentY) + i}`);\n\t\t}\n\n\t\t// prevents updating after first click\n\t\tif (isCorrectNumberOfShips(ship, 'single')) {\n\t\t\t// updates battleship object attributes\n\t\t\tbattleship = {\n\t\t\t\thead: battleshipCoords[0],\n\t\t\t\tbody: battleshipCoords[1],\n\t\t\t\ttail: battleshipCoords[2],\n\t\t\t};\n\t\t}\n\n\t\tlocalStorage.setItem('isSingleBattleship', JSON.stringify(false));\n\t}\n\n\t// stores battleship\n\tlocalStorage.setItem('battleship', JSON.stringify(battleship));\n\n\t// stores current ship coords to pool of all ship coords\n\taccumulatePlayerShipCoords(battleshipCoords);\n\n\tif (isCorrectNumberOfShips(ship, amount) === true) {\n\t\t// after 'this' button has been clicked, sets the color to grey to visually indicate finished\n\t\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship');\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t])\n\t\t)(battleshipBttn);\n\n\t\t// enables events on other shipButtons after battleship has been placed and sets color to green to visually indicate that they can be clicked if they have not been previously disabled after a click\n\t\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought');\n\t\tif (superdreadnoughtBttn && superdreadnoughtBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t\t)(superdreadnoughtBttn);\n\n\t\tconst carrierBttn: Button = document.querySelector('.bttn-carrier');\n\t\tif (carrierBttn && carrierBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleCarrierBttnClick)\n\t\t\t)(carrierBttn);\n\n\t\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer');\n\t\tif (destroyerBttn && destroyerBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleDestroyerBttnClick)\n\t\t\t)(destroyerBttn);\n\n\t\tconst frigateBttn: Button = document.querySelector('.bttn-frigate');\n\t\tif (frigateBttn && frigateBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleFrigateBttnClick)\n\t\t\t)(frigateBttn);\n\n\t\t// removes event listeners after battleship has been placed\n\t\tplayerGameCells.forEach((player) => {\n\t\t\tpipe(\n\t\t\t\tremoveEvtListener('click')(handleBattleshipCellClick),\n\t\t\t\tremoveEvtListener('mouseenter')(handleBattleshipMouseEnter),\n\t\t\t\tremoveEvtListener('mouseleave')(handleBattleshipMouseLeave)\n\t\t\t)(player);\n\t\t});\n\t}\n\n\t// if all ships placed, renders start button\n\tcheckAllShipsInPlace();\n};\n\nexport { handleBattleshipCellClick };\n","import {\n\taddEvtListener,\n\taddStyleToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../functions/elementCreators';\nimport { Button, NodesDiv } from '../functions/types';\nimport { handleBattleshipCellClick } from './handleBattleshipCellClick';\nimport { handleBattleshipMouseEnter } from './handleBattleshipMouseEnter';\nimport { handleBattleshipMouseLeave } from './handleBattleshipMouseLeave';\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick';\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick';\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick';\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick';\n\nconst handleBattleshipBttnClick = function (\n\tthis: HTMLButtonElement,\n\tev: MouseEvent\n): void {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell');\n\n\t// disables this button after clicking\n\tthis.disabled = true;\n\n\t// visually indicates that 'this' button is selected\n\tpipe(\n\t\taddStyleToElem([\n\t\t\t['border', '1px solid #f0a400'],\n\t\t\t['color', '#f0a400'],\n\t\t])\n\t)(this);\n\n\t// disables clicking on other shipButtons while selected\n\t// prevents double selection\n\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought');\n\tif (superdreadnoughtBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t)(superdreadnoughtBttn);\n\n\tconst carrierBttn: Button = document.querySelector('.bttn-carrier');\n\tif (carrierBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleCarrierBttnClick)\n\t\t)(carrierBttn);\n\n\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer');\n\tif (destroyerBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleDestroyerBttnClick)\n\t\t)(destroyerBttn);\n\n\tconst frigateBttn: Button = document.querySelector('.bttn-frigate');\n\tif (frigateBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleFrigateBttnClick)\n\t\t)(frigateBttn);\n\n\t// assigns event listeners to each player game cell after clicking battleship button\n\tplayerGameCells.forEach((player) =>\n\t\tpipe(\n\t\t\taddEvtListener('click')(handleBattleshipCellClick),\n\t\t\taddEvtListener('mouseenter')(handleBattleshipMouseEnter),\n\t\t\taddEvtListener('mouseleave')(handleBattleshipMouseLeave)\n\t\t)(player)\n\t);\n};\nexport { handleBattleshipBttnClick };\n","import { handleAxisToggleClick } from '../events/handleAxisToggleClick';\nimport { handleBattleshipBttnClick } from '../events/handleBattleshipBttnClick';\nimport { handleCarrierBttnClick } from '../events/handleCarrierBttnClick';\nimport { handleDestroyerBttnClick } from '../events/handleDestroyerBttnClick';\nimport { handleFrigateBttnClick } from '../events/handleFrigateBttnClick';\nimport { handleSuperdreadnoughtBttnClick } from '../events/handleSuperdreadnoughtBttnClick';\nimport {\n\taddAttributeToElem,\n\taddEvtListener,\n\taddTextToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from '../functions/elementCreators';\n\nconst renderShipSelectionBttns = function (): void {\n\tconst main: HTMLElement | null = document.querySelector('.main');\n\n\tconst shipBttnsWrapper = elemCreator('div')(['shipBttns-wrapper']);\n\tappendElemToParent(main)(shipBttnsWrapper);\n\n\tconst shipsBttnContainer = elemCreator('div')(['shipsBttn-container']);\n\tappendElemToParent(shipBttnsWrapper)(shipsBttnContainer);\n\n\tpipe(\n\t\taddTextToElem('Superdreadnought'),\n\t\taddEvtListener('click')(handleSuperdreadnoughtBttnClick),\n\t\taddAttributeToElem([\n\t\t\t['type', 'button'],\n\t\t\t['value', 'superdreadnought'],\n\t\t]),\n\t\tappendElemToParent(shipsBttnContainer)\n\t)(elemCreator('button')(['bttn-superdreadnought']));\n\n\tpipe(\n\t\taddTextToElem('Carrier'),\n\t\taddEvtListener('click')(handleCarrierBttnClick),\n\t\taddAttributeToElem([\n\t\t\t['type', 'button'],\n\t\t\t['value', 'carrier'],\n\t\t]),\n\t\tappendElemToParent(shipsBttnContainer)\n\t)(elemCreator('button')(['bttn-carrier']));\n\n\tpipe(\n\t\taddTextToElem('Battleship'),\n\t\taddEvtListener('click')(handleBattleshipBttnClick),\n\t\taddAttributeToElem([\n\t\t\t['type', 'button'],\n\t\t\t['value', 'battleship'],\n\t\t]),\n\t\tappendElemToParent(shipsBttnContainer)\n\t)(elemCreator('button')(['bttn-battleship']));\n\n\tpipe(\n\t\taddTextToElem('Destroyer'),\n\t\taddEvtListener('click')(handleDestroyerBttnClick),\n\t\taddAttributeToElem([\n\t\t\t['type', 'button'],\n\t\t\t['value', 'destroyer'],\n\t\t]),\n\t\tappendElemToParent(shipsBttnContainer)\n\t)(elemCreator('button')(['bttn-destroyer']));\n\n\tpipe(\n\t\taddTextToElem('Frigate'),\n\t\taddEvtListener('click')(handleFrigateBttnClick),\n\t\taddAttributeToElem([\n\t\t\t['type', 'button'],\n\t\t\t['value', 'frigate'],\n\t\t]),\n\t\tappendElemToParent(shipsBttnContainer)\n\t)(elemCreator('button')(['bttn-frigate']));\n\n\t// axis selector button\n\tpipe(\n\t\taddEvtListener('click')(handleAxisToggleClick),\n\t\taddTextToElem('Axis-X'),\n\t\taddAttributeToElem([\n\t\t\t['type', 'button'],\n\t\t\t['value', 'axis-x'],\n\t\t]),\n\t\tappendElemToParent(shipBttnsWrapper)\n\t)(elemCreator('button')(['bttn', 'bttn-axisSelector']));\n};\nexport { renderShipSelectionBttns };\n","import { Div } from '../functions/types';\nimport { renderPlayerInfoScreen } from './renderPlayerInfoScreen';\nimport { renderPlayerShipPlacementBoard } from './renderPlayerShipPlacementBoard';\nimport { renderShipSelectionBttns } from './renderShipSelectionBttns';\n\nconst renderShipSelectionPage = function (playerName_: string): void {\n\tconst playerName = playerName_;\n\n\t// removes main page content\n\tconst headerLinks = document.querySelector('.header__links');\n\theaderLinks?.remove();\n\tconst greetingsContainer = document.querySelector('.greetings-container');\n\tgreetingsContainer?.remove();\n\tconst formContainer: Div = document.querySelector('#form-name');\n\tformContainer?.remove();\n\n\t// renders pre-battle speech and ship placement functionality\n\trenderPlayerInfoScreen(playerName);\n\trenderShipSelectionBttns();\n\trenderPlayerShipPlacementBoard();\n};\n\nexport { renderShipSelectionPage };\n","import { renderShipSelectionPage } from '../functions/renderShipSelectionPage';\n\nconst receiveFormName = function (this: HTMLFormElement, ev: SubmitEvent): void {\n\tev.preventDefault();\n\n\tconst formData = new FormData(this);\n\tconst playerName = formData.get('form-name-input')?.toString() ?? '';\n\n\t// stores playerName to use for battle texts\n\tif (!localStorage.getItem('playerName')) {\n\t\tlocalStorage.setItem('playerName', JSON.stringify(playerName));\n\t}\n\n\trenderShipSelectionPage(playerName);\n};\nexport { receiveFormName };\n","import { receiveFormName } from '../events/receiveFormName';\nimport { Form } from '../functions/types';\n\nconst addEvtListenerToForm = function (): void {\n\tconst formName: Form = document.querySelector('#form-name');\n\n\tformName?.addEventListener('submit', receiveFormName);\n};\nexport { addEvtListenerToForm };\n","import { greetingsText } from './data/greetingsText';\nimport { addEvtListenerToForm } from './functions/addEvtListenerToForm';\nimport { createTypewriterEffect } from './functions/createTypewriterEffect';\nimport { Div } from './functions/types';\n\nconst mainApp = async function () {\n\taddEvtListenerToForm();\n\n\tconst greetingsContainer: Div = document.querySelector('.greetings-container');\n\n\tcreateTypewriterEffect({\n\t\tcontainerElem: greetingsContainer,\n\t\tstrings: greetingsText,\n\t\tspeed: 25,\n\t});\n\n\t//clears storage upon refresh\n\tlocalStorage.clear();\n};\ndocument.addEventListener('DOMContentLoaded', mainApp);\n"],"names":["$41a145e5cbe99349$export$325442cc276c682b","$036333bc9cfac7f9$export$5e17891cb790d209","$098cfa2d4a6687fa$export$ab234f429913b447","elem1","classes","element","document","createElement","reduce","elem","currClass","classList","add","$098cfa2d4a6687fa$export$7ea4f87d22b0568c","attrVals","curr","length","setAttribute","$098cfa2d4a6687fa$export$16b24d40747c589f","stylePropVals","style","setProperty","$098cfa2d4a6687fa$export$b326c0ad197ac50a","styleProp","removeProperty","$098cfa2d4a6687fa$export$a0738db72e91b08b","text","textNode","createTextNode","appendChild","$098cfa2d4a6687fa$export$ab5f4f3ddf8c0bd5","parent","child","$098cfa2d4a6687fa$export$bbf09bbccec571f8","evt","handleEvt","addEventListener","$098cfa2d4a6687fa$export$b51bdbb03847b6fd","removeEventListener","$098cfa2d4a6687fa$export$a4627e546088548d","funcs","value","res","func","async","$b75b76763e5760c9$export$1e1228bac7063c4a","containerElem","strings","speed","arr","callback","index","val","entries","$b75b76763e5760c9$var$asyncForEach","string","typewriterElem","childElem","parentElem","Promise","resolve","i","interval","setInterval","ref","clearInterval","scrollHeight","scroll","top","left","behavior","$b75b76763e5760c9$var$typewriterEffect","$080a632698a72b22$export$bfd70363bc29a96f","playerName_","window","scrollTo","main","querySelector","infoScreenContainer","push","$d3f0a1c88e86e068$export$c5d33737214141a3","bothBoardsContainer","playerBoardWrapper","playerBoardContainer","j","$1b86f87e564ffe19$export$f36d0106563543aa","ev","currentText","this","textContent","$6c52ab05de4e0d3d$export$ca21c4bc8611e8c3","currentShipCoords_","playerShipsCoords","JSON","parse","localStorage","getItem","forEach","coord","setItem","stringify","$55dd3a213f15cc62$export$2c39ec98fcf3be7f","haven","superdreadnoughts","carriers","battleships","destroyers","frigates","manticore","$ce1377463fb101a2$export$6fcb0caf1bbc0358","allCoords","i2","shipsPresentCoordsSet","Set","Object","fromEntries","acc","shipType","shipLength","shipTypeCoordsObj","withinBounds","isAnotherShipPresent","shipCoordsArr","randCoord","randIndex","Math","floor","random","randCoordStr","join","has","every","x","y","some","i1","console","log","Map","toString","set","destroyerCoordObj","head","tail","prevDestroyerCoordObjArr","get","concat","frigateCoordObj","body","prevFrigateCoordObjArr","$36f921fbc8e36527$export$b926bf954c3027b8","compShipsPlacementChoice_","compShipsCoords","ship1","shipObj","toUpperCase","slice","Array","isArray","ship","shipSection","sectionCoords","shipCell","querySelectorAll","cell","contains","$a87ed2006a4ee7c4$export$a7e610484415ceda","randCompShipPlacement","$bfe0ef2ff3e9d3a8$export$45fb265278a22bf","gameBoardContainer","compBoardWrapper","compBoardContainer","$c0ed7a61327160ec$export$6a06fe12bd945baa","superdreadnoughtCoords","superdreadnoughtCoordsArray","values","ref1","battleshipCoords","battleshipCoordsArray","ref2","carrierCoords","carrierCoordsArray","ref3","destroyerCoordsArray","flatMap","destroyer","ref4","frigateCoordsArray","frigate","_cellplayer","_cellplayer1","_cellplayer2","_cellplayer3","_cellplayer4","includes","dataset","cellplayer","$f01e2ce4f047b5b5$export$5aee78e2b4bffb58","gamePlayerBoardWrapper","$93777db4b071d9ea$export$2fa35730fcfbce63","playerSuperdreadnought","playerSuperdreadnoughtCoords","body1","body2","body3","playerCarrier","playerCarrierCoords","playerBattleship","playerBattleshipCoords","playerDestroyers","playerDestroyersCoords","playerFrigates","playerFrigatesCoords","ref5","compSuperdreadnought","compSuperdreadnoughtCoords","ref6","compCarrier","compCarrierCoords","ref7","compBattleship","compBattleshipCoords","ref8","compDestroyers","compDestroyersCoords","ref9","compFrigates","playerShipCoords","superdreadnought","carrier","battleship","compShipCoords","$d76d8a939ce89486$export$7ac3a88d34a76e7","array","shuffledArray","structuredClone","$80b3c7603b5effaa$export$1573bd29676a8147","tacticalOverviewWrapperPlayer","tacticalOverviewWrapperComp","tacticalOverviewContainerPlayer","tacticalOverviewTitlePlayer","tacticalOverviewContainerComp","tacticalOverviewTitleComp","manticoreShipNamesCoords","shipName","lengthOfCells","shipAndCoords","shipNameContainer","tacticalCellsContainer","havenShipNamesCoords","$ec01ba903fd35766$export$b0ffe2114b99c23a","compShipPresent","compShipNotPresent","$b3f6c947e5591411$export$4cb529112a62166c","$4b50899ee4c93005$export$6194af07769efa8f","$15a81358873af26d$export$13063a66817085c1","clear","self","location","reload","$ac3cecdf1d165ea5$export$2a04939a45ef1558","winner_","infoScreenWrapper","remove","winnerContainer","$a4aaffb821d7f49a$export$cc214a32faf32742","hitsOnShip","damageOnShip","missesOnShip","playerShipDestroyed","compShipDestroyed","$042c0b81dfeb419d$export$ca64b0609d31040e","$5f599915a076b3a3$export$50982b68fbaa6bfd","towardsCombatant","firedStatus","shipTypeHit","shipNumber","randHitsStrings","hitsPrecursorString","havenShipNames","manticoreShipNames","playerName","battleMessageContainer","battleMessageElem","today","Date","formattedTime","Intl","DateTimeFormat","hour","minute","second","format","statusText","$8e05a767937bfc09$export$b7678bf29b7f2cb8","currentCellCoord","currentShipSymbol","hitOrMiss","sunkShipName","destroyer1Coords","_","map","frigate1Coords","destroyer1","ref10","frigate1","ref11","$c7f7bf3396bbb9e5$export$2e2dbd7a77de3036","playerCompShipsCoords","shipSymbol","shipCoords","flat","$912398535a048f66$export$1a026f9a0e6953a3","shipHits","playerShips","compShips","sunkShipObj","player","comp","$edad5c2e7e9df214$export$b6a64bd48a5db755","coordsArr","compShipsHitCoordsSet","compShipsMissesCoordsSet","frigateCell","frigateCellX","parseInt","split","frigateCellY","topCell","topCellWithinBounds","rightCell","rightCellWithinBounds","bottomCell","bottomCellWithinBounds","leftCell","leftCellWithinBounds","isTopCellFiredUpon","isRightCellFiredUpon","isBottomCellFiredUpon","isLeftCellFiredUpon","sortedCoordsArr","sort","a","b","aX","replace","aY","bX","bY","firstCoord","lastCoord","firstCoordXY","lastCoordXY","firstCoordX","firstCoordY","lastCoordX","lastCoordY","isHorizontal","beforeShipCell","beforeShipCellX","beforeShipCellY","isBeforeShipCellFiredUpon","afterShipCell","afterShipCellX","afterShipCellY","$06ecc27d1bffc464$export$4155b4525dea147d","compShipsMissesCoords","compShipsHitCoords","coords","isAfterShipCellFiredUpon","questionMarkCell","hiddenCell","display","coordsArrArr","idx","totalHitsOnCompShips","_cellcomp","cellcomp","undefined","color","setTimeout","$db92c4c0a6767672$export$aa28f87fe2810ba7","$df594a2800a80999$export$7aec43d6649f4697","xyCoords","xCoord","yCoord","adjacentCoords","topCoord","rightCoord","bottomCoord","leftCoord","$ce63dc107e1bc9b4$export$75bf1e7630e2b9cb","compHitOnPlayerCoordsSet","compMissOnPlayerCoordsSet","uniqueAdjacentCoords","from","filter","rankedTuples","uniqueAdjCoord","coordScore","score","newAdjCoord","$2a4ef7188235172d$export$3cbf51b50c9fa146","prevCompFiringCoords","compAttackGuess","isUniqueCoordinate","$dde86cad7c3c253d$export$4c4bb2e7be6c12f8","prevCompHitOrMiss","compHitOnPlayerCoordsArr","compMissOnPlayerCoordsArr","newFiringCoordinate","$62f10e3a77da1dd1$export$74e671eba20f5f60","compAttackGuess_","$64b1efa79ff8b24d$export$ad101393eafa054","cellToUpdate","$43d508b39e7b485a$export$4eac76923b5df234","totalHitsOnPlayerShips","playerShipCell","prevCompMissOnPlayerCoord","prevCompMissOnPlayerCell","_textContent","prevPlayerMissOnCompCoord","prevPlayerMissOnCompCell","$bd1719a91acab703$export$1d9c7a55f4f9bdd6","preBattleInfoScreen","shipBttnsWrapper","shipNames_","polity","shipTypes","shipNamesArr","tempShipNamesArr","battleMessageWrapper","formattedDate","month","day","$a7d98936c9a5df1f$export$c73b42c5fa0e8ca","shipsBttnContainer","axisSelectorBttn","$b3c023887092de0a$export$b9edf82f7217af53","$c4bb153059350cca$export$df0b34f7a1711d6e","shipLength_","currentAxis_","currentX_","currentY_","Number","alert","$87afca4fbec7eef0$export$60ef149727fdc3c3","ship_","amount_","amount","shipObjArr","$4babecb880b51034$export$d1f5ad06fdc2fb11","axisSelector","currentAxis","currentCell","currentX","currentY","nextCell","$4e2cd2c66e701100$export$d3ed15a58a454154","$e18eb20411f88320$export$ab965cac886214bf","$299832f8825980c3$export$9c424384d47cef4c","$967a3ca684572b32$export$e1d143c43bee4d71","$d91ab168b059408c$export$d89e7321d85f00c1","$cce440cc25b8842a$export$15709db4defcbc15","$36912fb464cafae3$export$3999f8bfc89fd956","$901aafe51e9cfa49$export$a4dcd7bbdd403178","$c0bb39fa155bfc0b$export$4f935e7b391bebeb","$30051a24a17f6f9d$export$2dc4833dd416dbdf","playerGameCells","superdreadnoughtBttn","carrierBttn","disabled","$8ea2844f2eabbaf7$export$162318dd237821cf","battleshipBttn","$a76a8afbc2d21608$export$86e91ff5d2bf5d1c","destroyerBttn","$070d04e115892d7d$export$af580c7651a8823f","frigateBttn","$5d12b0ece76ae55b$export$939efa060bd435ff","$5d1b1073e77e6a89$export$c09198001c3a0eb3","$6bfbdcf0d44459de$export$3814f9598c559a50","frigateCoords","$f7887042bf747f4e$export$fe4f54860152613b","destroyerCoords","$42791c5eec8f478c$export$849a28534b3b3c16","$52e92a1b95ed5616$export$bc71519a712eba9e","$ab870a3a0fe7208f$export$5e623f9d64e8b4bb","$2d16e4cceb717eba$export$a40e9efb8c626c1c","headerLinks","greetingsContainer","formContainer","$2238eee871f1a570$export$4d31dac241a83392","preventDefault","FormData","$be516dc9967b9ec6$export$aee607452e82838a","formName"],"version":3,"file":"index.651043cc.js.map"}