{"mappings":"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KlB,EAAe,CAAC,CAAC,QAAS,eAA/B,CAA+CwJ,GAG/C1G,aAAaK,QAAQ,4BAA6BP,KAAKQ,UAAU2E,IAMjE,MAAMvE,EAA+BpE,SAASmE,iBAAiB,uBACzDD,EAA4BlE,SAASmE,iBAAiB,oBAE5DC,EAAmBR,SAASS,IAC3BvC,EAAKF,EAAkB,QAAlB,CAA2B2C,GAAhC,CAAgEF,MAEjEH,EAAgBN,SAASS,IACxBvC,EAAKF,EAAkB,QAAlB,CAA2B0C,GAAhC,CAA+DD,MAIhEkF,WAAWC,EAAe,MC9DrBa,EAAY,CACjBC,MAAO,CACNC,kBAAmB,CAClB,gBACA,WACA,aACA,SACA,SACA,eACA,YACA,YACA,UACA,UACA,aACA,SACA,WACA,eACA,SACA,UACA,UACA,mBACA,YACA,eACA,UACA,SACA,WACA,SACA,UACA,cACA,UACA,UACA,SACA,UACA,UACA,qBACA,SACA,YACA,WACA,YACA,OACA,WACA,eACA,aACA,aAEDC,SAAU,CACT,QACA,WACA,UACA,OACA,SACA,WACA,OACA,QACA,YACA,WACA,YACA,OACA,UACA,OACA,SACA,UACA,WACA,SACA,SACA,QACA,WACA,WACA,YACA,OACA,OACA,SACA,UACA,OACA,OACA,MACA,QACA,OACA,WACA,WACA,UACA,SACA,SACA,QACA,YACA,WACA,QAEDC,YAAa,CACZ,QACA,SACA,SACA,UACA,UACA,SACA,SACA,UACA,OACA,UACA,OACA,OACA,gBACA,SACA,UACA,OACA,aACA,UACA,SACA,SACA,SACA,aACA,UACA,QACA,MACA,UACA,QACA,SACA,QACA,OACA,cACA,UACA,QACA,SACA,WACA,SACA,QACA,QACA,QACA,WACA,SACA,YACA,QACA,YACA,sBACA,cACA,QACA,UACA,UACA,UACA,YACA,SACA,aACA,SACA,UACA,aACA,QACA,cACA,qBACA,aACA,oBACA,aACA,eACA,aACA,iBACA,aACA,yBACA,SACA,UACA,YAEDxC,WAAY,CACX,WACA,QACA,WACA,SACA,QACA,YACA,SACA,WACA,UACA,SACA,SACA,QACA,QACA,UACA,SACA,UACA,QACA,SACA,UACA,WACA,WACA,SACA,SACA,SACA,QACA,UACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,YACA,UACA,SACA,UACA,WACA,SACA,SACA,SAEDI,SAAU,CACT,aACA,UACA,WACA,cACA,UACA,YACA,YACA,WACA,QACA,SACA,SACA,OACA,OACA,WACA,YACA,UACA,YACA,WACA,UACA,WACA,SACA,OACA,UACA,oBACA,SACA,WACA,gBACA,iBACA,gBACA,oBACA,oBACA,qBACA,mBACA,YACA,SACA,aAIFqC,UAAW,CACVH,kBAAmB,CAClB,WACA,YACA,eACA,aACA,eACA,iBACA,SACA,UACA,aACA,UACA,cACA,kBACA,UACA,iBACA,SACA,UACA,UACA,aACA,YACA,gBACA,aACA,UACA,iBACA,eACA,aACA,cACA,cACA,eACA,aACA,iBACA,kBACA,eACA,iBACA,gBACA,YACA,UACA,SACA,aACA,WACA,WACA,cACA,UACA,UACA,YACA,eAEDC,SAAU,CACT,cACA,WACA,UACA,aACA,aACA,aACA,eACA,YACA,SACA,aACA,UACA,QACA,WACA,YACA,YACA,SACA,SACA,WACA,cACA,QACA,UACA,aACA,aACA,WACA,YACA,SACA,cACA,SACA,WACA,OACA,SACA,cACA,WACA,YACA,QACA,UACA,QACA,WACA,SACA,YACA,OACA,SACA,YACA,QACA,QAEDC,YAAa,CACZ,iBACA,gBACA,gBACA,iBACA,eACA,iBACA,gBACA,oBACA,qBACA,oBACA,mBACA,kBACA,oBACA,oBACA,mBACA,WACA,UACA,UACA,YACA,WACA,UACA,SACA,UACA,UACA,aACA,WACA,UACA,SACA,UACA,UACA,OACA,YACA,YACA,UACA,QACA,WACA,WACA,YACA,YACA,WACA,QACA,SACA,cACA,SACA,aACA,YACA,UACA,SACA,WACA,cACA,cACA,cACA,UACA,WACA,kBACA,eACA,sBACA,WACA,YAEDxC,WAAY,CACX,WACA,aACA,YACA,YACA,UA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","sources":["src/utilities/elementCreators.ts","src/components/renderPlayerBoard.ts","src/components/renderPlayerInfoScreen.ts","src/events/handleAxisToggleClick.ts","src/components/accumulatePlayerShipCoords.ts","src/components/preventClicksAfterWin.ts","src/components/restartGame.ts","src/components/announceGameWinner.ts","src/data/battleTexts.ts","src/components/renderBattleMessage.ts","src/events/handlePlayerClickOnCompShips.ts","src/components/computerAttacks.ts","src/components/genRandCompAttackGuess.ts","src/components/computersTurn.ts","src/events/handlePlayerClickOnCompMisses.ts","src/data/shipNames.ts","src/components/renderCompBoard.ts","src/components/renderCompShipsOnBoard.ts","src/components/placeCompShipsOnBoard.ts","src/data/compShipsPlacementChoicesArr.ts","src/events/handleStartButtonClick.ts","src/components/randomizeAndStoreShipNames.ts","src/components/renderStartButton.ts","src/components/checkAllShipsInPlace.ts","src/components/renderStarsInPlayerBoard.ts","src/components/doesShipPlacementOverlap.ts","src/components/isCorrectNumberOfShips.ts","src/events/handleBattleshipMouseEnter.ts","src/events/handleBattleshipMouseLeave.ts","src/events/handleCarrierMouseEnter.ts","src/events/handleCarrierMouseLeave.ts","src/events/handleDestroyerMouseEnter.ts","src/events/handleDestroyerMouseLeave.ts","src/events/handleFrigateMouseEnter.ts","src/events/handleFrigateMouseLeave.ts","src/events/handleSuperdreadnoughtMouseEnter.ts","src/events/handleSuperdreadnoughtMouseLeave.ts","src/events/handleSuperdreadnoughtCellClick.ts","src/events/handleSuperdreadnoughtBttnClick.ts","src/events/handleFrigateCellClick.ts","src/events/handleFrigateBttnClick.ts","src/events/handleDestroyerCellClick.ts","src/events/handleDestroyerBttnClick.ts","src/events/handleCarrierCellClick.ts","src/events/handleCarrierBttnClick.ts","src/events/handleBattleshipCellClick.ts","src/events/handleBattleshipBttnClick.ts","src/components/renderShipSelectionBttns.ts","src/components/renderGamePage.ts","src/events/receiveFormName.ts","src/components/addEvtListenerToForm.ts","src/index.ts"],"sourcesContent":["const elemCreator = (elem_: string) => (class_: string[]) => {\n\tconst element = document.createElement(elem_)\n\n\treturn class_.reduce((elem: HTMLElement, currClass: string) => {\n\t\telem.classList.add(currClass)\n\t\treturn elem\n\t}, element)\n}\n\nconst addAttributeToElem =\n\t(attrVals_: Array<Array<string>>) => (elem_: HTMLElement | null) => {\n\t\treturn attrVals_.reduce(\n\t\t\t(element: HTMLElement | null | undefined, curr: Array<string>) => {\n\t\t\t\tif (curr.length > 2) return undefined\n\n\t\t\t\telement?.setAttribute(curr[0], curr[1])\n\t\t\t\treturn element\n\t\t\t},\n\t\t\telem_\n\t\t)\n\t}\n\nconst addStyleToElem =\n\t(stylePropVals_: Array<Array<string>>) => (elem_: HTMLElement | null) => {\n\t\treturn stylePropVals_.reduce(\n\t\t\t(element: HTMLElement | null | undefined, curr: string[]) => {\n\t\t\t\tif (curr.length > 2) return undefined\n\n\t\t\t\telement?.style.setProperty(curr[0], curr[1])\n\t\t\t\treturn element\n\t\t\t},\n\t\t\telem_\n\t\t)\n\t}\n\nconst addTextToElem = (text_: string) => (elem_: HTMLElement | null) => {\n\tconst textNode = document.createTextNode(text_)\n\telem_?.appendChild(textNode)\n\treturn elem_\n}\n\nconst appendElemToParent =\n\t(parent_: HTMLElement | null) => (child_: HTMLElement | null) => {\n\t\tif (child_) parent_?.appendChild(child_)\n\t}\n\nconst createImage =\n\t(source_: string) => (class_: string[]) => (alt_: string) => (title_: string) => {\n\t\tconst image = new Image()\n\t\timage.src = source_\n\t\timage.alt = alt_\n\t\timage.title = title_\n\n\t\treturn class_.reduce((elem: HTMLImageElement, currClass: string) => {\n\t\t\telem.classList.add(currClass)\n\t\t\treturn elem\n\t\t}, image)\n\t}\n\nconst addEvtListener =\n\t(evt_: string) =>\n\t(\n\t\thandleEvt_: (\n\t\t\tthis: any,\n\t\t\tev: any,\n\t\t\toptions?: {\n\t\t\t\tcapture: boolean\n\t\t\t\tonce: boolean\n\t\t\t\tpassive: boolean\n\t\t\t\tsignal: AbortSignal\n\t\t\t}\n\t\t) => unknown\n\t) =>\n\t(elem_: HTMLElement | null) => {\n\t\telem_?.addEventListener(evt_, handleEvt_)\n\t\treturn elem_\n\t}\n\nconst removeEvtListener =\n\t(evt_: string) =>\n\t(\n\t\thandleEvt_: (\n\t\t\tthis: any,\n\t\t\tev: any,\n\t\t\toptions?: {\n\t\t\t\tcapture: boolean\n\t\t\t\tonce: boolean\n\t\t\t\tpassive: boolean\n\t\t\t\tsignal: AbortSignal\n\t\t\t}\n\t\t) => unknown\n\t) =>\n\t(elem_: HTMLElement | null) => {\n\t\telem_?.removeEventListener(evt_, handleEvt_)\n\t\treturn elem_\n\t}\n\nconst pipe =\n\t<V>(...funcs: Array<(_: V) => any>) =>\n\t(value: V) =>\n\t\tfuncs.reduce((res, func) => func(res), value)\n\nexport {\n\telemCreator,\n\tappendElemToParent,\n\taddTextToElem,\n\taddAttributeToElem,\n\tcreateImage,\n\taddEvtListener,\n\tremoveEvtListener,\n\taddStyleToElem,\n\tpipe,\n}\n","import {\n\taddAttributeToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from '../utilities/elementCreators'\n\nconst renderPlayerBoard = function () {\n\tconst main: HTMLElement | null = document.querySelector('.main')\n\n\tconst bothBoardsContainer = elemCreator('div')(['bothBoards-container'])\n\tappendElemToParent(main)(bothBoardsContainer)\n\n\tconst playerBoardWrapper = elemCreator('div')(['playerBoard-wrapper'])\n\tappendElemToParent(bothBoardsContainer)(playerBoardWrapper)\n\n\tconst playerBoardContainer = elemCreator('div')(['playerBoard-container'])\n\tappendElemToParent(playerBoardWrapper)(playerBoardContainer)\n\n\tfor (let i = 0; i < 10; i += 1) {\n\t\tfor (let j = 0; j < 10; j += 1) {\n\t\t\t//renders a div per iteration of for-loop and append\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['data-cellplayer', `${j},${i}`]]),\n\t\t\t\tappendElemToParent(playerBoardContainer)\n\t\t\t)(elemCreator('div')(['player-gameCell']))\n\t\t}\n\t}\n}\nexport { renderPlayerBoard }\n","import {\n\taddTextToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from '../utilities/elementCreators'\n\nconst renderPlayerInfoScreen = function (playerName_: string) {\n\tconst main: HTMLElement | null = document.querySelector('.main')\n\n\tconst infoScreenWrapper = elemCreator('div')(['preBattle-infoScreen'])\n\tappendElemToParent(main)(infoScreenWrapper)\n\n\tconst infoScreenContainer = elemCreator('div')(['infoScreen-container'])\n\tappendElemToParent(infoScreenWrapper)(infoScreenContainer)\n\n\tpipe(\n\t\taddTextToElem(\n\t\t\t`Shall we allow our audacious enemies to violate with impunity the territory of the Kingdom? Will you permit the fleet to escape which has carried terror into your families? You will not!`\n\t\t),\n\t\tappendElemToParent(infoScreenContainer)\n\t)(elemCreator('p')(['infoScreen-preBattleMssg']))\n\n\tpipe(\n\t\taddTextToElem(\n\t\t\t`You are about to embark upon the Great Battle, toward which we have striven these many months. The eyes of the galaxy are upon you. The hopes and prayers of liberty-loving people everywhere march with you. In company with our brave Allies and brothers-in-arms on other Sectors, you will bring about the destruction of the Haven war machine, the eliminations of their tyranny over oppressed people, and the security for ourselves in a free galaxy!`\n\t\t),\n\t\tappendElemToParent(infoScreenContainer)\n\t)(elemCreator('p')(['infoScreen-preBattleMssg']))\n\n\tpipe(\n\t\taddTextToElem(`Ready fleet formation, Admiral ${playerName_}.`),\n\t\tappendElemToParent(infoScreenContainer)\n\t)(elemCreator('p')(['infoScreen-preBattleMssg']))\n}\nexport { renderPlayerInfoScreen }\n","const handleAxisToggleClick = function (this: HTMLButtonElement, ev: MouseEvent) {\n\tconst currentText = this.textContent\n\n\tif (currentText === 'Axis-X') {\n\t\tthis.textContent = ''\n\t\tthis.textContent = 'Axis-Y'\n\t} else if (currentText === 'Axis-Y') {\n\t\tthis.textContent = ''\n\t\tthis.textContent = 'Axis-X'\n\t}\n}\nexport { handleAxisToggleClick }\n","const accumulatePlayerShipCoords = function (currentShipCoords_: string[]) {\n\tconst playerShipsCoords: string[] = JSON.parse(\n\t\tlocalStorage.getItem('playerShipsCoords') ?? ''\n\t)\n\n\t//adds currentship coordinate to rest of ships\n\tcurrentShipCoords_.forEach((coord) => playerShipsCoords.push(coord))\n\n\tlocalStorage.setItem('playerShipsCoords', JSON.stringify(playerShipsCoords))\n}\nexport { accumulatePlayerShipCoords }\n","import { handlePlayerClickOnCompMisses } from '../events/handlePlayerClickOnCompMisses'\nimport { handlePlayerClickOnCompShips } from '../events/handlePlayerClickOnCompShips'\nimport { pipe, removeEvtListener } from '../utilities/elementCreators'\nimport { NodesDiv } from '../utilities/types'\n\nconst preventClicksAfterWin = function () {\n\tconst compShipPresent: NodesDiv = document.querySelectorAll('.compShipPresent')\n\tconst compShipNotPresent: NodesDiv = document.querySelectorAll('.compShipNotPresent')\n\n\t//prevents further clicks after winner is announced\n\tcompShipPresent.forEach((cell) => {\n\t\tpipe(removeEvtListener('click')(handlePlayerClickOnCompShips))(cell)\n\t})\n\tcompShipNotPresent.forEach((cell) => {\n\t\tpipe(removeEvtListener('click')(handlePlayerClickOnCompMisses))(cell)\n\t})\n}\nexport { preventClicksAfterWin }\n","const restartGame = function () {\n\tlocalStorage.clear()\n\tself.location.reload()\n}\nexport { restartGame }\n","import {\n\taddEvtListener,\n\taddTextToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from '../utilities/elementCreators'\nimport { preventClicksAfterWin } from './preventClicksAfterWin'\nimport { restartGame } from './restartGame'\n\nconst announceGameWinner = function (winner_: string) {\n\tconst main: HTMLElement | null = document.querySelector('.main')\n\n\tconst winnerContainer = elemCreator('div')(['winner-container'])\n\tappendElemToParent(main)(winnerContainer)\n\n\tpipe(\n\t\taddTextToElem('Restart'),\n\t\taddEvtListener('click')(restartGame),\n\t\tappendElemToParent(winnerContainer)\n\t)(elemCreator('button')(['bttn-restart']))\n\n\tif (winner_ === 'comp') {\n\t\tpipe(\n\t\t\taddTextToElem('Fall back and regroup! We will not surrender!'),\n\t\t\tappendElemToParent(winnerContainer)\n\t\t)(elemCreator('p')(['winner-announcement']))\n\n\t\t//removes event listeners after win\n\t\tpreventClicksAfterWin()\n\t} else {\n\t\tpipe(\n\t\t\taddTextToElem(`Congrats ${winner_}! You have destroyed the Haven Fleet!`),\n\t\t\tappendElemToParent(winnerContainer)\n\t\t)(elemCreator('p')(['winner-announcement']))\n\n\t\tpreventClicksAfterWin()\n\t}\n\n\t//prevents computers turn from adding evt listeners back on\n\tlocalStorage.setItem('isGameWon', JSON.stringify(true))\n}\nexport { announceGameWinner }\n","const battleTexts = {\n\thitsOnComp: [\n\t\t'A hit, Sir!',\n\t\t'Direct hit, Sir!',\n\t\t'We must have taken out her forward impellers!',\n\t\t'Direct hit on their com section!',\n\t\t'We just took out most of her missile tracking capability!',\n\t\t'One hit, port side aft!',\n\t\t'A hit, Sir! At least one, and—',\n\t\t'Her forward impellers are down!',\n\t\t'Roll port! All batteries, engage!',\n\t\t'Engage with forward batteries!',\n\t\t\"They're taking the bait, Sir!\",\n\t\t'Formation Reno, Com—get those cruisers in tighter!',\n\t\t'Recompute firing pattern.',\n\t],\n\tmissesByPlayer: [\n\t\t'The enemy has returned fire!',\n\t\t'Tracking reports sixteen incoming, Sir!',\n\t\t'Enemy jamming primary tracking systems!',\n\t\t'Enemy countermeasures active!',\n\t\t'Crossing minefield attack perimeter—now!',\n\t],\n\tplayerShipDestroyed: [\"Sir, it's gone... Dear God, all those people...\"],\n\thitsOnPlayer: [\n\t\t\"Forward hold open to space! Mooring Tractor One's gone! Heavy casualties in Fusion One!\",\n\t\t\"We've lost Damage Control Three, Sir!\",\n\t\t\"Missile One is down, Sir! We're down to one tube.\",\n\t\t'Spinal Four gone, Sir!',\n\t\t\"We've lost the secondary fire control sensors!. Primaries unaffected.\",\n\t\t'Damage control to the bridge! Corpsman to the bridge!',\n\t\t\"Fusion One, Sir! The mag bottle's fluctuating and can't be shut down from here—something's cut the circuits!\",\n\t\t\"Sir, we're down to twelve birds for Missile Two, and out of laser heads.\",\n\t\t'Heavy damage aft! No contact at all with Two-Four or Two-Six.',\n\t\t\"Sir, we've lost a beta node; our acceleration is dropping.\",\n\t\t\"We've lost another beta node, Sir\",\n\t\t\"Point defense is hurt bad, Sir! We've lost four laser clusters and half our phased radar array.\",\n\t\t\"We've lost an energy torpedo and Number Two Laser out of the starboard broadside, but at least the starboard sidewall is still up.\",\n\t\t'Tractor Seven is gone!',\n\t\t'Compartments Eight-Niner-Two and Niner-Three open to space. No casualties!',\n\t\t'Two hits forward! Laser Three and Five destroyed. Radar Five is gone, Sir! Heavy casualties in Laser Three!',\n\t\t'Missile Two-One and Graser One gone! Heavy damage in the boat bay and Berthing Compartment Seven-five!',\n\t],\n\tmissesByComp: [\n\t\t'They missed! Counter missiles now!',\n\t\t'Ha! Go to rapid fire on all tubes!',\n\t\t\"We won't get another chance! Get those impellers back for me, Lieutenant!\",\n\t\t'A miss! Increase acceleration to max!',\n\t\t\"This is our chance! Close the range. We'll finish her with energy fire!\",\n\t\t'Missiles at three-five-two! Lucky this time..',\n\t\t'Hard a starboard!',\n\t\t'Pursuit vector, maximum acceleration!',\n\t\t'General signal to all heavy cruisers. Return to formation at once. Repeat, return to formation at once!',\n\t],\n\tcompShipDestroyed: [\"Yes! She's streaming air, Sir!\"],\n}\n\nexport { battleTexts }\n","import { battleTexts } from '../data/battleTexts'\nimport {\n\taddTextToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from '../utilities/elementCreators'\nimport {\n\tDestroyer,\n\tDiv,\n\tFrigate,\n\tRandomizedHavenShipNames,\n\tRandomizedManticoreShipNames,\n} from '../utilities/types'\n\nconst renderBattleMessageElem = function (\n\tcurrentCellCoord_: string,\n\tcurrentShipSymbol_: string,\n\ttowardsCombatant_: string,\n\thitOrMiss_: string\n) {\n\tconst randHitsStrings = [\n\t\t'A hit on',\n\t\t'Direct hit on',\n\t\t'Shields weak on',\n\t\t'Hull integrity is weakening on',\n\t\t'Impellers damaged on',\n\t]\n\tconst hitsPrecursorString =\n\t\trandHitsStrings[Math.floor(Math.random() * randHitsStrings.length)]\n\n\tconst havenShipNames: RandomizedHavenShipNames = JSON.parse(\n\t\tlocalStorage.getItem('havenShipNames') ?? ''\n\t)\n\tconst manticoreShipNames: RandomizedManticoreShipNames = JSON.parse(\n\t\tlocalStorage.getItem('manticoreShipNames') ?? ''\n\t)\n\n\tconst playerName = JSON.parse(localStorage.getItem('playerName') ?? '')\n\n\tconst infoScreenWrapper: Div = document.querySelector('.infoScreen-wrapper')\n\n\tconst battleMessageElem = elemCreator('p')(['battleMessageElem'])\n\tappendElemToParent(infoScreenWrapper)(battleMessageElem)\n\n\tif (towardsCombatant_ === 'comp') {\n\t\t//checks what compShip currentCellCoord_ is part of, as the compGridCells do not pass in a string textContent to differentiate between the ship types unlike the playerGridCells\n\t\tconst compSuperdreadnought: string[] = Object.values(\n\t\t\tJSON.parse(localStorage.getItem('compSuperdreadnought') ?? '')\n\t\t)\n\t\tconst compCarrier: string[] = Object.values(\n\t\t\tJSON.parse(localStorage.getItem('compCarrier') ?? '')\n\t\t)\n\t\tconst compBattleship: string[] = Object.values(\n\t\t\tJSON.parse(localStorage.getItem('compBattleship') ?? '')\n\t\t)\n\n\t\t//destroyers consists of an array of objects\n\t\tlet compDestroyers: unknown[] = []\n\t\tJSON.parse(localStorage.getItem('compDestroyers') ?? '').forEach(\n\t\t\t(destroyer: Destroyer) => {\n\t\t\t\tcompDestroyers.push(Object.values(destroyer))\n\t\t\t}\n\t\t)\n\t\tcompDestroyers = compDestroyers.flat()\n\n\t\t//frigates consists of an array of objects\n\t\tlet compFrigates: unknown[] = []\n\t\tJSON.parse(localStorage.getItem('compFrigates') ?? '').forEach((frigate: Frigate) => {\n\t\t\tcompFrigates.push(Object.values(frigate))\n\t\t})\n\t\tcompFrigates = compFrigates.flat()\n\n\t\tif (hitOrMiss_ === 'hit') {\n\t\t\t//player attacking computer scores a hit\n\t\t\tif (compSuperdreadnought.includes(currentCellCoord_)) {\n\t\t\t\t//displays hit on superdreadnought with randomized text\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem(\n\t\t\t\t\t\t`${playerName}'s turn: ${hitsPrecursorString} the superdreadnought PNS ${\n\t\t\t\t\t\t\thavenShipNames.superdreadnought\n\t\t\t\t\t\t}! ${\n\t\t\t\t\t\t\tbattleTexts.hitsOnComp[\n\t\t\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.hitsOnComp.length)\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}`\n\t\t\t\t\t)\n\t\t\t\t)(battleMessageElem)\n\t\t\t} else if (compCarrier.includes(currentCellCoord_)) {\n\t\t\t\t//displays hit on carrier with randomized text\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem(\n\t\t\t\t\t\t`${playerName}'s turn: ${hitsPrecursorString} the carrier PNS ${\n\t\t\t\t\t\t\thavenShipNames.cruiser\n\t\t\t\t\t\t}! ${\n\t\t\t\t\t\t\tbattleTexts.hitsOnComp[\n\t\t\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.hitsOnComp.length)\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}`\n\t\t\t\t\t)\n\t\t\t\t)(battleMessageElem)\n\t\t\t} else if (compBattleship.includes(currentCellCoord_)) {\n\t\t\t\t//displays hit on battleship with randomized text\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem(\n\t\t\t\t\t\t`${playerName}'s turn: ${hitsPrecursorString} the battleship PNS ${\n\t\t\t\t\t\t\thavenShipNames.battleship\n\t\t\t\t\t\t}! ${\n\t\t\t\t\t\t\tbattleTexts.hitsOnComp[\n\t\t\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.hitsOnComp.length)\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}`\n\t\t\t\t\t)\n\t\t\t\t)(battleMessageElem)\n\t\t\t} else if (compDestroyers.includes(currentCellCoord_)) {\n\t\t\t\t//there are two destroyers to connect names\n\t\t\t\t//checks that current cell that has hit registered is included in either one of the destroyers' or frigates' co-ordinates and assigns corresponding name to the hit rather than randomly calling the names\n\n\t\t\t\tconst [destroyer1, _]: Destroyer[] = JSON.parse(\n\t\t\t\t\tlocalStorage.getItem('compDestroyers') ?? ''\n\t\t\t\t)\n\t\t\t\tconsole.log(destroyer1)\n\n\t\t\t\tconst destroyer1Coords: string[] = []\n\t\t\t\tObject.values(destroyer1).forEach((shipPartCoords) => {\n\t\t\t\t\tdestroyer1Coords.push(shipPartCoords)\n\t\t\t\t})\n\n\t\t\t\t//displays hit on destroyer with randomized text\n\t\t\t\t//only need to check one destroyer\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem(\n\t\t\t\t\t\t`${playerName}'s turn: ${hitsPrecursorString} the destroyer PNS ${\n\t\t\t\t\t\t\tdestroyer1Coords.includes(currentCellCoord_)\n\t\t\t\t\t\t\t\t? havenShipNames.destroyers[0]\n\t\t\t\t\t\t\t\t: havenShipNames.destroyers[1]\n\t\t\t\t\t\t}! ${\n\t\t\t\t\t\t\tbattleTexts.hitsOnComp[\n\t\t\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.hitsOnComp.length)\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}`\n\t\t\t\t\t)\n\t\t\t\t)(battleMessageElem)\n\t\t\t} else if (compFrigates.includes(currentCellCoord_)) {\n\t\t\t\t//there are two frigates to connect names\n\t\t\t\tconst [frigate1, _]: Frigate[] = JSON.parse(\n\t\t\t\t\tlocalStorage.getItem('compFrigates') ?? ''\n\t\t\t\t)\n\n\t\t\t\tconst frigate1Coords: string[] = []\n\t\t\t\tObject.values(frigate1).forEach((shipPartCoords) => {\n\t\t\t\t\tfrigate1Coords.push(shipPartCoords)\n\t\t\t\t})\n\n\t\t\t\t//displays hit on frigate with randomized text\n\t\t\t\t//only need to check one frigate\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem(\n\t\t\t\t\t\t`${playerName}'s turn: ${hitsPrecursorString} the frigate PNS ${\n\t\t\t\t\t\t\tfrigate1Coords.includes(currentCellCoord_)\n\t\t\t\t\t\t\t\t? havenShipNames.frigates[0]\n\t\t\t\t\t\t\t\t: havenShipNames.frigates[1]\n\t\t\t\t\t\t}! ${\n\t\t\t\t\t\t\tbattleTexts.hitsOnComp[\n\t\t\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.hitsOnComp.length)\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}`\n\t\t\t\t\t)\n\t\t\t\t)(battleMessageElem)\n\t\t\t}\n\t\t} else if (hitOrMiss_ === 'miss') {\n\t\t\t//player attacking computer misses\n\t\t\tpipe(\n\t\t\t\taddTextToElem(\n\t\t\t\t\t`${playerName}'s turn: ${\n\t\t\t\t\t\tbattleTexts.missesByPlayer[\n\t\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.missesByPlayer.length)\n\t\t\t\t\t\t]\n\t\t\t\t\t}`\n\t\t\t\t)\n\t\t\t)(battleMessageElem)\n\t\t}\n\t} else if (towardsCombatant_ === 'player') {\n\t\tif (hitOrMiss_ === 'hit') {\n\t\t\t//if computer attacking player registers a hit\n\t\t\tif (currentShipSymbol_ === 'S') {\n\t\t\t\t//displays hit on superdreadnought with randomized text\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem(\n\t\t\t\t\t\t`Haven's turn: ${hitsPrecursorString} the superdreadnought RMNS ${\n\t\t\t\t\t\t\tmanticoreShipNames.superdreadnought\n\t\t\t\t\t\t}! ${\n\t\t\t\t\t\t\tbattleTexts.hitsOnPlayer[\n\t\t\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.hitsOnPlayer.length)\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}`\n\t\t\t\t\t)\n\t\t\t\t)(battleMessageElem)\n\t\t\t} else if (currentShipSymbol_ === 'C') {\n\t\t\t\t//displays hit on carrier with randomized text\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem(\n\t\t\t\t\t\t`Haven's turn: ${hitsPrecursorString} the carrier RMNS ${\n\t\t\t\t\t\t\tmanticoreShipNames.cruiser\n\t\t\t\t\t\t}! ${\n\t\t\t\t\t\t\tbattleTexts.hitsOnPlayer[\n\t\t\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.hitsOnPlayer.length)\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}`\n\t\t\t\t\t)\n\t\t\t\t)(battleMessageElem)\n\t\t\t} else if (currentShipSymbol_ === 'B') {\n\t\t\t\t//displays hit on battleship with randomized text\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem(\n\t\t\t\t\t\t`Haven's turn: ${hitsPrecursorString} the battleship RMNS ${\n\t\t\t\t\t\t\tmanticoreShipNames.battleship\n\t\t\t\t\t\t}! ${\n\t\t\t\t\t\t\tbattleTexts.hitsOnPlayer[\n\t\t\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.hitsOnPlayer.length)\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}`\n\t\t\t\t\t)\n\t\t\t\t)(battleMessageElem)\n\t\t\t} else if (currentShipSymbol_ === 'D') {\n\t\t\t\t//there are two destroyers to connect names\n\t\t\t\tconst [destroyer1, _]: Destroyer[] = JSON.parse(\n\t\t\t\t\tlocalStorage.getItem('destroyer') ?? ''\n\t\t\t\t)\n\n\t\t\t\tconst destroyer1Coords: string[] = []\n\t\t\t\tObject.values(destroyer1).forEach((shipPartCoords) => {\n\t\t\t\t\tdestroyer1Coords.push(shipPartCoords)\n\t\t\t\t})\n\n\t\t\t\t//displays hit on destroyer with randomized text\n\t\t\t\t//only need to check one destroyer\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem(\n\t\t\t\t\t\t`Haven's turn: ${hitsPrecursorString} the destroyer RMNS ${\n\t\t\t\t\t\t\tdestroyer1Coords.includes(currentCellCoord_)\n\t\t\t\t\t\t\t\t? manticoreShipNames.destroyers[0]\n\t\t\t\t\t\t\t\t: manticoreShipNames.destroyers[1]\n\t\t\t\t\t\t}! ${\n\t\t\t\t\t\t\tbattleTexts.hitsOnPlayer[\n\t\t\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.hitsOnPlayer.length)\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}`\n\t\t\t\t\t)\n\t\t\t\t)(battleMessageElem)\n\t\t\t} else if (currentShipSymbol_ === 'F') {\n\t\t\t\t//there are two frigates to connect names\n\t\t\t\tconst [frigate1, _]: Frigate[] = JSON.parse(localStorage.getItem('frigate') ?? '')\n\n\t\t\t\tconst frigate1Coords: string[] = []\n\t\t\t\tObject.values(frigate1).forEach((shipPartCoords) => {\n\t\t\t\t\tfrigate1Coords.push(shipPartCoords)\n\t\t\t\t})\n\n\t\t\t\t//displays hit on frigate with randomized text\n\t\t\t\t//only need to check one frigate\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem(\n\t\t\t\t\t\t`Haven's turn: ${hitsPrecursorString} the frigate RMNS ${\n\t\t\t\t\t\t\tfrigate1Coords.includes(currentCellCoord_)\n\t\t\t\t\t\t\t\t? manticoreShipNames.frigates[0]\n\t\t\t\t\t\t\t\t: manticoreShipNames.frigates[1]\n\t\t\t\t\t\t}! ${\n\t\t\t\t\t\t\tbattleTexts.hitsOnPlayer[\n\t\t\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.hitsOnPlayer.length)\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}`\n\t\t\t\t\t)\n\t\t\t\t)(battleMessageElem)\n\t\t\t}\n\t\t} else if (hitOrMiss_ === 'miss') {\n\t\t\t//computer attacking player misses\n\t\t\tpipe(\n\t\t\t\taddTextToElem(\n\t\t\t\t\t`Haven's turn: ${\n\t\t\t\t\t\tbattleTexts.missesByComp[\n\t\t\t\t\t\t\tMath.floor(Math.random() * battleTexts.missesByComp.length)\n\t\t\t\t\t\t]\n\t\t\t\t\t}`\n\t\t\t\t)\n\t\t\t)(battleMessageElem)\n\t\t}\n\t}\n}\nexport { renderBattleMessageElem }\n","import { announceGameWinner } from '../components/announceGameWinner'\nimport { computersTurn } from '../components/computersTurn'\nimport { renderBattleMessageElem } from '../components/renderBattleMessage'\nimport { pipe, removeEvtListener } from '../utilities/elementCreators'\nimport { Div, NodesDiv } from '../utilities/types'\nimport { handlePlayerClickOnCompMisses } from './handlePlayerClickOnCompMisses'\n\nconst handlePlayerClickOnCompShips = function (this: HTMLDivElement, ev: MouseEvent) {\n\t//initialize the hit counter on first hit\n\t//when total hits reaches 18, game ends\n\tif (!localStorage.getItem('totalHitsOnCompShips')) {\n\t\tlocalStorage.setItem('totalHitsOnCompShips', JSON.stringify(0))\n\t}\n\n\tconst compShipsCoords: string[] = JSON.parse(\n\t\tlocalStorage.getItem('compShipsCoords') ?? ''\n\t)\n\n\tlet totalHitsOnCompShips: number = JSON.parse(\n\t\tlocalStorage.getItem('totalHitsOnCompShips') ?? ''\n\t)\n\n\tconst currentCellCoord = this.dataset.cellcomp ?? ''\n\t//prevents winner being called when a miss is registered\n\tif (compShipsCoords.includes(currentCellCoord)) {\n\t\t//checks hit counter to see if its the last hit\n\t\tif (totalHitsOnCompShips === 17) {\n\t\t\tconst playerName = JSON.parse(localStorage.getItem('playerName') ?? '')\n\n\t\t\tannounceGameWinner(playerName)\n\t\t}\n\t}\n\n\t//required so that the renderBattleMessageElem function can display the appropriate message\n\tconst currentShipSymbol = this.textContent ?? ''\n\tconst towardsCombatant = 'comp'\n\tconst hitOrMiss = 'hit'\n\n\trenderBattleMessageElem(\n\t\tcurrentCellCoord,\n\t\tcurrentShipSymbol,\n\t\ttowardsCombatant,\n\t\thitOrMiss\n\t)\n\n\t//auto-scrolls to the bottom to have the most recent message visible\n\tconst infoScreenWrapper: Div = document.querySelector('.infoScreen-wrapper')\n\tconst scrollHeight = infoScreenWrapper?.scrollHeight ?? 0\n\n\tinfoScreenWrapper?.scroll({ top: scrollHeight, left: 0, behavior: 'smooth' })\n\n\t//updates the comp board cell to visually indicate hit\n\tthis.textContent = ''\n\tthis.textContent = '💥'\n\tthis.style.color = '#f0a400'\n\n\t//prevents clicks on previously hit cells counting towards totalHitsOnCompShips\n\tif (!localStorage.getItem('compShipsHitCoords')) {\n\t\tlocalStorage.setItem('compShipsHitCoords', JSON.stringify([]))\n\t}\n\tconst compShipsHitCoords: string[] = JSON.parse(\n\t\tlocalStorage.getItem('compShipsHitCoords') ?? ''\n\t)\n\n\t//updates hit counter only when new hit is not on a previously hit cell, and store\n\tif (!compShipsHitCoords.includes(currentCellCoord)) {\n\t\t//stores the unique hit co-ordinate\n\t\tcompShipsHitCoords.push(currentCellCoord)\n\t\tlocalStorage.setItem('compShipsHitCoords', JSON.stringify(compShipsHitCoords))\n\n\t\t//increments the hit counter and store\n\t\ttotalHitsOnCompShips = totalHitsOnCompShips + 1\n\t\tlocalStorage.setItem('totalHitsOnCompShips', JSON.stringify(totalHitsOnCompShips))\n\t}\n\n\t//all JS synchronous functions run-to-completion and since click callbacks are also synchronous, the setTimeout function is passed to a browser API and immediately starts the timer while the rest of the synchronous functions are run and popped off the call stack.\n\t//the remove click event listeners callback functions are the last synchronous instructions to be executed preventing the player from clicking any comp board cells for two seconds\n\t//After two seconds, the event loop pushes the setTimeout callback function to the macrotask queue (the higher priority microtask queue is empty because there are no promises), and once the event loop confirms call stack is empty, pushes the computersTurn function to the stack and is run and then event listeners are added back on\n\t//simulates a rudimentary game loop (without a while(boolean) statement) and gives the illusion of time taken for the computer to \"think\"\n\tconst compShipPresent: NodesDiv = document.querySelectorAll('.compShipPresent')\n\tconst compShipNotPresent: NodesDiv = document.querySelectorAll('.compShipNotPresent')\n\n\tcompShipPresent.forEach((cell) => {\n\t\tpipe(removeEvtListener('click')(handlePlayerClickOnCompShips))(cell)\n\t})\n\tcompShipNotPresent.forEach((cell) => {\n\t\tpipe(removeEvtListener('click')(handlePlayerClickOnCompMisses))(cell)\n\t})\n\n\tsetTimeout(computersTurn, 2000)\n}\nexport { handlePlayerClickOnCompShips }\n","import { addStyleToElem, pipe } from '../utilities/elementCreators'\nimport { Div } from '../utilities/types'\nimport { renderBattleMessageElem } from './renderBattleMessage'\n\nconst computerAttacks = function (compAttackGuess_: string) {\n\tconst playerShipsCoords: string[] = JSON.parse(\n\t\tlocalStorage.getItem('playerShipsCoords') ?? ''\n\t)\n\n\tlet totalHitsOnPlayerShips: number = JSON.parse(\n\t\tlocalStorage.getItem('totalHitsOnPlayerShips') ?? ''\n\t)\n\n\t//compAttackGuess_ is assumed to be unique at this point\n\t//checks if playerShip is present\n\tif (playerShipsCoords.includes(compAttackGuess_)) {\n\t\tconst playerShipCell: Div = document.querySelector(\n\t\t\t`[data-cellplayer=\"${compAttackGuess_}\"]`\n\t\t)\n\n\t\t//calls function to display battle message when computer registers a hit on a player ship\n\t\tconst currentCellCoord = compAttackGuess_\n\t\tconst currentShipSymbol = playerShipCell?.textContent ?? ''\n\t\tconst towardsCombatant = 'player'\n\t\tconst hitOrMiss = 'hit'\n\n\t\trenderBattleMessageElem(\n\t\t\tcurrentCellCoord,\n\t\t\tcurrentShipSymbol,\n\t\t\ttowardsCombatant,\n\t\t\thitOrMiss\n\t\t)\n\n\t\t//updates playercell to visually indicate hit\n\t\tif (playerShipCell) {\n\t\t\tplayerShipCell.textContent = ''\n\t\t\tplayerShipCell.textContent = '💥'\n\t\t}\n\n\t\t//updates hit counter and store\n\t\ttotalHitsOnPlayerShips = totalHitsOnPlayerShips + 1\n\t\tlocalStorage.setItem('totalHitsOnPlayerShips', JSON.stringify(totalHitsOnPlayerShips))\n\t} else {\n\t\t//if its a miss\n\t\tconst playerShipCell: Div = document.querySelector(\n\t\t\t`[data-cellplayer=\"${compAttackGuess_}\"]`\n\t\t)\n\n\t\t//calls function to display battle message when computer does not hit a player ship\n\t\tconst currentCellCoord = compAttackGuess_\n\t\tconst currentShipSymbol = playerShipCell?.textContent ?? ''\n\t\tconst towardsCombatant = 'player'\n\t\tconst hitOrMiss = 'miss'\n\n\t\trenderBattleMessageElem(\n\t\t\tcurrentCellCoord,\n\t\t\tcurrentShipSymbol,\n\t\t\ttowardsCombatant,\n\t\t\thitOrMiss\n\t\t)\n\n\t\t//auto-scrolls to the bottom to have the most recent message visible\n\t\tconst infoScreenWrapper: Div = document.querySelector('.infoScreen-wrapper')\n\t\tconst scrollHeight = infoScreenWrapper?.scrollHeight ?? 0\n\n\t\tinfoScreenWrapper?.scroll({ top: scrollHeight, left: 0, behavior: 'smooth' })\n\n\t\t//assigns '✖' to currently missed co-ordinate and colors it  amber\n\t\tif (playerShipCell) {\n\t\t\tplayerShipCell.textContent = ''\n\t\t\tplayerShipCell.textContent = '✖'\n\t\t\tpipe(addStyleToElem([['color', '#f0a400']]))(playerShipCell)\n\t\t}\n\n\t\t//initializes storage for previously missed co-ordinates\n\t\tif (!localStorage.getItem('prevCompMissOnPlayerCoord')) {\n\t\t\tlocalStorage.setItem('prevCompMissOnPlayerCoord', JSON.stringify(''))\n\t\t}\n\n\t\t//grabs the previous miss co-ordinates in order to turn them back into gray\n\t\tconst prevCompMissOnPlayerCoord = JSON.parse(\n\t\t\tlocalStorage.getItem('prevCompMissOnPlayerCoord') ?? ''\n\t\t)\n\t\tconst prevCompMissOnPlayerCell: Div = document.querySelector(\n\t\t\t`[data-cellplayer=\"${prevCompMissOnPlayerCoord}\"]`\n\t\t)\n\t\tpipe(addStyleToElem([['color', 'gainsboro']]))(prevCompMissOnPlayerCell)\n\n\t\t//stores current miss co-ordinates in order to highlight the current round's co-ordinates\n\t\tlocalStorage.setItem('prevCompMissOnPlayerCoord', JSON.stringify(currentCellCoord))\n\t}\n}\nexport { computerAttacks }\n","const genRandCompAttackGuess = function () {\n\tlet compAttackGuess = `${Math.floor(Math.random() * 10)},${Math.floor(\n\t\tMath.random() * 10\n\t)}`\n\t//stores comp guesses to avoid hits on previously targeted co-ordinates\n\tif (!localStorage.getItem('compAttackGuesses')) {\n\t\tlocalStorage.setItem('compAttackGuesses', JSON.stringify([]))\n\t}\n\tconst compAttackGuesses: string[] = JSON.parse(\n\t\tlocalStorage.getItem('compAttackGuesses') ?? ''\n\t)\n\n\t//checks if guess is in previous guesses, if so runs the random function again\n\t//avoids guessing the same co-ordinates\n\tlet isUniqueCoordinate = false\n\n\twhile (!isUniqueCoordinate) {\n\t\tif (compAttackGuesses.includes(compAttackGuess)) {\n\t\t\t//if the guessed co-ordinate has already been tried\n\t\t\tisUniqueCoordinate = false\n\n\t\t\tcompAttackGuess = `${Math.floor(Math.random() * 10)},${Math.floor(\n\t\t\t\tMath.random() * 10\n\t\t\t)}`\n\t\t} else {\n\t\t\tisUniqueCoordinate = true\n\t\t\t//stores unique co-ordinate\n\t\t\tcompAttackGuesses.push(compAttackGuess)\n\t\t\tlocalStorage.setItem('compAttackGuesses', JSON.stringify(compAttackGuesses))\n\t\t}\n\t}\n\n\treturn compAttackGuess\n}\nexport { genRandCompAttackGuess }\n","import { handlePlayerClickOnCompMisses } from '../events/handlePlayerClickOnCompMisses'\nimport { handlePlayerClickOnCompShips } from '../events/handlePlayerClickOnCompShips'\nimport { addEvtListener, pipe } from '../utilities/elementCreators'\nimport { NodesDiv } from '../utilities/types'\nimport { announceGameWinner } from './announceGameWinner'\nimport { computerAttacks } from './computerAttacks'\nimport { genRandCompAttackGuess } from './genRandCompAttackGuess'\n\nconst computersTurn = function () {\n\t//checks if game has been won\n\tif (!localStorage.getItem('isGameWon')) {\n\t\tlocalStorage.setItem('isGameWon', JSON.stringify(''))\n\t}\n\tconst isGameWon: boolean = JSON.parse(localStorage.getItem('isGameWon') ?? '')\n\n\t//this conditional check is to prevent computer from having a turn after player has destroyed all of computer's ships\n\tif (!isGameWon) {\n\t\tif (!localStorage.getItem('totalHitsOnPlayerShips')) {\n\t\t\tlocalStorage.setItem('totalHitsOnPlayerShips', JSON.stringify(0))\n\t\t}\n\n\t\tconst playerShipsCoords: string[] = JSON.parse(\n\t\t\tlocalStorage.getItem('playerShipsCoords') ?? ''\n\t\t)\n\n\t\tconst compAttackGuess = genRandCompAttackGuess()\n\n\t\t//if compAttackGuess is on a playerShipCoord, then checks the hit counter\n\t\t//avoids registering a win when the computer misses\n\t\tif (playerShipsCoords.includes(compAttackGuess)) {\n\t\t\tconst totalHitsOnPlayerShips: number = JSON.parse(\n\t\t\t\tlocalStorage.getItem('totalHitsOnPlayerShips') ?? ''\n\t\t\t)\n\t\t\tif (totalHitsOnPlayerShips === 17) {\n\t\t\t\t//calls game winner function\n\t\t\t\tannounceGameWinner('comp')\n\t\t\t}\n\t\t}\n\n\t\t//if no winner, continues attack\n\t\tcomputerAttacks(compAttackGuess)\n\n\t\t//if game win condition has not been reached, adds the event listeners back on to continue round\n\t\tconst compShipPresent: NodesDiv = document.querySelectorAll('.compShipPresent')\n\t\tcompShipPresent.forEach((cell) => {\n\t\t\tpipe(addEvtListener('click')(handlePlayerClickOnCompShips))(cell)\n\t\t})\n\n\t\tconst compShipNotPresent: NodesDiv = document.querySelectorAll('.compShipNotPresent')\n\t\tcompShipNotPresent.forEach((cell) => {\n\t\t\tpipe(addEvtListener('click')(handlePlayerClickOnCompMisses))(cell)\n\t\t})\n\t}\n}\nexport { computersTurn }\n","import { computersTurn } from '../components/computersTurn'\nimport { renderBattleMessageElem } from '../components/renderBattleMessage'\nimport { addStyleToElem, pipe, removeEvtListener } from '../utilities/elementCreators'\nimport { Div, NodesDiv } from '../utilities/types'\nimport { handlePlayerClickOnCompShips } from './handlePlayerClickOnCompShips'\n\nconst handlePlayerClickOnCompMisses = function (this: HTMLDivElement, ev: MouseEvent) {\n\tconst currentCellCoord = this.dataset.cellcomp ?? ''\n\tconst currentShipSymbol = this.textContent ?? ''\n\tconst towardsCombatant = 'comp'\n\tconst hitOrMiss = 'miss'\n\n\trenderBattleMessageElem(\n\t\tcurrentCellCoord,\n\t\tcurrentShipSymbol,\n\t\ttowardsCombatant,\n\t\thitOrMiss\n\t)\n\n\t//auto-scrolls to the bottom to have the most recent message visible\n\tconst infoScreenWrapper: Div = document.querySelector('.infoScreen-wrapper')\n\tconst scrollHeight = infoScreenWrapper?.scrollHeight ?? 0\n\n\tinfoScreenWrapper?.scroll({ top: scrollHeight, left: 0, behavior: 'smooth' })\n\n\t//assigns '✖' to currently missed co-ordinate and colors it amber\n\tthis.textContent == ''\n\tthis.textContent = '✖'\n\tpipe(addStyleToElem([['color', '#f0a400']]))(this)\n\n\t//initializse storage for previously missed co-ordinates\n\tif (!localStorage.getItem('prevPlayerMissOnCompCoord')) {\n\t\tlocalStorage.setItem('prevPlayerMissOnCompCoord', JSON.stringify(''))\n\t}\n\n\t//grabs the previous miss co-ordinates in order to turn them back into gray\n\tconst prevPlayerMissOnCompCoord = JSON.parse(\n\t\tlocalStorage.getItem('prevPlayerMissOnCompCoord') ?? ''\n\t)\n\tconst prevPlayerMissOnCompCell: Div = document.querySelector(\n\t\t`[data-cellcomp=\"${prevPlayerMissOnCompCoord}\"]`\n\t)\n\tpipe(addStyleToElem([['color', 'gainsboro']]))(prevPlayerMissOnCompCell)\n\n\t//stores current miss co-ordinates in order to highlight the current round's co-ordinates\n\tlocalStorage.setItem('prevPlayerMissOnCompCoord', JSON.stringify(currentCellCoord))\n\n\t//all JS synchronous functions run-to-completion and since click callbacks are also synchronous, the setTimeout function is passed to a browser API and immediately starts the timer while the rest of the synchronous functions are run and popped off the call stack.\n\t//the remove click event listeners callback functions are the last synchronous instructions to be executed preventing the player from clicking any comp board cells for two seconds\n\t//After two seconds, the event loop pushes the setTimeout callback function to the macrotask queue (the higher priority microtask queue is empty because there are no promises), and once the event loop confirms call stack is empty, pushes the computersTurn function to the stack and is run and then event listeners are added back on\n\t//simulates a rudimentary game loop (without a while(boolean) statement) and gives the illusion of time taken for the computer to \"think\"\n\tconst compShipNotPresent: NodesDiv = document.querySelectorAll('.compShipNotPresent')\n\tconst compShipPresent: NodesDiv = document.querySelectorAll('.compShipPresent')\n\n\tcompShipNotPresent.forEach((cell) => {\n\t\tpipe(removeEvtListener('click')(handlePlayerClickOnCompMisses))(cell)\n\t})\n\tcompShipPresent.forEach((cell) => {\n\t\tpipe(removeEvtListener('click')(handlePlayerClickOnCompShips))(cell)\n\t})\n\n\t//computers turn\n\tsetTimeout(computersTurn, 2000)\n}\nexport { handlePlayerClickOnCompMisses }\n","const shipNames = {\n\thaven: {\n\t\tsuperdreadnoughts: [\n\t\t\t'Nouveau Paris',\n\t\t\t'Danville',\n\t\t\t'Havensport',\n\t\t\t'Juneau',\n\t\t\t'Kaplin',\n\t\t\t\"Macrea's Tor\",\n\t\t\t'La Martin',\n\t\t\t'LaFayette',\n\t\t\t'Lutetia',\n\t\t\t'Merston',\n\t\t\t'New Boston',\n\t\t\t'Toulon',\n\t\t\t'Tregizva',\n\t\t\t'Waldensville',\n\t\t\t'Kaplan',\n\t\t\t'Merston',\n\t\t\t'Shaldon',\n\t\t\t\"René d'Aiguillon\",\n\t\t\t'Du Quesne',\n\t\t\t\"D'Allonville\",\n\t\t\t'Alphand',\n\t\t\t'Baudin',\n\t\t\t'Charette',\n\t\t\t'Forbin',\n\t\t\t'Guichen',\n\t\t\t\"D'Iberville\",\n\t\t\t'Lepanto',\n\t\t\t'Mouchez',\n\t\t\t'Tilden',\n\t\t\t'Rouseau',\n\t\t\t'Salamis',\n\t\t\t'Sovereign of Space',\n\t\t\t'Bayard',\n\t\t\t'Cannonade',\n\t\t\t'Conquete',\n\t\t\t'Guerriere',\n\t\t\t'Hero',\n\t\t\t'Lancelot',\n\t\t\t'New Republic',\n\t\t\t'Victorieux',\n\t\t\t'Temeraire',\n\t\t],\n\t\tcruisers: [\n\t\t\t'Sword',\n\t\t\t'Claymore',\n\t\t\t'Cutlass',\n\t\t\t'Dirk',\n\t\t\t'Drusus',\n\t\t\t'Durandal',\n\t\t\t'Epee',\n\t\t\t'Estoc',\n\t\t\t'Excalibur',\n\t\t\t'Falchion',\n\t\t\t'Flamberge',\n\t\t\t'Foil',\n\t\t\t'Gladius',\n\t\t\t'Jian',\n\t\t\t'Katana',\n\t\t\t'Khopesh',\n\t\t\t'Poignard',\n\t\t\t'Raiden',\n\t\t\t'Rapier',\n\t\t\t'Sabre',\n\t\t\t'Scimitar',\n\t\t\t'Shamshir',\n\t\t\t'Wakasashi',\n\t\t\t'Mars',\n\t\t\t'Loki',\n\t\t\t'Marduk',\n\t\t\t'Nurghal',\n\t\t\t'Odin',\n\t\t\t'Thor',\n\t\t\t'Tyr',\n\t\t\t'Anhur',\n\t\t\t'Ares',\n\t\t\t'De Conde',\n\t\t\t'Hachiman',\n\t\t\t'Huan-Ti',\n\t\t\t'Ishtar',\n\t\t\t'Rienzi',\n\t\t\t'Tanit',\n\t\t\t'Krashnark',\n\t\t\t'Morrigan',\n\t\t\t'Yama',\n\t\t],\n\t\tbattleships: [\n\t\t\t'Tiger',\n\t\t\t'Bengal',\n\t\t\t'Bobcat',\n\t\t\t'Burmese',\n\t\t\t'Cheetah',\n\t\t\t'Cougar',\n\t\t\t'Jaguar',\n\t\t\t'Leopard',\n\t\t\t'Lion',\n\t\t\t'Lioness',\n\t\t\t'Lynx',\n\t\t\t'Manx',\n\t\t\t'Mountain Lion',\n\t\t\t'Ocelot',\n\t\t\t'Panther',\n\t\t\t'Puma',\n\t\t\t'Sabretooth',\n\t\t\t'Wildcat',\n\t\t\t'Sultan',\n\t\t\t'Abdali',\n\t\t\t'Achmed',\n\t\t\t'Alp Arslan',\n\t\t\t'Bayezid',\n\t\t\t'Fatih',\n\t\t\t'Isa',\n\t\t\t'Kerebin',\n\t\t\t'Malik',\n\t\t\t'Mehmed',\n\t\t\t'Murad',\n\t\t\t'Musa',\n\t\t\t'Rash al-Din',\n\t\t\t'Saladin',\n\t\t\t'Selim',\n\t\t\t'Sinjar',\n\t\t\t'Sulieman',\n\t\t\t'Tinaly',\n\t\t\t'Tolek',\n\t\t\t'Walid',\n\t\t\t'Yavuz',\n\t\t\t'Yildirim',\n\t\t\t'Attila',\n\t\t\t'Barbarosa',\n\t\t\t'Boyar',\n\t\t\t'Cassander',\n\t\t\t'Count Maresuke Nogi',\n\t\t\t'Count Tilly',\n\t\t\t'Cyrus',\n\t\t\t'Farnese',\n\t\t\t'Ivan IV',\n\t\t\t'Kutuzov',\n\t\t\t'MacArthur',\n\t\t\t'Modred',\n\t\t\t'Pappenheim',\n\t\t\t'Roxana',\n\t\t\t'Subutai',\n\t\t\t'Tammerlane',\n\t\t\t'Tepes',\n\t\t\t'Wallenstein',\n\t\t\t'William T. Sherman',\n\t\t\t'Triumphant',\n\t\t\t'Admiral Quinterra',\n\t\t\t'Conquerant',\n\t\t\t'Conquistador',\n\t\t\t'Schaumberg',\n\t\t\t'Theban Warrior',\n\t\t\t'Vindicator',\n\t\t\t'Citizen Admiral Tacosa',\n\t\t\t'Mohawk',\n\t\t\t'Saracen',\n\t\t\t'Veracity',\n\t\t],\n\t\tdestroyers: [\n\t\t\t'Bastogne',\n\t\t\t'Arlon',\n\t\t\t'Breslau ',\n\t\t\t'Bruges',\n\t\t\t'Busko',\n\t\t\t'Charleroi',\n\t\t\t'Gorzow',\n\t\t\t'Jaroslaw',\n\t\t\t'Kessler',\n\t\t\t'Krakow',\n\t\t\t'Leuven',\n\t\t\t'Liege',\n\t\t\t'Lubin',\n\t\t\t'Malbork',\n\t\t\t'Poznan',\n\t\t\t'Suwalki',\n\t\t\t'Torun',\n\t\t\t'Toulon',\n\t\t\t'Tournai',\n\t\t\t'Desforge',\n\t\t\t'Alcazar ',\n\t\t\t'Auphan',\n\t\t\t'Baudin',\n\t\t\t'Bouvet',\n\t\t\t'Bruat',\n\t\t\t'Courbet',\n\t\t\t'Decres',\n\t\t\t'Duperre',\n\t\t\t'Hamelin',\n\t\t\t'Kersaint',\n\t\t\t'Linois',\n\t\t\t'Morillot',\n\t\t\t'Muselier',\n\t\t\t'Dainville',\n\t\t\t'Picquet',\n\t\t\t'Requin',\n\t\t\t'Roussin',\n\t\t\t'Toulouse',\n\t\t\t'Hecate',\n\t\t\t'Hector',\n\t\t\t'Racer',\n\t\t],\n\t\tfrigates: [\n\t\t\t'Brilliance',\n\t\t\t'Glimmer',\n\t\t\t'Radiance',\n\t\t\t'Solar Flare',\n\t\t\t'Sunspot',\n\t\t\t'Conqueror',\n\t\t\t'Alexander',\n\t\t\t'Alvarado',\n\t\t\t'Babar',\n\t\t\t'Caesar',\n\t\t\t'Cortez',\n\t\t\t'Diaz',\n\t\t\t'Khan',\n\t\t\t'Hannibal',\n\t\t\t'Hideyoshi',\n\t\t\t'Huangdi',\n\t\t\t'Montezuma',\n\t\t\t'Napoleon',\n\t\t\t'Rameses',\n\t\t\t'Valdivia',\n\t\t\t'Vaubon',\n\t\t\t'Wari',\n\t\t\t'William',\n\t\t\t'Charles Wade Pope',\n\t\t\t'Marcus',\n\t\t\t'Beaudway',\n\t\t\t'Thomas Fisher',\n\t\t\t'Wiliam Harting',\n\t\t\t'Isaiah Kenter',\n\t\t\t'Joseph T. Marrone',\n\t\t\t'Kenneth Nastansky',\n\t\t\t'Esperanza de Souza',\n\t\t\t'Jonathan Talbott',\n\t\t\t'Bacchante',\n\t\t\t'Sabine',\n\t\t\t'Seahorse',\n\t\t],\n\t},\n\n\tmanticore: {\n\t\tsuperdreadnoughts: [\n\t\t\t'Invictus',\n\t\t\t'Imperator',\n\t\t\t'Incomparable',\n\t\t\t'Intolerant',\n\t\t\t'Intransigent',\n\t\t\t'Second Yeltsin',\n\t\t\t'Medusa',\n\t\t\t'Barnett',\n\t\t\t'Belisarius',\n\t\t\t'Bellona',\n\t\t\t'Elizabeth I',\n\t\t\t\"Ellen D'Orville\",\n\t\t\t'Hancock',\n\t\t\t'King Roger III',\n\t\t\t'Marduk',\n\t\t\t'Regulus',\n\t\t\t'Revenge',\n\t\t\t'Troubadour',\n\t\t\t'Thunderer',\n\t\t\t\"Trevor's Star\",\n\t\t\t'Victorious',\n\t\t\t'Warrior',\n\t\t\t\"Yeltsin's Star\",\n\t\t\t'King William',\n\t\t\t'King David',\n\t\t\t'King Edward',\n\t\t\t'King George',\n\t\t\t'King Michael',\n\t\t\t'King Roger',\n\t\t\t'Prince Charles',\n\t\t\t'Prince Malachai',\n\t\t\t'Prince Royal',\n\t\t\t'Queen Adrianne',\n\t\t\t'Queen Caitrin',\n\t\t\t'Manticore',\n\t\t\t'Gryphon',\n\t\t\t'Sphinx',\n\t\t\t'Samothrace',\n\t\t\t'Hercules',\n\t\t\t'Majestic',\n\t\t\t'Magnificent',\n\t\t\t'Monarch',\n\t\t\t'Scepter',\n\t\t\t'Sovereign',\n\t\t\t'Bellerophon',\n\t\t],\n\t\tcruisers: [\n\t\t\t'Redoubtable',\n\t\t\t'Champion',\n\t\t\t'Defiant',\n\t\t\t'Formidable',\n\t\t\t'Intolerant',\n\t\t\t'Invincible',\n\t\t\t'Irresistible',\n\t\t\t'Onslaught',\n\t\t\t'Renown',\n\t\t\t'Resolution',\n\t\t\t'Revenge',\n\t\t\t'Homer',\n\t\t\t'Achilles',\n\t\t\t'Agamemnon',\n\t\t\t'Cassandra',\n\t\t\t'Hecate',\n\t\t\t'Hector',\n\t\t\t'Menelaus',\n\t\t\t'Penthesilea',\n\t\t\t'Priam',\n\t\t\t'Reliant',\n\t\t\t'Alcibiades',\n\t\t\t'Amphitrite',\n\t\t\t'Achilles',\n\t\t\t'Dauntless',\n\t\t\t'Hasley',\n\t\t\t'Indomitable',\n\t\t\t'Ishtar',\n\t\t\t'Lysander',\n\t\t\t'Nike',\n\t\t\t'Nelson',\n\t\t\t'Retaliation',\n\t\t\t'Royalist',\n\t\t\t'Truculent',\n\t\t\t'Venom',\n\t\t\t'Victory',\n\t\t\t'Viper',\n\t\t\t'Warspite',\n\t\t\t'Xerxes',\n\t\t\t'Agamemnon',\n\t\t\t'Ajax',\n\t\t\t'Hector',\n\t\t\t'Patrocles',\n\t\t\t'Priam',\n\t\t\t'Nike',\n\t\t],\n\t\tbattleships: [\n\t\t\t'Prince Consort',\n\t\t\t'Prince Adrian',\n\t\t\t'Prince Justin',\n\t\t\t'Prince Michael',\n\t\t\t'Prince Roger',\n\t\t\t'Prince Stephen',\n\t\t\t'Prince Harold',\n\t\t\t'Princess Adrienne',\n\t\t\t'Princess Angelique',\n\t\t\t'Princess Aorianna',\n\t\t\t'Princess Caitrin',\n\t\t\t'Princess Joanna',\n\t\t\t'Princess Michelle',\n\t\t\t'Princess Samantha',\n\t\t\t'Princess Solange',\n\t\t\t'Crusader',\n\t\t\t'Alexius',\n\t\t\t'Eleanor',\n\t\t\t'Frederick',\n\t\t\t'Iberiana',\n\t\t\t'Lafroye',\n\t\t\t'Philip',\n\t\t\t'Richard',\n\t\t\t'Tancred',\n\t\t\t'Broadsword',\n\t\t\t'Claymore',\n\t\t\t'Cutlass',\n\t\t\t'Glaive',\n\t\t\t'Guisarm',\n\t\t\t'Halberd',\n\t\t\t'Pike',\n\t\t\t'Schiavone',\n\t\t\t'Alchemist',\n\t\t\t'Cantrip',\n\t\t\t'Circe',\n\t\t\t'Conjurer',\n\t\t\t'Druidess',\n\t\t\t'Enchanter',\n\t\t\t'Fearless ',\n\t\t\t'Magician',\n\t\t\t'Magus',\n\t\t\t'Merlin',\n\t\t\t'Necromancer',\n\t\t\t'Oracle',\n\t\t\t'Runebearer',\n\t\t\t'Santander',\n\t\t\t'Seeress',\n\t\t\t'Shaman',\n\t\t\t'Sorceror',\n\t\t\t'Star Knight',\n\t\t\t'Star Ranger',\n\t\t\t'Thaumaturge',\n\t\t\t'Valiant',\n\t\t\t'Warlock ',\n\t\t\t'Edward Saganami',\n\t\t\t'Jessica Epps',\n\t\t\t'Quentin Saint-James',\n\t\t\t'Hexapuma',\n\t\t\t'Gauntlet',\n\t\t],\n\t\tdestroyers: [\n\t\t\t'Culverin',\n\t\t\t'Cannonball',\n\t\t\t'Carronade',\n\t\t\t'Chainshot',\n\t\t\t'Chanson',\n\t\t\t'Aria',\n\t\t\t'Balladeer',\n\t\t\t'Bard',\n\t\t\t'Canticle',\n\t\t\t'Choralist',\n\t\t\t'Glorioso',\n\t\t\t'Madrigal',\n\t\t\t'Minstrel',\n\t\t\t'Nightingale',\n\t\t\t'Plain Song',\n\t\t\t'Rondeau',\n\t\t\t'Serenade',\n\t\t\t'Troubadur',\n\t\t\t'Oracle',\n\t\t\t'Vixen',\n\t\t\t'Windsong',\n\t\t\t'Havoc',\n\t\t\t'Chaos',\n\t\t\t'Devastation',\n\t\t\t'Harrow',\n\t\t\t'Hutspur',\n\t\t\t'Turbulent',\n\t\t\t'Vengeance',\n\t\t\t'Wrack',\n\t\t\t'Falcon',\n\t\t\t'Condor',\n\t\t\t'Goshawk',\n\t\t\t'Harrier',\n\t\t\t'Hawk',\n\t\t\t'Hawkwing3',\n\t\t\t'Kestrel',\n\t\t\t'Kingfisher',\n\t\t\t'Kite',\n\t\t\t'Linnet',\n\t\t\t'Merlin',\n\t\t\t'Nighthawk',\n\t\t\t'Peregrine',\n\t\t\t'Shrike',\n\t\t\t'Arrowhead',\n\t\t\t'Roland',\n\t\t],\n\t\tfrigates: [\n\t\t\t'Courageous',\n\t\t\t'Audacious',\n\t\t\t'Fearless',\n\t\t\t'Intransigent',\n\t\t\t'Intrepid',\n\t\t\t'Resolute',\n\t\t\t'Valiant',\n\t\t\t'Defiant',\n\t\t\t'Gallant',\n\t\t\t'Apollo',\n\t\t\t'Adonai',\n\t\t\t'Agni',\n\t\t\t'Amaterasu',\n\t\t\t'Anubis',\n\t\t\t'Aphrodite',\n\t\t\t'Arethusa',\n\t\t\t'Artemis',\n\t\t\t'Athena',\n\t\t\t'Chiron',\n\t\t\t'Hera',\n\t\t\t'Hermes',\n\t\t\t'Iris',\n\t\t\t'Leto',\n\t\t\t'Perseus',\n\t\t\t'Poseidon',\n\t\t\t'Thetis',\n\t\t\t'Xanthus',\n\t\t\t'Ares',\n\t\t\t'Illustrious',\n\t\t\t'Furious',\n\t\t\t'Magnificent',\n\t\t\t'Regal',\n\t\t\t'Avalon',\n\t\t\t'Aegis',\n\t\t],\n\t},\n}\n\nexport { shipNames }\n","import {\n\taddAttributeToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from '../utilities/elementCreators'\nimport { Div } from '../utilities/types'\n\nconst renderCompBoard = function () {\n\tconst bothBoardsContainer: Div = document.querySelector('.bothBoards-container')\n\n\tconst compBoardWrapper = elemCreator('div')(['compBoard-wrapper'])\n\tappendElemToParent(bothBoardsContainer)(compBoardWrapper)\n\n\tconst compBoardContainer = elemCreator('div')(['compBoard-container'])\n\tappendElemToParent(compBoardWrapper)(compBoardContainer)\n\n\tfor (let i = 0; i < 10; i += 1) {\n\t\tfor (let j = 0; j < 10; j += 1) {\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['data-cellcomp', `${j},${i}`]]),\n\t\t\t\tappendElemToParent(compBoardContainer)\n\t\t\t)(elemCreator('div')(['comp-gameCell']))\n\t\t}\n\t}\n}\nexport { renderCompBoard }\n","import {\n\taddAttributeToElem,\n\taddStyleToElem,\n\taddTextToElem,\n\tpipe,\n} from '../utilities/elementCreators'\nimport { CompShipsPlacementChoice, Div, NodesDiv } from '../utilities/types'\n\nconst renderCompShipsOnBoard = function (\n\tcompShipsPlacementChoice_: CompShipsPlacementChoice\n) {\n\t//used for hit detection\n\tif (!localStorage.getItem('compShipsCoords')) {\n\t\tlocalStorage.setItem('compShipsCoords', JSON.stringify([]))\n\t}\n\n\tconst compShipsCoords: string[] = JSON.parse(\n\t\tlocalStorage.getItem('compShipsCoords') ?? ''\n\t)\n\n\tObject.entries(compShipsPlacementChoice_).forEach(([ship, shipObj]) => {\n\t\t//if the compShips obj does not exist, create it, then store it in camelcase i.e., compCarrier\n\t\tif (!localStorage.getItem(`comp${ship[0].toUpperCase() + ship.slice(1)}`)) {\n\t\t\tlocalStorage.setItem(\n\t\t\t\t`comp${ship[0].toUpperCase() + ship.slice(1)}`,\n\t\t\t\tJSON.stringify(shipObj)\n\t\t\t)\n\t\t}\n\n\t\t//for superdreadnought, carrier, battleship properties whose attributes do not consist of an array\n\t\tif (!Array.isArray(shipObj)) {\n\t\t\tObject.entries(shipObj).forEach(([shipSection, sectionCoords]) => {\n\t\t\t\t//grab the corresponding game board cell\n\t\t\t\tconst shipCell: Div = document.querySelector(`[data-cellcomp=\"${sectionCoords}\"]`)\n\n\t\t\t\tpipe(\n\t\t\t\t\taddAttributeToElem([['class', 'compShipPresent comp-gameCell']]),\n\t\t\t\t\taddTextToElem('✴'),\n\t\t\t\t\taddStyleToElem([['border', '1px solid #00f000']])\n\t\t\t\t)(shipCell)\n\n\t\t\t\t//store the co-ordinates\n\t\t\t\tcompShipsCoords.push(sectionCoords)\n\t\t\t})\n\t\t} else {\n\t\t\t//for destroyers and frigates properties whose attributes consist of an array\n\t\t\tshipObj.forEach((ship) => {\n\t\t\t\tObject.entries(ship).forEach(([shipSection, sectionCoords]) => {\n\t\t\t\t\t//grab the corresponding game board cell\n\t\t\t\t\tconst shipCell: Div = document.querySelector(\n\t\t\t\t\t\t`[data-cellcomp=\"${sectionCoords}\"]`\n\t\t\t\t\t)\n\n\t\t\t\t\tpipe(\n\t\t\t\t\t\taddAttributeToElem([['class', 'compShipPresent comp-gameCell']]),\n\t\t\t\t\t\taddTextToElem('✴'),\n\t\t\t\t\t\taddStyleToElem([['border', '1px solid #00f000']])\n\t\t\t\t\t)(shipCell)\n\n\t\t\t\t\t//store the co-ordinates\n\t\t\t\t\tcompShipsCoords.push(sectionCoords)\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t})\n\n\tconst compGameCells: NodesDiv = document.querySelectorAll('.comp-gameCell')\n\n\t//differentiates between ships and empty spaces\n\tcompGameCells.forEach((cell) => {\n\t\tif (!cell.classList.contains('compShipPresent')) {\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'compShipNotPresent comp-gameCell']]),\n\t\t\t\taddTextToElem('✴')\n\t\t\t)(cell)\n\t\t}\n\t})\n\n\t//puts the coordinates in storage for future hit detection checks\n\tlocalStorage.setItem('compShipsCoords', JSON.stringify(compShipsCoords))\n}\n\nexport { renderCompShipsOnBoard }\n","import { CompShipsPlacementChoiceArr } from '../utilities/types'\nimport { renderCompShipsOnBoard } from './renderCompShipsOnBoard'\n\nconst placeCompShipsOnBoard = function (\n\tcompShipsPlacementChoicesArr_: CompShipsPlacementChoiceArr\n) {\n\tconst compShipsPlacementChoicesArr = compShipsPlacementChoicesArr_\n\n\t//selects a random pre-formed compShipPlacement for every game\n\tconst randCompShipPlacement =\n\t\tcompShipsPlacementChoicesArr[\n\t\t\tMath.floor(Math.random() * compShipsPlacementChoicesArr.length)\n\t\t]\n\n\trenderCompShipsOnBoard(randCompShipPlacement)\n}\nexport { placeCompShipsOnBoard }\n","export const compShipsPlacementChoicesArr = [\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '1,0',\n\t\t\tbody1: '2,0',\n\t\t\tbody2: '3,0',\n\t\t\tbody3: '4,0',\n\t\t\ttail: '5,0',\n\t\t},\n\t\tcarrier: { head: '1,2', body1: '2,2', body2: '3,2', tail: '4,2' },\n\t\tbattleship: { head: '1,4', body: '2,4', tail: '3,4' },\n\t\tdestroyers: [\n\t\t\t{ head: '1,6', tail: '2,6' },\n\t\t\t{ head: '1,8', tail: '2,8' },\n\t\t],\n\t\tfrigates: [{ body: '4,6' }, { body: '4,8' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '1,2',\n\t\t\tbody1: '1,3',\n\t\t\tbody2: '1,4',\n\t\t\tbody3: '1,5',\n\t\t\ttail: '1,6',\n\t\t},\n\t\tcarrier: { head: '4,2', body1: '4,3', body2: '4,4', tail: '4,5' },\n\t\tbattleship: { head: '6,1', body: '7,1', tail: '8,1' },\n\t\tdestroyers: [\n\t\t\t{ head: '7,4', tail: '8,4' },\n\t\t\t{ head: '3,7', tail: '3,8' },\n\t\t],\n\t\tfrigates: [{ body: '7,7' }, { body: '5,8' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '1,1',\n\t\t\tbody1: '1,2',\n\t\t\tbody2: '1,3',\n\t\t\tbody3: '1,4',\n\t\t\ttail: '1,5',\n\t\t},\n\t\tcarrier: { head: '3,2', body1: '3,3', body2: '3,4', tail: '3,5' },\n\t\tbattleship: { head: '1,7', body: '2,7', tail: '3,7' },\n\t\tdestroyers: [\n\t\t\t{ head: '4,0', tail: '5,0' },\n\t\t\t{ head: '5,2', tail: '5,3' },\n\t\t],\n\t\tfrigates: [{ body: '5,5' }, { body: '5,7' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '1,8',\n\t\t\tbody1: '2,8',\n\t\t\tbody2: '3,8',\n\t\t\tbody3: '4,8',\n\t\t\ttail: '5,8',\n\t\t},\n\t\tcarrier: { head: '6,6', body1: '7,6', body2: '8,6', tail: '9,6' },\n\t\tbattleship: { head: '6,4', body: '7,4', tail: '8,4' },\n\t\tdestroyers: [\n\t\t\t{ head: '2,6', tail: '3,6' },\n\t\t\t{ head: '2,4', tail: '3,4' },\n\t\t],\n\t\tfrigates: [{ body: '3,2' }, { body: '7,2' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '1,1',\n\t\t\tbody1: '1,2',\n\t\t\tbody2: '1,3',\n\t\t\tbody3: '1,4',\n\t\t\ttail: '1,5',\n\t\t},\n\t\tcarrier: { head: '8,6', body1: '8,7', body2: '8,8', tail: '8,9' },\n\t\tbattleship: { head: '6,1', body: '7,1', tail: '8,1' },\n\t\tdestroyers: [\n\t\t\t{ head: '6,3', tail: '7,3' },\n\t\t\t{ head: '1,8', tail: '2,8' },\n\t\t],\n\t\tfrigates: [{ body: '4,6' }, { body: '3,3' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '0,0',\n\t\t\tbody1: '1,0',\n\t\t\tbody2: '2,0',\n\t\t\tbody3: '3,0',\n\t\t\ttail: '4,0',\n\t\t},\n\n\t\tcarrier: { head: '2,9', body1: '3,9', body2: '4,9', tail: '5,9' },\n\t\tbattleship: { head: '0,5', body: '0,6', tail: '0,7' },\n\t\tdestroyers: [\n\t\t\t{ head: '8,3', tail: '8,4' },\n\t\t\t{ head: '5,6', tail: '5,7' },\n\t\t],\n\t\tfrigates: [{ body: '3,2' }, { body: '8,9' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '0,7',\n\t\t\tbody1: '1,7',\n\t\t\tbody2: '2,7',\n\t\t\tbody3: '3,7',\n\t\t\ttail: '4,7',\n\t\t},\n\t\tcarrier: { head: '6,9', body1: '7,9', body2: '8,9', tail: '9,9' },\n\t\tbattleship: { head: '7,2', body: '7,3', tail: '7,4' },\n\t\tdestroyers: [\n\t\t\t{ head: '0,2', tail: '0,3' },\n\t\t\t{ head: '3,1', tail: '3,2' },\n\t\t],\n\t\tfrigates: [{ body: '3,4' }, { body: '9,6' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '8,1',\n\t\t\tbody1: '8,2',\n\t\t\tbody2: '8,3',\n\t\t\tbody3: '8,4',\n\t\t\ttail: '8,5',\n\t\t},\n\t\tcarrier: { head: '0,5', body1: '0,6', body2: '0,7', tail: '0,8' },\n\t\tbattleship: { head: '6,6', body: '6,7', tail: '6,8' },\n\t\tdestroyers: [\n\t\t\t{ head: '1,1', tail: '1,2' },\n\t\t\t{ head: '3,1', tail: '3,2' },\n\t\t],\n\t\tfrigates: [{ body: '5,2' }, { body: '3,5' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '0,8',\n\t\t\tbody1: '1,8',\n\t\t\tbody2: '2,8',\n\t\t\tbody3: '3,8',\n\t\t\ttail: '4,8',\n\t\t},\n\t\tcarrier: { head: '6,1', body1: '7,1', body2: '8,1', tail: '9,1' },\n\t\tbattleship: { head: '0,3', body: '1,3', tail: '2,3' },\n\t\tdestroyers: [\n\t\t\t{ head: '8,8', tail: '9,8' },\n\t\t\t{ head: '1,5', tail: '2,5' },\n\t\t],\n\t\tfrigates: [{ body: '8,3' }, { body: '8,5' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '1,1',\n\t\t\tbody1: '2,1',\n\t\t\tbody2: '3,1',\n\t\t\tbody3: '4,1',\n\t\t\ttail: '5,1',\n\t\t},\n\t\tcarrier: { head: '0,3', body1: '0,4', body2: '0,5', tail: '0,6' },\n\t\tbattleship: { head: '8,3', body: '8,4', tail: '8,5' },\n\t\tdestroyers: [\n\t\t\t{ head: '3,3', tail: '3,4' },\n\t\t\t{ head: '3,7', tail: '3,8' },\n\t\t],\n\t\tfrigates: [{ body: '8,0' }, { body: '6,9' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '0,8',\n\t\t\tbody1: '1,8',\n\t\t\tbody2: '2,8',\n\t\t\tbody3: '3,8',\n\t\t\ttail: '4,8',\n\t\t},\n\t\tcarrier: { head: '6,1', body1: '7,1', body2: '8,1', tail: '9,1' },\n\t\tbattleship: { head: '0,0', body: '0,1', tail: '0,2' },\n\t\tdestroyers: [\n\t\t\t{ head: '9,8', tail: '9,9' },\n\t\t\t{ head: '7,6', tail: '7,7' },\n\t\t],\n\t\tfrigates: [{ body: '9,4' }, { body: '5,4' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '9,0',\n\t\t\tbody1: '9,1',\n\t\t\tbody2: '9,2',\n\t\t\tbody3: '9,3',\n\t\t\ttail: '9,4',\n\t\t},\n\t\tcarrier: { head: '3,3', body1: '3,4', body2: '3,5', tail: '3,6' },\n\t\tbattleship: { head: '0,7', body: '0,8', tail: '0,9' },\n\t\tdestroyers: [\n\t\t\t{ head: '0,0', tail: '0,1' },\n\t\t\t{ head: '9,8', tail: '9,9' },\n\t\t],\n\t\tfrigates: [{ body: '5,4' }, { body: '3,9' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '2,3',\n\t\t\tbody1: '3,3',\n\t\t\tbody2: '4,3',\n\t\t\tbody3: '5,3',\n\t\t\ttail: '6,3',\n\t\t},\n\t\tcarrier: { head: '0,3', body1: '0,4', body2: '0,5', tail: '0,6' },\n\t\tbattleship: { head: '8,0', body: '8,1', tail: '8,2' },\n\t\tdestroyers: [\n\t\t\t{ head: '2,0', tail: '2,1' },\n\t\t\t{ head: '2,6', tail: '2,7' },\n\t\t],\n\t\tfrigates: [{ body: '7,6' }, { body: '7,8' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '2,9',\n\t\t\tbody1: '3,9',\n\t\t\tbody2: '4,9',\n\t\t\tbody3: '5,9',\n\t\t\ttail: '6,9',\n\t\t},\n\t\tcarrier: { head: '1,2', body1: '1,3', body2: '1,4', tail: '1,5' },\n\t\tbattleship: { head: '8,2', body: '8,3', tail: '8,4' },\n\t\tdestroyers: [\n\t\t\t{ head: '9,8', tail: '9,9' },\n\t\t\t{ head: '0,7', tail: '0,8' },\n\t\t],\n\t\tfrigates: [{ body: '5,3' }, { body: '3,5' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '2,5',\n\t\t\tbody1: '2,6',\n\t\t\tbody2: '2,7',\n\t\t\tbody3: '2,8',\n\t\t\ttail: '2,9',\n\t\t},\n\t\tcarrier: { head: '1,2', body1: '2,2', body2: '3,2', tail: '4,2' },\n\t\tbattleship: { head: '7,2', body: '7,3', tail: '7,4' },\n\t\tdestroyers: [\n\t\t\t{ head: '5,6', tail: '6,6' },\n\t\t\t{ head: '5,8', tail: '6,8' },\n\t\t],\n\t\tfrigates: [{ body: '0,0' }, { body: '9,9' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '4,3',\n\t\t\tbody1: '4,4',\n\t\t\tbody2: '4,5',\n\t\t\tbody3: '4,6',\n\t\t\ttail: '4,7',\n\t\t},\n\t\tcarrier: { head: '3,9', body1: '4,9', body2: '5,9', tail: '6,9' },\n\t\tbattleship: { head: '3,0', body: '4,0', tail: '5,0' },\n\t\tdestroyers: [\n\t\t\t{ head: '0,1', tail: '0,2' },\n\t\t\t{ head: '0,8', tail: '0,9' },\n\t\t],\n\t\tfrigates: [{ body: '7,3' }, { body: '7,6' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '9,0',\n\t\t\tbody1: '9,1',\n\t\t\tbody2: '9,2',\n\t\t\tbody3: '9,3',\n\t\t\ttail: '9,4',\n\t\t},\n\t\tcarrier: { head: '5,2', body1: '5,3', body2: '5,4', tail: '5,5' },\n\t\tbattleship: { head: '7,1', body: '7,2', tail: '7,3' },\n\t\tdestroyers: [\n\t\t\t{ head: '9,8', tail: '9,9' },\n\t\t\t{ head: '7,7', tail: '7,8' },\n\t\t],\n\t\tfrigates: [{ body: '1,1' }, { body: '1,3' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '2,6',\n\t\t\tbody1: '3,6',\n\t\t\tbody2: '4,6',\n\t\t\tbody3: '5,6',\n\t\t\ttail: '6,6',\n\t\t},\n\t\tcarrier: { head: '2,1', body1: '2,2', body2: '2,3', tail: '2,4' },\n\t\tbattleship: { head: '8,6', body: '8,7', tail: '8,8' },\n\t\tdestroyers: [\n\t\t\t{ head: '5,2', tail: '5,3' },\n\t\t\t{ head: '7,1', tail: '7,2' },\n\t\t],\n\t\tfrigates: [{ body: '0,9' }, { body: '5,8' }],\n\t},\n\t{\n\t\tsuperdreadnought: {\n\t\t\thead: '6,3',\n\t\t\tbody1: '6,4',\n\t\t\tbody2: '6,5',\n\t\t\tbody3: '6,6',\n\t\t\ttail: '6,7',\n\t\t},\n\t\tcarrier: { head: '1,5', body1: '2,5', body2: '3,5', tail: '4,5' },\n\t\tbattleship: { head: '4,1', body: '4,2', tail: '4,3' },\n\t\tdestroyers: [\n\t\t\t{ head: '1,1', tail: '1,2' },\n\t\t\t{ head: '8,1', tail: '8,2' },\n\t\t],\n\t\tfrigates: [{ body: '1,8' }, { body: '5,8' }],\n\t},\n]\n","import {\n\taddEvtListener,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from '../utilities/elementCreators'\nimport { NodesDiv } from '../utilities/types'\nimport { handlePlayerClickOnCompMisses } from './handlePlayerClickOnCompMisses'\nimport { handlePlayerClickOnCompShips } from './handlePlayerClickOnCompShips'\nimport { shipNames } from '../data/shipNames'\nimport { randomizeAndStoreShipNames } from '../components/randomizeAndStoreShipNames'\nimport { renderCompBoard } from '../components/renderCompBoard'\nimport { placeCompShipsOnBoard } from '../components/placeCompShipsOnBoard'\nimport { compShipsPlacementChoicesArr } from '../data/compShipsPlacementChoicesArr'\n\nconst handleStartButtonClick = function (this: HTMLButtonElement, ev: MouseEvent) {\n\t//removes the previous info screen\n\tconst infoScreenWrapper = document.querySelector('.infoScreen-wrapper')\n\tinfoScreenWrapper?.remove()\n\n\t//removes the ship bttns wrapper\n\tconst shipBttnsWrapper = document.querySelector('.shipBttns-wrapper')\n\tshipBttnsWrapper?.remove()\n\n\t//remove the start button\n\tthis.remove()\n\n\t//renders comp board and place the ships\n\trenderCompBoard()\n\tplaceCompShipsOnBoard(compShipsPlacementChoicesArr)\n\n\t//randomizes and store ship names for each battle\n\trandomizeAndStoreShipNames(shipNames)\n\n\tif (!localStorage.getItem('isGameRunning')) {\n\t\tlocalStorage.setItem('isGameRunning', JSON.stringify(true))\n\t}\n\n\t//adds evt listeners to comp game board cells\n\tconst compShipPresentCells: NodesDiv = document.querySelectorAll('.compShipPresent')\n\tcompShipPresentCells.forEach((cell) =>\n\t\taddEvtListener('click')(handlePlayerClickOnCompShips)(cell)\n\t)\n\n\tconst compShipNotPresentCells: NodesDiv =\n\t\tdocument.querySelectorAll('.compShipNotPresent')\n\tcompShipNotPresentCells.forEach((cell) =>\n\t\taddEvtListener('click')(handlePlayerClickOnCompMisses)(cell)\n\t)\n\n\t//renders a new info screen for the battle texts\n\tconst main: HTMLElement | null = document.querySelector('.main')\n\n\tpipe(appendElemToParent(main))(elemCreator('div')(['infoScreen-wrapper']))\n}\n\nexport { handleStartButtonClick }\n","import { ShipNamesPool } from '../utilities/types'\n\nconst randomizeAndStoreShipNames = function (shipNames_: ShipNamesPool) {\n\t//used to display a persistent (throughout the game round) name, that corresponds to the type of ship, that is displayed when a hit is registered\n\tif (!localStorage.getItem('playerShipNames')) {\n\t\tlocalStorage.setItem('playerShipNames', JSON.stringify([]))\n\t}\n\n\t//creates a randomized ship name per game session and stores it to be used for the battle messages\n\tObject.entries(shipNames_).forEach(([polity, shipTypes]) => {\n\t\tif (polity === 'haven') {\n\t\t\tconst havenShipNames = new Map()\n\n\t\t\tObject.entries(shipTypes).forEach(([shipType, shipNamesArr]) => {\n\t\t\t\t//need two names for destroyers and frigates\n\t\t\t\tif (shipType === 'destroyers' || shipType === 'frigates') {\n\t\t\t\t\tconst tempShipNamesArr = [\n\t\t\t\t\t\tshipNamesArr[Math.floor(Math.random() * shipNamesArr.length)],\n\t\t\t\t\t\tshipNamesArr[Math.floor(Math.random() * shipNamesArr.length)],\n\t\t\t\t\t]\n\n\t\t\t\t\thavenShipNames.set(shipType, tempShipNamesArr)\n\t\t\t\t} else {\n\t\t\t\t\t//only one name for superdreadnought, cruiser and battleship\n\t\t\t\t\thavenShipNames.set(\n\t\t\t\t\t\t//changes from plural to singular\n\t\t\t\t\t\tshipType.slice(0, -1),\n\t\t\t\t\t\tshipNamesArr[Math.floor(Math.random() * shipNamesArr.length)]\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tlocalStorage.setItem(\n\t\t\t\t'havenShipNames',\n\t\t\t\tJSON.stringify(Object.fromEntries(havenShipNames))\n\t\t\t)\n\t\t} else if (polity === 'manticore') {\n\t\t\tconst manticoreShipNames = new Map()\n\n\t\t\tObject.entries(shipTypes).forEach(([shipType, shipNamesArr]) => {\n\t\t\t\t//need two names for destroyers and frigates\n\t\t\t\tif (shipType === 'destroyers' || shipType === 'frigates') {\n\t\t\t\t\tconst tempShipNamesArr = [\n\t\t\t\t\t\tshipNamesArr[Math.floor(Math.random() * shipNamesArr.length)],\n\t\t\t\t\t\tshipNamesArr[Math.floor(Math.random() * shipNamesArr.length)],\n\t\t\t\t\t]\n\n\t\t\t\t\tmanticoreShipNames.set(shipType, tempShipNamesArr)\n\t\t\t\t} else {\n\t\t\t\t\t//only one name for superdreadnought, cruiser and battleship\n\t\t\t\t\tmanticoreShipNames.set(\n\t\t\t\t\t\tshipType.slice(0, -1),\n\t\t\t\t\t\tshipNamesArr[Math.floor(Math.random() * shipNamesArr.length)]\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tlocalStorage.setItem(\n\t\t\t\t'manticoreShipNames',\n\t\t\t\tJSON.stringify(Object.fromEntries(manticoreShipNames))\n\t\t\t)\n\t\t}\n\t})\n}\nexport { randomizeAndStoreShipNames }\n","import { handleStartButtonClick } from '../events/handleStartButtonClick'\nimport {\n\taddAttributeToElem,\n\taddEvtListener,\n\taddTextToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from '../utilities/elementCreators'\nimport { Button, Div } from '../utilities/types'\n\nconst renderStartButton = function () {\n\t//removes the ship selection buttons\n\tconst shipsBttnContainer: Div = document.querySelector('.shipsBttn-container')\n\tshipsBttnContainer?.remove()\n\t//removes axis selection button\n\tconst axisSelectorBttn: Button = document.querySelector('.bttn-axisSelector')\n\taxisSelectorBttn?.remove()\n\n\tconst shipBttnsWrapper: Div = document.querySelector('.shipBttns-wrapper')\n\n\t//renders start game button\n\tpipe(\n\t\taddTextToElem('Engage!'),\n\t\taddAttributeToElem([\n\t\t\t['type', 'button'],\n\t\t\t['value', 'start'],\n\t\t]),\n\t\taddEvtListener('click')(handleStartButtonClick),\n\t\tappendElemToParent(shipBttnsWrapper)\n\t)(elemCreator('button')(['bttn', 'bttn-startGame']))\n}\nexport { renderStartButton }\n","import { CompShipsPlacementChoice } from '../utilities/types'\nimport { renderStarsInPlayerBoard } from './renderStarsInPlayerBoard'\nimport { renderStartButton } from './renderStartButton'\n\nconst checkAllShipsInPlace = function () {\n\t//if playerShip co-ordinates does not exist, create it to check its length which is the sum total of length of all player ships\n\tif (localStorage.getItem('playerShipsCoords')) {\n\t\tconst shipsCoordsArr = JSON.parse(localStorage.getItem('playerShipsCoords') ?? '')\n\n\t\t//if all the player ships have been placed\n\t\tif (shipsCoordsArr.length === 18) {\n\t\t\t//adds stars to player board\n\t\t\trenderStarsInPlayerBoard()\n\t\t\t//STARTS GAME\n\t\t\trenderStartButton()\n\t\t}\n\t}\n}\nexport { checkAllShipsInPlace }\n","import { addAttributeToElem, addTextToElem, pipe } from '../utilities/elementCreators'\nimport { NodesDiv } from '../utilities/types'\n\nconst renderStarsInPlayerBoard = function () {\n\tconst playerGameCell: NodesDiv = document.querySelectorAll('.player-gameCell')\n\n\t//adds stars and a corresponding class to differentiate the cells which do not consist of a player ship\n\tplayerGameCell.forEach((cell) => {\n\t\tif (!cell.classList.contains('playerShipPresent')) {\n\t\t\tpipe(\n\t\t\t\taddTextToElem('✴'),\n\t\t\t\taddAttributeToElem([['class', 'player-gameCell playerShipNotPresent']])\n\t\t\t)(cell)\n\t\t}\n\t})\n}\nexport { renderStarsInPlayerBoard }\n","const doesShipPlacementOverlap = function (\n\tshipLength_: number,\n\tcurrentAxis_: string,\n\tcurrentX_: string,\n\tcurrentY_: string\n) {\n\t//initializes on first call for overlap detection\n\tif (!localStorage.getItem('playerShipsCoords')) {\n\t\tlocalStorage.setItem('playerShipsCoords', JSON.stringify([]))\n\t}\n\tconst playerShipsCoords: string[] = JSON.parse(\n\t\tlocalStorage.getItem('playerShipsCoords') ?? ''\n\t)\n\n\tif (currentAxis_ === 'Axis-X') {\n\t\tfor (let i = 0; i < shipLength_; i += 1) {\n\t\t\t//overlap detection\n\t\t\tif (playerShipsCoords.includes(`${Number(currentX_) + i},${currentY_}`)) {\n\t\t\t\talert(\n\t\t\t\t\t'A ship is already present at these coordinates. Please choose another area.'\n\t\t\t\t)\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t} else if (currentAxis_ === 'Axis-Y') {\n\t\tfor (let i = 0; i < shipLength_; i += 1) {\n\t\t\tif (playerShipsCoords.includes(`${currentX_},${Number(currentY_) + i}`)) {\n\t\t\t\talert(\n\t\t\t\t\t'A ship is already present at these coordinates. Please choose another area.'\n\t\t\t\t)\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n}\nexport { doesShipPlacementOverlap }\n","const isCorrectNumberOfShips = function (\n\tship_: string,\n\tamount_: string\n): boolean | undefined {\n\t//capitalizes first letters\n\tconst ship = ship_[0].toUpperCase() + ship_.slice(1)\n\tconst amount = amount_[0].toUpperCase() + amount_.slice(1)\n\n\tif (amount_ === 'single') {\n\t\t// for persistent state and enforces single ship\n\t\tif (!localStorage.getItem(`is${amount}${ship}`)) {\n\t\t\tlocalStorage.setItem(`is${amount}${ship}`, JSON.stringify(true))\n\t\t}\n\t\treturn true\n\t} else if (amount_ === 'double') {\n\t\tconst shipObjArr: unknown[] = JSON.parse(localStorage.getItem(`${ship_}`) ?? '')\n\n\t\tif (shipObjArr.length < 2) {\n\t\t\t// for persistent state and enforces double ships\n\t\t\tif (!localStorage.getItem(`is${amount}${ship}`)) {\n\t\t\t\tlocalStorage.setItem(`is${amount}${ship}`, JSON.stringify(true))\n\t\t\t}\n\t\t\treturn true\n\t\t} else if (shipObjArr.length === 2) {\n\t\t\tlocalStorage.setItem(`is${amount}${ship}`, JSON.stringify(false))\n\t\t\treturn false\n\t\t}\n\t}\n}\n\nexport { isCorrectNumberOfShips }\n","import { Div } from '../utilities/types'\nimport { addTextToElem, addStyleToElem, pipe } from '../utilities/elementCreators'\n\nconst handleBattleshipMouseEnter = function (this: HTMLDivElement, ev: MouseEvent) {\n\t//grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector')\n\tconst currentAxis = axisSelector?.textContent\n\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 3; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t)\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('B'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 3; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t)\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('B'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t}\n}\nexport { handleBattleshipMouseEnter }\n","import { Div } from '../utilities/types'\nimport { addStyleToElem, pipe } from '../utilities/elementCreators'\n\nconst handleBattleshipMouseLeave = function (this: HTMLDivElement, ev: MouseEvent) {\n\t//grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector')\n\tconst currentAxis = axisSelector?.textContent\n\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 3; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t)\n\n\t\t\t//avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = ''\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 3; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t)\n\n\t\t\t//avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = ''\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t}\n}\nexport { handleBattleshipMouseLeave }\n","import { addStyleToElem, addTextToElem, pipe } from '../utilities/elementCreators'\nimport { Div } from '../utilities/types'\n\nconst handleCarrierMouseEnter = function (this: HTMLDivElement, ev: MouseEvent) {\n\t//grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector')\n\tconst currentAxis = axisSelector?.textContent\n\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 4; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t)\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('C'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 4; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t)\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('C'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t}\n}\nexport { handleCarrierMouseEnter }\n","import { addStyleToElem, pipe } from '../utilities/elementCreators'\nimport { Div } from '../utilities/types'\n\nconst handleCarrierMouseLeave = function (this: HTMLDivElement, ev: MouseEvent) {\n\t//grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector')\n\tconst currentAxis = axisSelector?.textContent\n\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 4; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t)\n\n\t\t\t//avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = ''\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 4; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t)\n\n\t\t\t//avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = ''\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t}\n}\nexport { handleCarrierMouseLeave }\n","import { Div } from '../utilities/types'\nimport { addTextToElem, addStyleToElem, pipe } from '../utilities/elementCreators'\n\nconst handleDestroyerMouseEnter = function (this: HTMLDivElement, ev: MouseEvent) {\n\t//grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector')\n\tconst currentAxis = axisSelector?.textContent\n\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 2; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t)\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('D'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 2; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t)\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('D'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t}\n}\nexport { handleDestroyerMouseEnter }\n","import { Div } from '../utilities/types'\nimport { addStyleToElem, pipe } from '../utilities/elementCreators'\n\nconst handleDestroyerMouseLeave = function (this: HTMLDivElement, ev: MouseEvent) {\n\t//grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector')\n\tconst currentAxis = axisSelector?.textContent\n\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 2; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t)\n\n\t\t\t//avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = ''\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 2; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t)\n\n\t\t\t//avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = ''\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t}\n}\nexport { handleDestroyerMouseLeave }\n","import { Div } from '../utilities/types'\nimport { addTextToElem, addStyleToElem, pipe } from '../utilities/elementCreators'\n\nconst handleFrigateMouseEnter = function (this: HTMLDivElement, ev: MouseEvent) {\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//changes cell on hover\n\tconst nextCell: Div = document.querySelector(\n\t\t`[data-cellplayer=\"${currentX},${currentY}\"]`\n\t)\n\n\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\tpipe(\n\t\t\taddTextToElem('F'),\n\t\t\taddStyleToElem([\n\t\t\t\t['color', '#f0a400'],\n\t\t\t\t['cursor', 'crosshair'],\n\t\t\t])\n\t\t)(nextCell)\n\t}\n}\nexport { handleFrigateMouseEnter }\n","import { Div } from '../utilities/types'\nimport { addStyleToElem, pipe } from '../utilities/elementCreators'\n\nconst handleFrigateMouseLeave = function (this: HTMLDivElement, ev: MouseEvent) {\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//changes cell on hover\n\tconst nextCell: Div = document.querySelector(\n\t\t`[data-cellplayer=\"${currentX},${currentY}\"]`\n\t)\n\n\t//avoids changing cells of ships already present\n\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\tif (nextCell) nextCell.textContent = ''\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'default'],\n\t\t\t])\n\t\t)(nextCell)\n\t}\n}\nexport { handleFrigateMouseLeave }\n","import { Div } from '../utilities/types'\nimport { addTextToElem, addStyleToElem, pipe } from '../utilities/elementCreators'\n\nconst handleSuperdreadnoughtMouseEnter = function (this: HTMLDivElement, ev: MouseEvent) {\n\t//grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector')\n\tconst currentAxis = axisSelector?.textContent\n\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 5; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t)\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('S'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 5; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t)\n\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tpipe(\n\t\t\t\t\taddTextToElem('S'),\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t\t['cursor', 'crosshair'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t}\n}\nexport { handleSuperdreadnoughtMouseEnter }\n","import { Div } from '../utilities/types'\nimport { addStyleToElem, pipe } from '../utilities/elementCreators'\n\nconst handleSuperdreadnoughtMouseLeave = function (this: HTMLDivElement, ev: MouseEvent) {\n\t//grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector')\n\tconst currentAxis = axisSelector?.textContent\n\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//changes consecutive cells in corresponding axes on hover\n\tif (currentAxis === 'Axis-X') {\n\t\tfor (let i = 0; i < 5; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t)\n\n\t\t\t//avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = ''\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t} else if (currentAxis === 'Axis-Y') {\n\t\tfor (let i = 0; i < 5; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t)\n\n\t\t\t//avoids changing cells of ships already present\n\t\t\tif (!nextCell?.classList.contains('playerShipPresent')) {\n\t\t\t\tif (nextCell) nextCell.textContent = ''\n\t\t\t\tpipe(\n\t\t\t\t\taddStyleToElem([\n\t\t\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t\t])\n\t\t\t\t)(nextCell)\n\t\t\t}\n\t\t}\n\t}\n}\nexport { handleSuperdreadnoughtMouseLeave }\n","import { accumulatePlayerShipCoords } from '../components/accumulatePlayerShipCoords'\nimport { checkAllShipsInPlace } from '../components/checkAllShipsInPlace'\nimport { doesShipPlacementOverlap } from '../components/doesShipPlacementOverlap'\nimport { isCorrectNumberOfShips } from '../components/isCorrectNumberOfShips'\nimport {\n\taddStyleToElem,\n\tpipe,\n\taddTextToElem,\n\taddAttributeToElem,\n\taddEvtListener,\n\tremoveEvtListener,\n} from '../utilities/elementCreators'\nimport { Button, Div, NodesDiv, Superdreadnought } from '../utilities/types'\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick'\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick'\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick'\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick'\nimport { handleSuperdreadnoughtMouseEnter } from './handleSuperdreadnoughtMouseEnter'\nimport { handleSuperdreadnoughtMouseLeave } from './handleSuperdreadnoughtMouseLeave'\n\nconst handleSuperdreadnoughtCellClick = function (this: HTMLDivElement, ev: MouseEvent) {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell')\n\n\t//grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector')\n\tconst currentAxis = axisSelector?.textContent\n\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//initializes the carrier object upon first call\n\tif (!localStorage.getItem('superdreadnought')) {\n\t\tlocalStorage.setItem('superdreadnought', JSON.stringify(''))\n\t}\n\n\tlet superdreadnought: Superdreadnought = JSON.parse(\n\t\tlocalStorage.getItem('superdreadnought') ?? ''\n\t)\n\n\tconst superdreadnoughtCoords: string[] = []\n\n\tconst ship = 'superdreadnought'\n\tconst amount = 'single'\n\n\t//for horizontal placement\n\tif (currentAxis === 'Axis-X' && isCorrectNumberOfShips(ship, amount)) {\n\t\t//grid boundary detection\n\t\tif (Number(currentX) > 5) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)')\n\t\t\treturn null\n\t\t}\n\n\t\t//overlap detection\n\t\tif (doesShipPlacementOverlap(5, currentAxis, currentX, currentY)) return null\n\n\t\t//places superdreadnought on the grid\n\t\tfor (let i = 0; i < 5; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t)\n\t\t\t//prevents duplicate letters being placed\n\t\t\tif (nextCell) nextCell.textContent = ''\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('S')\n\t\t\t)(nextCell)\n\n\t\t\tsuperdreadnoughtCoords.push(`${Number(currentX) + i},${currentY}`)\n\t\t}\n\n\t\t//prevents updating after first click\n\t\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t\t//updates superdreadnought object attributes\n\t\t\tsuperdreadnought = {\n\t\t\t\thead: superdreadnoughtCoords[0],\n\t\t\t\tbody1: superdreadnoughtCoords[1],\n\t\t\t\tbody2: superdreadnoughtCoords[2],\n\t\t\t\tbody3: superdreadnoughtCoords[3],\n\t\t\t\ttail: superdreadnoughtCoords[4],\n\t\t\t}\n\t\t}\n\n\t\tlocalStorage.setItem('isSingleSuperdreadnought', JSON.stringify(false))\n\t} //for vertical placement\n\telse if (currentAxis === 'Axis-Y' && isCorrectNumberOfShips(ship, 'single')) {\n\t\t//grid boundary detection\n\t\tif (Number(currentY) > 5) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)')\n\t\t\treturn null\n\t\t}\n\n\t\t//overlap detection\n\t\tif (doesShipPlacementOverlap(5, currentAxis, currentX, currentY)) return null\n\n\t\t//places superdreadnought on the grid\n\t\tfor (let i = 0; i < 5; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t)\n\n\t\t\t//prevents duplicate letters being placed\n\t\t\tif (nextCell) nextCell.textContent = ''\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('S')\n\t\t\t)(nextCell)\n\n\t\t\tsuperdreadnoughtCoords.push(`${currentX},${Number(currentY) + i}`)\n\t\t}\n\n\t\t//prevents updating after first click\n\t\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t\t//updates superdreadnought object attributes\n\t\t\tsuperdreadnought = {\n\t\t\t\thead: superdreadnoughtCoords[0],\n\t\t\t\tbody1: superdreadnoughtCoords[1],\n\t\t\t\tbody2: superdreadnoughtCoords[2],\n\t\t\t\tbody3: superdreadnoughtCoords[3],\n\t\t\t\ttail: superdreadnoughtCoords[4],\n\t\t\t}\n\t\t}\n\n\t\tlocalStorage.setItem('isSingleSuperdreadnought', JSON.stringify(false))\n\t}\n\n\t//stores superdreadnought\n\tlocalStorage.setItem('superdreadnought', JSON.stringify(superdreadnought))\n\n\t//stores current ship coords to pool of all ship coords\n\taccumulatePlayerShipCoords(superdreadnoughtCoords)\n\n\tif (isCorrectNumberOfShips(ship, amount) === true) {\n\t\t//after 'this' button has been clicked, sets the color to grey to visually indicate finished\n\t\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought')\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t])\n\t\t)(superdreadnoughtBttn)\n\n\t\t//enables events on other shipButtons after superdreadnought has been placed and sets color to green to visually indicate that they can be clicked if they have not been previously disabled after a click\n\t\tconst carrierBttn: Button = document.querySelector('.bttn-carrier')\n\t\tif (carrierBttn && carrierBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleCarrierBttnClick)\n\t\t\t)(carrierBttn)\n\n\t\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship')\n\t\tif (battleshipBttn && battleshipBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleBattleshipBttnClick)\n\t\t\t)(battleshipBttn)\n\n\t\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer')\n\t\tif (destroyerBttn && destroyerBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleDestroyerBttnClick)\n\t\t\t)(destroyerBttn)\n\n\t\tconst frigateBttn: Button = document.querySelector('.bttn-frigate')\n\t\tif (frigateBttn && frigateBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleFrigateBttnClick)\n\t\t\t)(frigateBttn)\n\n\t\t//removes event listeners after single superdreadnought has been placed\n\t\tplayerGameCells.forEach((player) => {\n\t\t\tpipe(\n\t\t\t\tremoveEvtListener('click')(handleSuperdreadnoughtCellClick),\n\t\t\t\tremoveEvtListener('mouseenter')(handleSuperdreadnoughtMouseEnter),\n\t\t\t\tremoveEvtListener('mouseleave')(handleSuperdreadnoughtMouseLeave)\n\t\t\t)(player)\n\t\t})\n\t}\n\n\t//if all ships placed, renders start button\n\tcheckAllShipsInPlace()\n}\nexport { handleSuperdreadnoughtCellClick }\n","import { Button, Div, NodesDiv } from '../utilities/types'\nimport {\n\taddEvtListener,\n\taddStyleToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../utilities/elementCreators'\nimport { handleSuperdreadnoughtCellClick } from './handleSuperdreadnoughtCellClick'\nimport { handleSuperdreadnoughtMouseEnter } from './handleSuperdreadnoughtMouseEnter'\nimport { handleSuperdreadnoughtMouseLeave } from './handleSuperdreadnoughtMouseLeave'\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick'\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick'\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick'\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick'\n\nconst handleSuperdreadnoughtBttnClick = function (\n\tthis: HTMLButtonElement,\n\tev: MouseEvent\n) {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell')\n\n\t//disables this button after clicking\n\tthis.disabled = true\n\n\t//visually indicates that 'this' button is selected\n\tpipe(\n\t\taddStyleToElem([\n\t\t\t['border', '1px solid #f0a400'],\n\t\t\t['color', '#f0a400'],\n\t\t])\n\t)(this)\n\n\t//disables clicking on other shipButtons while selected\n\t//prevents double selection\n\tconst carrierBttn: Button = document.querySelector('.bttn-carrier')\n\tif (carrierBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleCarrierBttnClick)\n\t\t)(carrierBttn)\n\n\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship')\n\tif (battleshipBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleBattleshipBttnClick)\n\t\t)(battleshipBttn)\n\n\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer')\n\tif (destroyerBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleDestroyerBttnClick)\n\t\t)(destroyerBttn)\n\n\tconst frigateBttn: Button = document.querySelector('.bttn-frigate')\n\tif (frigateBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleFrigateBttnClick)\n\t\t)(frigateBttn)\n\n\t//assigns event listeners to each player game cell after clicking superdreadnought button\n\tplayerGameCells.forEach((player) =>\n\t\tpipe(\n\t\t\taddEvtListener('click')(handleSuperdreadnoughtCellClick),\n\t\t\taddEvtListener('mouseenter')(handleSuperdreadnoughtMouseEnter),\n\t\t\taddEvtListener('mouseleave')(handleSuperdreadnoughtMouseLeave)\n\t\t)(player)\n\t)\n}\nexport { handleSuperdreadnoughtBttnClick }\n","import { accumulatePlayerShipCoords } from '../components/accumulatePlayerShipCoords'\nimport { checkAllShipsInPlace } from '../components/checkAllShipsInPlace'\nimport { doesShipPlacementOverlap } from '../components/doesShipPlacementOverlap'\nimport { isCorrectNumberOfShips } from '../components/isCorrectNumberOfShips'\nimport {\n\taddAttributeToElem,\n\taddStyleToElem,\n\taddTextToElem,\n\tremoveEvtListener,\n\tpipe,\n\taddEvtListener,\n} from '../utilities/elementCreators'\nimport { Div, NodesDiv, Frigate, NodesBttn, Button } from '../utilities/types'\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick'\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick'\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick'\nimport { handleFrigateMouseEnter } from './handleFrigateMouseEnter'\nimport { handleFrigateMouseLeave } from './handleFrigateMouseLeave'\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick'\n\nconst handleFrigateCellClick = function (this: HTMLDivElement, ev: MouseEvent) {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell')\n\n\t//grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector')\n\tconst currentAxis = axisSelector?.textContent ?? ''\n\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//initializes the ship object upon first call\n\tif (!localStorage.getItem('frigate')) {\n\t\tlocalStorage.setItem('frigate', JSON.stringify([]))\n\t}\n\tconst frigate: Frigate[] = JSON.parse(localStorage.getItem('frigate') ?? '')\n\n\tconst frigateCoords: string[] = []\n\n\tconst ship = 'frigate'\n\tconst amount = 'double'\n\n\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t//overlap detection\n\t\tif (doesShipPlacementOverlap(1, currentAxis, currentX, currentY)) return null\n\n\t\t//places frigate on the grid\n\t\tconst nextCell: Div = document.querySelector(\n\t\t\t`[data-cellplayer=\"${currentX},${currentY}\"]`\n\t\t)\n\t\t//prevents duplicate letters being placed\n\t\tif (nextCell) nextCell.textContent = ''\n\n\t\tpipe(\n\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\taddStyleToElem([\n\t\t\t\t['color', '#f0a400'],\n\t\t\t\t['cursor', 'default'],\n\t\t\t]),\n\t\t\taddTextToElem('F')\n\t\t)(nextCell)\n\n\t\tfrigateCoords.push(`${currentX},${currentY}`)\n\n\t\t//only updates if there are 2 or less ships\n\t\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t\tfrigate.push({ body: frigateCoords[0] })\n\t\t}\n\t} else if (isCorrectNumberOfShips(ship, amount) === false) {\n\t\treturn null\n\t}\n\n\t//stores frigate\n\tlocalStorage.setItem('frigate', JSON.stringify(frigate))\n\n\t//stores current ship coords to pool of all ship coords\n\taccumulatePlayerShipCoords(frigateCoords)\n\n\tif (isCorrectNumberOfShips(ship, amount) === false) {\n\t\t//after 'this' button has been clicked, sets the color to grey to visually indicate finished\n\t\tconst frigateBttn: Button = document.querySelector('.bttn-frigate')\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t])\n\t\t)(frigateBttn)\n\n\t\t//enables events on other shipButtons after both frigates have been placed and sets color to green to visually indicate that they can be clicked if they have not been previously disabled after a click\n\t\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought')\n\t\tif (superdreadnoughtBttn && superdreadnoughtBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t\t)(superdreadnoughtBttn)\n\n\t\tconst carrierBttn: Button = document.querySelector('.bttn-carrier')\n\t\tif (carrierBttn && carrierBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleCarrierBttnClick)\n\t\t\t)(carrierBttn)\n\n\t\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship')\n\t\tif (battleshipBttn && battleshipBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleBattleshipBttnClick)\n\t\t\t)(battleshipBttn)\n\n\t\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer')\n\t\tif (destroyerBttn && destroyerBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleDestroyerBttnClick)\n\t\t\t)(destroyerBttn)\n\n\t\t//removes event listeners after both frigates have been placed\n\t\tplayerGameCells.forEach((player) => {\n\t\t\tpipe(\n\t\t\t\tremoveEvtListener('click')(handleFrigateCellClick),\n\t\t\t\tremoveEvtListener('mouseenter')(handleFrigateMouseEnter),\n\t\t\t\tremoveEvtListener('mouseleave')(handleFrigateMouseLeave)\n\t\t\t)(player)\n\t\t})\n\t}\n\n\t//if all ships placed, renders start button\n\tcheckAllShipsInPlace()\n}\n\nexport { handleFrigateCellClick }\n","import { Button, Div, NodesDiv } from '../utilities/types'\nimport {\n\taddEvtListener,\n\taddStyleToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../utilities/elementCreators'\nimport { handleFrigateCellClick } from './handleFrigateCellClick'\nimport { handleFrigateMouseEnter } from './handleFrigateMouseEnter'\nimport { handleFrigateMouseLeave } from './handleFrigateMouseLeave'\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick'\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick'\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick'\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick'\n\nconst handleFrigateBttnClick = function (this: HTMLButtonElement, ev: MouseEvent) {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell')\n\n\t//disables this button after clicking\n\tthis.disabled = true\n\n\t//visually indicates that 'this' button is selected\n\tpipe(\n\t\taddStyleToElem([\n\t\t\t['border', '1px solid #f0a400'],\n\t\t\t['color', '#f0a400'],\n\t\t])\n\t)(this)\n\n\t//disables events on other shipButtons while selected\n\t//prevents double selection\n\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought')\n\tif (superdreadnoughtBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t)(superdreadnoughtBttn)\n\n\tconst carrierBttn: Button = document.querySelector('.bttn-carrier')\n\tif (carrierBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleCarrierBttnClick)\n\t\t)(carrierBttn)\n\n\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship')\n\tif (battleshipBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleBattleshipBttnClick)\n\t\t)(battleshipBttn)\n\n\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer')\n\tif (destroyerBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleDestroyerBttnClick)\n\t\t)(destroyerBttn)\n\n\t//assigns event listeners to each player game cell after clicking destroyer button\n\tplayerGameCells.forEach((player) =>\n\t\tpipe(\n\t\t\taddEvtListener('click')(handleFrigateCellClick),\n\t\t\taddEvtListener('mouseenter')(handleFrigateMouseEnter),\n\t\t\taddEvtListener('mouseleave')(handleFrigateMouseLeave)\n\t\t)(player)\n\t)\n}\nexport { handleFrigateBttnClick }\n","import { accumulatePlayerShipCoords } from '../components/accumulatePlayerShipCoords'\nimport { checkAllShipsInPlace } from '../components/checkAllShipsInPlace'\nimport { doesShipPlacementOverlap } from '../components/doesShipPlacementOverlap'\nimport { isCorrectNumberOfShips } from '../components/isCorrectNumberOfShips'\nimport {\n\taddStyleToElem,\n\taddTextToElem,\n\taddAttributeToElem,\n\tremoveEvtListener,\n\tpipe,\n\taddEvtListener,\n} from '../utilities/elementCreators'\nimport { Div, NodesDiv, Destroyer, Button } from '../utilities/types'\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick'\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick'\nimport { handleDestroyerMouseEnter } from './handleDestroyerMouseEnter'\nimport { handleDestroyerMouseLeave } from './handleDestroyerMouseLeave'\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick'\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick'\n\nconst handleDestroyerCellClick = function (this: HTMLDivElement, ev: MouseEvent) {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell')\n\n\t//grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector')\n\tconst currentAxis = axisSelector?.textContent\n\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//initializes the ship object upon first call\n\tif (!localStorage.getItem('destroyer')) {\n\t\tlocalStorage.setItem('destroyer', JSON.stringify([]))\n\t}\n\tconst destroyer: Destroyer[] = JSON.parse(localStorage.getItem('destroyer') ?? '')\n\n\tconst destroyerCoords: string[] = []\n\n\tconst ship = 'destroyer'\n\tconst amount = 'double'\n\n\t//for horizontal placement\n\tif (currentAxis === 'Axis-X' && isCorrectNumberOfShips(ship, amount)) {\n\t\t//grid boundary detection\n\t\tif (Number(currentX) > 8) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)')\n\t\t\treturn null\n\t\t}\n\n\t\t//overlap detection\n\t\tif (doesShipPlacementOverlap(2, currentAxis, currentX, currentY)) return null\n\n\t\t//places destroyer on the grid\n\t\tfor (let i = 0; i < 2; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t)\n\t\t\t//prevents duplicate letters being placed\n\t\t\tif (nextCell) nextCell.textContent = ''\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('D')\n\t\t\t)(nextCell)\n\n\t\t\tdestroyerCoords.push(`${Number(currentX) + i},${currentY}`)\n\t\t}\n\n\t\t//only updates if there are 2 or less ships\n\t\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t\tdestroyer.push({ head: destroyerCoords[0], tail: destroyerCoords[1] })\n\t\t}\n\t} //for vertical placement\n\telse if (currentAxis === 'Axis-Y' && isCorrectNumberOfShips(ship, amount)) {\n\t\t//grid boundary detection\n\t\tif (Number(currentY) > 8) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)')\n\t\t\treturn null\n\t\t}\n\n\t\t//overlap detection\n\t\tif (doesShipPlacementOverlap(2, currentAxis, currentX, currentY)) return null\n\n\t\tfor (let i = 0; i < 2; i += 1) {\n\t\t\t//places destroyer on the grid\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t)\n\t\t\t//prevents duplicate letters being placed\n\t\t\tif (nextCell) nextCell.textContent = ''\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('D')\n\t\t\t)(nextCell)\n\n\t\t\tdestroyerCoords.push(`${currentX},${Number(currentY) + i}`)\n\t\t}\n\n\t\t//only updates if there are 2 or less ships\n\t\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t\tdestroyer.push({ head: destroyerCoords[0], tail: destroyerCoords[1] })\n\t\t}\n\t} else if (isCorrectNumberOfShips(ship, amount) === false) return null\n\n\t//stores destroyer\n\tlocalStorage.setItem('destroyer', JSON.stringify(destroyer))\n\n\t//stores current ship coords to pool of all ship coords\n\taccumulatePlayerShipCoords(destroyerCoords)\n\n\tif (isCorrectNumberOfShips(ship, amount) === false) {\n\t\t//after 'this' button has been clicked, sets the color to grey to visually indicate finished\n\t\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer')\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t])\n\t\t)(destroyerBttn)\n\n\t\t//enables events on other shipButtons after both destroyers have been placed and sets color to green to visually indicate that they can be clicked if they have not been previously disabled after a click\n\t\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought')\n\t\tif (superdreadnoughtBttn && superdreadnoughtBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t\t)(superdreadnoughtBttn)\n\n\t\tconst carrierBttn: Button = document.querySelector('.bttn-carrier')\n\t\tif (carrierBttn && carrierBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleCarrierBttnClick)\n\t\t\t)(carrierBttn)\n\n\t\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship')\n\t\tif (battleshipBttn && battleshipBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleBattleshipBttnClick)\n\t\t\t)(battleshipBttn)\n\n\t\tconst frigateBttn: Button = document.querySelector('.bttn-frigate')\n\t\tif (frigateBttn && frigateBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleFrigateBttnClick)\n\t\t\t)(frigateBttn)\n\n\t\t//removes event listeners after both destroyers have been placed\n\t\tplayerGameCells.forEach((player) => {\n\t\t\tpipe(\n\t\t\t\tremoveEvtListener('click')(handleDestroyerCellClick),\n\t\t\t\tremoveEvtListener('mouseenter')(handleDestroyerMouseEnter),\n\t\t\t\tremoveEvtListener('mouseleave')(handleDestroyerMouseLeave)\n\t\t\t)(player)\n\t\t})\n\t}\n\n\t//if all ships placed, renders start button\n\tcheckAllShipsInPlace()\n}\n\nexport { handleDestroyerCellClick }\n","import { Button, Div, NodesDiv } from '../utilities/types'\nimport {\n\taddEvtListener,\n\taddStyleToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../utilities/elementCreators'\nimport { handleDestroyerCellClick } from './handleDestroyerCellClick'\nimport { handleDestroyerMouseEnter } from './handleDestroyerMouseEnter'\nimport { handleDestroyerMouseLeave } from './handleDestroyerMouseLeave'\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick'\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick'\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick'\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick'\n\nconst handleDestroyerBttnClick = function (this: HTMLButtonElement, ev: MouseEvent) {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell')\n\n\t//assigns event listeners to each player game cell after clicking destroyer button\n\tplayerGameCells.forEach((player) =>\n\t\tpipe(\n\t\t\taddEvtListener('click')(handleDestroyerCellClick),\n\t\t\taddEvtListener('mouseenter')(handleDestroyerMouseEnter),\n\t\t\taddEvtListener('mouseleave')(handleDestroyerMouseLeave)\n\t\t)(player)\n\t)\n\n\t//disables this button after clicking\n\tthis.disabled = true\n\n\t//visually indicates that 'this' button is selected\n\tpipe(\n\t\taddStyleToElem([\n\t\t\t['border', '1px solid #f0a400'],\n\t\t\t['color', '#f0a400'],\n\t\t])\n\t)(this)\n\n\t//disables clicking on other shipButtons while selected\n\t//prevents double selection\n\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought')\n\tif (superdreadnoughtBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t)(superdreadnoughtBttn)\n\n\tconst carrierBttn: Button = document.querySelector('.bttn-carrier')\n\tif (carrierBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleCarrierBttnClick)\n\t\t)(carrierBttn)\n\n\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship')\n\tif (battleshipBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleBattleshipBttnClick)\n\t\t)(battleshipBttn)\n\n\tconst frigateBttn: Button = document.querySelector('.bttn-frigate')\n\tif (frigateBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleFrigateBttnClick)\n\t\t)(frigateBttn)\n}\nexport { handleDestroyerBttnClick }\n","import { accumulatePlayerShipCoords } from '../components/accumulatePlayerShipCoords'\nimport { checkAllShipsInPlace } from '../components/checkAllShipsInPlace'\nimport { doesShipPlacementOverlap } from '../components/doesShipPlacementOverlap'\nimport { isCorrectNumberOfShips } from '../components/isCorrectNumberOfShips'\nimport {\n\taddAttributeToElem,\n\taddEvtListener,\n\taddStyleToElem,\n\taddTextToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../utilities/elementCreators'\nimport { Button, Carrier, Div, NodesDiv } from '../utilities/types'\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick'\nimport { handleCarrierMouseEnter } from './handleCarrierMouseEnter'\nimport { handleCarrierMouseLeave } from './handleCarrierMouseLeave'\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick'\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick'\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick'\n\nconst handleCarrierCellClick = function (this: HTMLDivElement, ev: MouseEvent) {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell')\n\n\t//grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector')\n\tconst currentAxis = axisSelector?.textContent\n\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//initializes the carrier object upon first call\n\tif (!localStorage.getItem('carrier')) {\n\t\tlocalStorage.setItem('carrier', JSON.stringify([]))\n\t}\n\n\tlet carrier: Carrier = JSON.parse(localStorage.getItem('carrier') ?? '')\n\n\tconst carrierCoords: string[] = []\n\n\tconst ship = 'carrier'\n\tconst amount = 'single'\n\n\t//for horizontal placement\n\tif (currentAxis === 'Axis-X' && isCorrectNumberOfShips(ship, amount)) {\n\t\t//grid boundary detection\n\t\tif (Number(currentX) > 6) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)')\n\t\t\treturn null\n\t\t}\n\n\t\t//overlap detection\n\t\tif (doesShipPlacementOverlap(4, currentAxis, currentX, currentY)) return null\n\n\t\t//places carrier on grid\n\t\tfor (let i = 0; i < 4; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t)\n\n\t\t\t//prevents duplicate letters being placed\n\t\t\tif (nextCell) nextCell.textContent = ''\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('C')\n\t\t\t)(nextCell)\n\n\t\t\tcarrierCoords.push(`${Number(currentX) + i},${currentY}`)\n\t\t}\n\n\t\t//prevents updating after first click\n\t\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t\t//update carrier object attributes\n\t\t\tcarrier = {\n\t\t\t\thead: carrierCoords[0],\n\t\t\t\tbody1: carrierCoords[1],\n\t\t\t\tbody2: carrierCoords[2],\n\t\t\t\ttail: carrierCoords[3],\n\t\t\t}\n\t\t}\n\n\t\tlocalStorage.setItem('isSingleCarrier', JSON.stringify(false))\n\t} //for vertical placement\n\telse if (currentAxis === 'Axis-Y' && isCorrectNumberOfShips(ship, amount)) {\n\t\t//grid boundary detection\n\t\tif (Number(currentY) > 6) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)')\n\t\t\treturn null\n\t\t}\n\n\t\t//overlap detection\n\t\tif (doesShipPlacementOverlap(4, currentAxis, currentX, currentY)) return null\n\n\t\t//places carrier on grid\n\t\tfor (let i = 0; i < 4; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t)\n\t\t\t//prevents duplicate letters being placed\n\t\t\tif (nextCell) nextCell.textContent = ''\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('C')\n\t\t\t)(nextCell)\n\n\t\t\tcarrierCoords.push(`${currentX},${Number(currentY) + i}`)\n\t\t}\n\n\t\t//prevents updating after first click\n\t\tif (isCorrectNumberOfShips(ship, amount)) {\n\t\t\t//updates carrier object attributes\n\t\t\tcarrier = {\n\t\t\t\thead: carrierCoords[0],\n\t\t\t\tbody1: carrierCoords[1],\n\t\t\t\tbody2: carrierCoords[2],\n\t\t\t\ttail: carrierCoords[3],\n\t\t\t}\n\t\t}\n\n\t\tlocalStorage.setItem('isSingleCarrier', JSON.stringify(false))\n\t}\n\n\t//stores carrier\n\tlocalStorage.setItem('carrier', JSON.stringify(carrier))\n\n\t//stores current ship coords to pool of all ship coords\n\taccumulatePlayerShipCoords(carrierCoords)\n\n\tif (isCorrectNumberOfShips(ship, amount) === true) {\n\t\t//after 'this' button has been clicked, sets the color to grey to visually indicate finished\n\t\tconst carrierBttn: Button = document.querySelector('.bttn-carrier')\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t])\n\t\t)(carrierBttn)\n\n\t\t//enables events on other shipButtons after carrier has been placed and sets color to green to visually indicate that they can be clicked if they have not been previously disabled after a click\n\t\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought')\n\t\tif (superdreadnoughtBttn && superdreadnoughtBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t\t)(superdreadnoughtBttn)\n\n\t\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship')\n\t\tif (battleshipBttn && battleshipBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleBattleshipBttnClick)\n\t\t\t)(battleshipBttn)\n\n\t\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer')\n\t\tif (destroyerBttn && destroyerBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleDestroyerBttnClick)\n\t\t\t)(destroyerBttn)\n\n\t\tconst frigateBttn: Button = document.querySelector('.bttn-frigate')\n\t\tif (frigateBttn && frigateBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleFrigateBttnClick)\n\t\t\t)(frigateBttn)\n\n\t\t//removes event listeners after single carrier has been placed\n\t\tplayerGameCells.forEach((player) => {\n\t\t\tpipe(\n\t\t\t\tremoveEvtListener('click')(handleCarrierCellClick),\n\t\t\t\tremoveEvtListener('mouseenter')(handleCarrierMouseEnter),\n\t\t\t\tremoveEvtListener('mouseleave')(handleCarrierMouseLeave)\n\t\t\t)(player)\n\t\t})\n\t}\n\n\t//if all ships placed, renders start button\n\tcheckAllShipsInPlace()\n}\nexport { handleCarrierCellClick }\n","import { Button, Div, NodesDiv } from '../utilities/types'\nimport {\n\taddEvtListener,\n\taddStyleToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../utilities/elementCreators'\nimport { handleCarrierCellClick } from './handleCarrierCellClick'\nimport { handleCarrierMouseEnter } from './handleCarrierMouseEnter'\nimport { handleCarrierMouseLeave } from './handleCarrierMouseLeave'\nimport { handleBattleshipBttnClick } from './handleBattleshipBttnClick'\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick'\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick'\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick'\n\nconst handleCarrierBttnClick = function (this: HTMLButtonElement, ev: MouseEvent) {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell')\n\n\t//disables button after clicking once\n\tthis.disabled = true\n\n\t//visually indicates that 'this' button is selected\n\tpipe(\n\t\taddStyleToElem([\n\t\t\t['border', '1px solid #f0a400'],\n\t\t\t['color', '#f0a400'],\n\t\t])\n\t)(this)\n\n\t//disables clicking on other shipButtons while selected\n\t//prevents double selection\n\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought')\n\tif (superdreadnoughtBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t)(superdreadnoughtBttn)\n\n\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship')\n\tif (battleshipBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleBattleshipBttnClick)\n\t\t)(battleshipBttn)\n\n\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer')\n\tif (destroyerBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleDestroyerBttnClick)\n\t\t)(destroyerBttn)\n\n\tconst frigateBttn: Button = document.querySelector('.bttn-frigate')\n\tif (frigateBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleFrigateBttnClick)\n\t\t)(frigateBttn)\n\n\t//assigns event listener to each player game cell after clicking superdreadnought button\n\tplayerGameCells.forEach((player) =>\n\t\tpipe(\n\t\t\taddEvtListener('click')(handleCarrierCellClick),\n\t\t\taddEvtListener('mouseenter')(handleCarrierMouseEnter),\n\t\t\taddEvtListener('mouseleave')(handleCarrierMouseLeave)\n\t\t)(player)\n\t)\n}\nexport { handleCarrierBttnClick }\n","import { accumulatePlayerShipCoords } from '../components/accumulatePlayerShipCoords'\nimport { checkAllShipsInPlace } from '../components/checkAllShipsInPlace'\nimport { doesShipPlacementOverlap } from '../components/doesShipPlacementOverlap'\nimport { isCorrectNumberOfShips } from '../components/isCorrectNumberOfShips'\nimport {\n\taddStyleToElem,\n\taddTextToElem,\n\taddAttributeToElem,\n\tremoveEvtListener,\n\tpipe,\n\taddEvtListener,\n} from '../utilities/elementCreators'\nimport { Div, NodesDiv, Battleship, Button } from '../utilities/types'\nimport { handleBattleshipMouseEnter } from './handleBattleshipMouseEnter'\nimport { handleBattleshipMouseLeave } from './handleBattleshipMouseLeave'\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick'\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick'\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick'\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick'\n\nconst handleBattleshipCellClick = function (this: HTMLDivElement, ev: MouseEvent) {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell')\n\n\t//grabs the current state of the axis button\n\tconst axisSelector = document.querySelector('.bttn-axisSelector')\n\tconst currentAxis = axisSelector?.textContent\n\n\t//grabs the current cell co-ordinate\n\tconst currentCell = this.dataset.cellplayer?.split(',')\n\tconst currentX = currentCell?.[0] ?? ''\n\tconst currentY = currentCell?.[1] ?? ''\n\n\t//initializes the ship object upon first call\n\tif (!localStorage.getItem('battleship')) {\n\t\tlocalStorage.setItem('battleship', JSON.stringify(''))\n\t}\n\tlet battleship: Battleship = JSON.parse(localStorage.getItem('battleship') ?? '')\n\n\tconst battleshipCoords: string[] = []\n\n\tconst ship = 'battleship'\n\tconst amount = 'single'\n\n\t//for horizontal placement\n\tif (currentAxis === 'Axis-X' && isCorrectNumberOfShips(ship, amount)) {\n\t\t//grid boundary detection\n\t\tif (Number(currentX) > 7) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)')\n\t\t\treturn null\n\t\t}\n\n\t\t//overlap detection\n\t\tif (doesShipPlacementOverlap(3, currentAxis, currentX, currentY)) return null\n\n\t\t//places battleship on the grid\n\t\tfor (let i = 0; i < 3; i += 1) {\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${Number(currentX) + i},${currentY}\"]`\n\t\t\t)\n\t\t\tif (nextCell) nextCell.textContent = ''\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('B')\n\t\t\t)(nextCell)\n\n\t\t\tbattleshipCoords.push(`${Number(currentX) + i},${currentY}`)\n\t\t}\n\n\t\t//prevents updating after first click\n\t\tif (isCorrectNumberOfShips(ship, 'single')) {\n\t\t\t//updates battleship object attributes\n\t\t\tbattleship = {\n\t\t\t\thead: battleshipCoords[0],\n\t\t\t\tbody: battleshipCoords[1],\n\t\t\t\ttail: battleshipCoords[2],\n\t\t\t}\n\t\t}\n\n\t\tlocalStorage.setItem('isSingleBattleship', JSON.stringify(false))\n\t} //for vertical placement\n\telse if (currentAxis === 'Axis-Y' && isCorrectNumberOfShips(ship, amount)) {\n\t\t//grid boundary detection\n\t\tif (Number(currentY) > 7) {\n\t\t\talert('Please stay within boundaries of the sector (｡•́︿•̀｡)')\n\t\t\treturn null\n\t\t}\n\n\t\t//overlap detection\n\t\tif (doesShipPlacementOverlap(3, currentAxis, currentX, currentY)) return null\n\n\t\tfor (let i = 0; i < 3; i += 1) {\n\t\t\t//places battleship on the grid\n\t\t\tconst nextCell: Div = document.querySelector(\n\t\t\t\t`[data-cellplayer=\"${currentX},${Number(currentY) + i}\"]`\n\t\t\t)\n\t\t\t//prevents duplicate letters being placed\n\t\t\tif (nextCell) nextCell.textContent = ''\n\n\t\t\tpipe(\n\t\t\t\taddAttributeToElem([['class', 'playerShipPresent player-gameCell']]),\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['color', '#f0a400'],\n\t\t\t\t\t['cursor', 'default'],\n\t\t\t\t]),\n\t\t\t\taddTextToElem('B')\n\t\t\t)(nextCell)\n\n\t\t\tbattleshipCoords.push(`${currentX},${Number(currentY) + i}`)\n\t\t}\n\n\t\t//prevents updating after first click\n\t\tif (isCorrectNumberOfShips(ship, 'single')) {\n\t\t\t//updates battleship object attributes\n\t\t\tbattleship = {\n\t\t\t\thead: battleshipCoords[0],\n\t\t\t\tbody: battleshipCoords[1],\n\t\t\t\ttail: battleshipCoords[2],\n\t\t\t}\n\t\t}\n\n\t\tlocalStorage.setItem('isSingleBattleship', JSON.stringify(false))\n\t}\n\n\t//stores battleship\n\tlocalStorage.setItem('battleship', JSON.stringify(battleship))\n\n\t//stores current ship coords to pool of all ship coords\n\taccumulatePlayerShipCoords(battleshipCoords)\n\n\tif (isCorrectNumberOfShips(ship, amount) === true) {\n\t\t//after 'this' button has been clicked, sets the color to grey to visually indicate finished\n\t\tconst battleshipBttn: Button = document.querySelector('.bttn-battleship')\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t])\n\t\t)(battleshipBttn)\n\n\t\t//enables events on other shipButtons after battleship has been placed and sets color to green to visually indicate that they can be clicked if they have not been previously disabled after a click\n\t\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought')\n\t\tif (superdreadnoughtBttn && superdreadnoughtBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t\t)(superdreadnoughtBttn)\n\n\t\tconst carrierBttn: Button = document.querySelector('.bttn-carrier')\n\t\tif (carrierBttn && carrierBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleCarrierBttnClick)\n\t\t\t)(carrierBttn)\n\n\t\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer')\n\t\tif (destroyerBttn && destroyerBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleDestroyerBttnClick)\n\t\t\t)(destroyerBttn)\n\n\t\tconst frigateBttn: Button = document.querySelector('.bttn-frigate')\n\t\tif (frigateBttn && frigateBttn.disabled !== true)\n\t\t\tpipe(\n\t\t\t\taddStyleToElem([\n\t\t\t\t\t['border', '1px solid #00f000'],\n\t\t\t\t\t['color', '#00f000'],\n\t\t\t\t\t['cursor', 'pointer'],\n\t\t\t\t]),\n\t\t\t\taddEvtListener('click')(handleFrigateBttnClick)\n\t\t\t)(frigateBttn)\n\n\t\t//removes event listeners after battleship has been placed\n\t\tplayerGameCells.forEach((player) => {\n\t\t\tpipe(\n\t\t\t\tremoveEvtListener('click')(handleBattleshipCellClick),\n\t\t\t\tremoveEvtListener('mouseenter')(handleBattleshipMouseEnter),\n\t\t\t\tremoveEvtListener('mouseleave')(handleBattleshipMouseLeave)\n\t\t\t)(player)\n\t\t})\n\t}\n\n\t//if all ships placed, renders start button\n\tcheckAllShipsInPlace()\n}\n\nexport { handleBattleshipCellClick }\n","import { Button, Div, NodesDiv } from '../utilities/types'\nimport {\n\taddEvtListener,\n\taddStyleToElem,\n\tpipe,\n\tremoveEvtListener,\n} from '../utilities/elementCreators'\n\nimport { handleBattleshipCellClick } from './handleBattleshipCellClick'\nimport { handleBattleshipMouseEnter } from './handleBattleshipMouseEnter'\nimport { handleBattleshipMouseLeave } from './handleBattleshipMouseLeave'\nimport { handleSuperdreadnoughtBttnClick } from './handleSuperdreadnoughtBttnClick'\nimport { handleCarrierBttnClick } from './handleCarrierBttnClick'\nimport { handleDestroyerBttnClick } from './handleDestroyerBttnClick'\nimport { handleFrigateBttnClick } from './handleFrigateBttnClick'\n\nconst handleBattleshipBttnClick = function (this: HTMLButtonElement, ev: MouseEvent) {\n\tconst playerGameCells: NodesDiv = document.querySelectorAll('.player-gameCell')\n\n\t//disables this button after clicking\n\tthis.disabled = true\n\n\t//visually indicates that 'this' button is selected\n\tpipe(\n\t\taddStyleToElem([\n\t\t\t['border', '1px solid #f0a400'],\n\t\t\t['color', '#f0a400'],\n\t\t])\n\t)(this)\n\n\t//disables clicking on other shipButtons while selected\n\t//prevents double selection\n\tconst superdreadnoughtBttn: Button = document.querySelector('.bttn-superdreadnought')\n\tif (superdreadnoughtBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleSuperdreadnoughtBttnClick)\n\t\t)(superdreadnoughtBttn)\n\n\tconst carrierBttn: Button = document.querySelector('.bttn-carrier')\n\tif (carrierBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleCarrierBttnClick)\n\t\t)(carrierBttn)\n\n\tconst destroyerBttn: Button = document.querySelector('.bttn-destroyer')\n\tif (destroyerBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleDestroyerBttnClick)\n\t\t)(destroyerBttn)\n\n\tconst frigateBttn: Button = document.querySelector('.bttn-frigate')\n\tif (frigateBttn)\n\t\tpipe(\n\t\t\taddStyleToElem([\n\t\t\t\t['border', '1px solid gainsboro'],\n\t\t\t\t['color', 'gainsboro'],\n\t\t\t\t['cursor', 'not-allowed'],\n\t\t\t]),\n\t\t\tremoveEvtListener('click')(handleFrigateBttnClick)\n\t\t)(frigateBttn)\n\n\t//assigns event listeners to each player game cell after clicking battleship button\n\tplayerGameCells.forEach((player) =>\n\t\tpipe(\n\t\t\taddEvtListener('click')(handleBattleshipCellClick),\n\t\t\taddEvtListener('mouseenter')(handleBattleshipMouseEnter),\n\t\t\taddEvtListener('mouseleave')(handleBattleshipMouseLeave)\n\t\t)(player)\n\t)\n}\nexport { handleBattleshipBttnClick }\n","import { handleAxisToggleClick } from '../events/handleAxisToggleClick'\nimport { handleBattleshipBttnClick } from '../events/handleBattleshipBttnClick'\nimport { handleCarrierBttnClick } from '../events/handleCarrierBttnClick'\nimport { handleDestroyerBttnClick } from '../events/handleDestroyerBttnClick'\nimport { handleFrigateBttnClick } from '../events/handleFrigateBttnClick'\nimport { handleSuperdreadnoughtBttnClick } from '../events/handleSuperdreadnoughtBttnClick'\nimport {\n\taddAttributeToElem,\n\taddEvtListener,\n\taddTextToElem,\n\tappendElemToParent,\n\telemCreator,\n\tpipe,\n} from '../utilities/elementCreators'\n\nconst renderShipSelectionBttns = function () {\n\tconst log = (i: unknown) => console.log('\\n', i, '\\n')\n\n\tconst main: HTMLElement | null = document.querySelector('.main')\n\n\tconst shipBttnsWrapper = elemCreator('div')(['shipBttns-wrapper'])\n\tappendElemToParent(main)(shipBttnsWrapper)\n\n\tconst shipsBttnContainer = elemCreator('div')(['shipsBttn-container'])\n\tappendElemToParent(shipBttnsWrapper)(shipsBttnContainer)\n\n\tpipe(\n\t\taddTextToElem('Superdreadnought'),\n\t\taddEvtListener('click')(handleSuperdreadnoughtBttnClick),\n\t\taddAttributeToElem([\n\t\t\t['type', 'button'],\n\t\t\t['value', 'superdreadnought'],\n\t\t]),\n\t\tappendElemToParent(shipsBttnContainer)\n\t)(elemCreator('button')(['bttn-superdreadnought']))\n\n\tpipe(\n\t\taddTextToElem('Carrier'),\n\t\taddEvtListener('click')(handleCarrierBttnClick),\n\t\taddAttributeToElem([\n\t\t\t['type', 'button'],\n\t\t\t['value', 'carrier'],\n\t\t]),\n\t\tappendElemToParent(shipsBttnContainer)\n\t)(elemCreator('button')(['bttn-carrier']))\n\n\tpipe(\n\t\taddTextToElem('Battleship'),\n\t\taddEvtListener('click')(handleBattleshipBttnClick),\n\t\taddAttributeToElem([\n\t\t\t['type', 'button'],\n\t\t\t['value', 'battleship'],\n\t\t]),\n\t\tappendElemToParent(shipsBttnContainer)\n\t)(elemCreator('button')(['bttn-battleship']))\n\n\tpipe(\n\t\taddTextToElem('Destroyer'),\n\t\taddEvtListener('click')(handleDestroyerBttnClick),\n\t\taddAttributeToElem([\n\t\t\t['type', 'button'],\n\t\t\t['value', 'destroyer'],\n\t\t]),\n\t\tappendElemToParent(shipsBttnContainer)\n\t)(elemCreator('button')(['bttn-destroyer']))\n\n\tpipe(\n\t\taddTextToElem('Frigate'),\n\t\taddEvtListener('click')(handleFrigateBttnClick),\n\t\taddAttributeToElem([\n\t\t\t['type', 'button'],\n\t\t\t['value', 'frigate'],\n\t\t]),\n\t\tappendElemToParent(shipsBttnContainer)\n\t)(elemCreator('button')(['bttn-frigate']))\n\n\t//axis selector button\n\tpipe(\n\t\taddEvtListener('click')(handleAxisToggleClick),\n\t\taddTextToElem('Axis-X'),\n\t\taddAttributeToElem([\n\t\t\t['type', 'button'],\n\t\t\t['value', 'axis-x'],\n\t\t]),\n\t\tappendElemToParent(shipBttnsWrapper)\n\t)(elemCreator('button')(['bttn', 'bttn-axisSelector']))\n}\nexport { renderShipSelectionBttns }\n","import { Div } from '../utilities/types'\nimport { renderPlayerBoard } from './renderPlayerBoard'\nimport { renderPlayerInfoScreen } from './renderPlayerInfoScreen'\nimport { renderShipSelectionBttns } from './renderShipSelectionBttns'\n\nconst renderGamePage = function (playerName_: string) {\n\tconst playerName = playerName_\n\n\t//removes main page content\n\tconst greetingsContainer = document.querySelector('.greetings-container')\n\tgreetingsContainer?.remove()\n\tconst formContainer: Div = document.querySelector('.form-container')\n\tformContainer?.remove()\n\n\t//renders pre-battle speech and ship placement functionality\n\trenderPlayerInfoScreen(playerName)\n\trenderShipSelectionBttns()\n\trenderPlayerBoard()\n}\nexport { renderGamePage }\n","import { renderGamePage } from '../components/renderGamePage'\n\nconst receiveFormName = function (this: HTMLFormElement, ev: SubmitEvent) {\n\tev.preventDefault()\n\n\tconst formData = new FormData(this)\n\tconst playerName = formData.get('form-name-input')?.toString() ?? ''\n\n\t//stores playerName to use for battle texts\n\tif (!localStorage.getItem('playerName')) {\n\t\tlocalStorage.setItem('playerName', JSON.stringify(playerName))\n\t}\n\n\trenderGamePage(playerName)\n}\nexport { receiveFormName }\n","import { receiveFormName } from '../events/receiveFormName'\nimport { Form } from '../utilities/types'\n\nconst addEvtListenerToForm = function () {\n\tconst formName: Form = document.querySelector('#form-name')\n\n\tformName?.addEventListener('submit', receiveFormName)\n}\nexport { addEvtListenerToForm }\n","import { addEvtListenerToForm } from './components/addEvtListenerToForm'\n\nconst mainApp = function () {\n\taddEvtListenerToForm()\n\n\t//clears storage upon refresh\n\tlocalStorage.clear()\n}\ndocument.addEventListener('DOMContentLoaded', mainApp)\n"],"names":["$30027ad0e4887c23$export$ab234f429913b447","elem_","class_","element","document","createElement","reduce","elem","currClass","classList","add","$30027ad0e4887c23$export$7ea4f87d22b0568c","attrVals_","curr","length","setAttribute","$30027ad0e4887c23$export$16b24d40747c589f","stylePropVals_","style","setProperty","$30027ad0e4887c23$export$a0738db72e91b08b","text_","textNode","createTextNode","appendChild","$30027ad0e4887c23$export$ab5f4f3ddf8c0bd5","parent_","child_","$30027ad0e4887c23$export$bbf09bbccec571f8","evt_","handleEvt_","addEventListener","$30027ad0e4887c23$export$b51bdbb03847b6fd","removeEventListener","$30027ad0e4887c23$export$a4627e546088548d","funcs","value","res","func","$9656b24d10393639$export$5aee78e2b4bffb58","main","querySelector","bothBoardsContainer","playerBoardWrapper","playerBoardContainer","i","j","$a713200fdf098910$export$bfd70363bc29a96f","playerName_","infoScreenWrapper","infoScreenContainer","$1b86f87e564ffe19$export$f36d0106563543aa","ev","currentText","this","textContent","$fcc192194d2497f0$export$ca21c4bc8611e8c3","currentShipCoords_","ref","playerShipsCoords","JSON","parse","localStorage","getItem","forEach","coord","push","setItem","stringify","$f7475a5a1c8f2c01$export$b0ffe2114b99c23a","compShipPresent","querySelectorAll","compShipNotPresent","cell","$b3f6c947e5591411$export$4cb529112a62166c","$4b50899ee4c93005$export$6194af07769efa8f","$67133f8152b1bc53$export$13063a66817085c1","clear","self","location","reload","$eaca5204222bd8b2$export$2a04939a45ef1558","winner_","winnerContainer","$a4aaffb821d7f49a$export$cc214a32faf32742","hitsOnComp","missesByPlayer","playerShipDestroyed","hitsOnPlayer","missesByComp","compShipDestroyed","$b5ab0358be916475$export$b7678bf29b7f2cb8","currentCellCoord_","currentShipSymbol_","towardsCombatant_","hitOrMiss_","randHitsStrings","hitsPrecursorString","Math","floor","random","havenShipNames","ref1","manticoreShipNames","ref2","playerName","battleMessageElem","ref3","compSuperdreadnought","Object","values","ref4","compCarrier","ref5","compBattleship","compDestroyers","ref6","destroyer","flat","compFrigates","ref7","frigate","includes","superdreadnought","cruiser","battleship","ref8","destroyer1","_","console","log","destroyer1Coords","shipPartCoords","destroyers","ref9","frigate1","frigate1Coords","frigates","ref10","ref11","compShipsCoords","totalHitsOnCompShips","_cellcomp","currentCellCoord","dataset","cellcomp","_textContent","currentShipSymbol","scrollHeight","scroll","top","left","behavior","color","compShipsHitCoords","setTimeout","$f0030aba914cdee9$export$aa28f87fe2810ba7","$960a38e200693bd5$export$4eac76923b5df234","compAttackGuess_","totalHitsOnPlayerShips","playerShipCell","prevCompMissOnPlayerCoord","prevCompMissOnPlayerCell","$4dc90b4794bbb87b$export$3cbf51b50c9fa146","compAttackGuess","compAttackGuesses","isUniqueCoordinate","prevPlayerMissOnCompCoord","prevPlayerMissOnCompCell","$55dd3a213f15cc62$export$2c39ec98fcf3be7f","haven","superdreadnoughts","cruisers","battleships","manticore","$23a6704c8d0de08e$export$45fb265278a22bf","compBoardWrapper","compBoardContainer","$2b7d4fe39e46434e$export$b926bf954c3027b8","compShipsPlacementChoice_","entries","ship1","shipObj","toUpperCase","slice","Array","isArray","ship","shipSection","sectionCoords","shipCell","contains","$0cad068565200637$export$a7e610484415ceda","compShipsPlacementChoicesArr_","compShipsPlacementChoicesArr","randCompShipPlacement","$6ef9a07f48b644e7$export$a5e5490ff29c2bf8","head","body1","body2","body3","tail","carrier","body","$bd1719a91acab703$export$1d9c7a55f4f9bdd6","remove","shipBttnsWrapper","shipNames_","polity","shipTypes","Map","shipType","shipNamesArr","tempShipNamesArr","set","fromEntries","$b2dcbf9a8645d66b$export$c73b42c5fa0e8ca","shipsBttnContainer","axisSelectorBttn","$8bd79cc02df79e3c$export$b9edf82f7217af53","$dee572ccb030bffc$export$df0b34f7a1711d6e","shipLength_","currentAxis_","currentX_","currentY_","Number","alert","$cfdd0bfc90615c04$export$60ef149727fdc3c3","ship_","amount_","amount","shipObjArr","$4babecb880b51034$export$d1f5ad06fdc2fb11","axisSelector","currentAxis","currentCell","cellplayer","split","currentX","currentY","nextCell","i1","$4e2cd2c66e701100$export$d3ed15a58a454154","$e18eb20411f88320$export$ab965cac886214bf","$299832f8825980c3$export$9c424384d47cef4c","$967a3ca684572b32$export$e1d143c43bee4d71","$d91ab168b059408c$export$d89e7321d85f00c1","$cce440cc25b8842a$export$15709db4defcbc15","$36912fb464cafae3$export$3999f8bfc89fd956","$901aafe51e9cfa49$export$a4dcd7bbdd403178","$c0bb39fa155bfc0b$export$4f935e7b391bebeb","$30051a24a17f6f9d$export$2dc4833dd416dbdf","playerGameCells","superdreadnoughtCoords","superdreadnoughtBttn","carrierBttn","disabled","$8ea2844f2eabbaf7$export$162318dd237821cf","battleshipBttn","$a76a8afbc2d21608$export$86e91ff5d2bf5d1c","destroyerBttn","$070d04e115892d7d$export$af580c7651a8823f","frigateBttn","$5d12b0ece76ae55b$export$939efa060bd435ff","player","$5d1b1073e77e6a89$export$c09198001c3a0eb3","$6bfbdcf0d44459de$export$3814f9598c559a50","frigateCoords","$f7887042bf747f4e$export$fe4f54860152613b","destroyerCoords","$42791c5eec8f478c$export$849a28534b3b3c16","carrierCoords","$52e92a1b95ed5616$export$bc71519a712eba9e","battleshipCoords","$5e231e16cf1a043f$export$5e623f9d64e8b4bb","$1357a9e7c69fa6c1$export$9ed765b4e65a9bff","greetingsContainer","formContainer","$2238eee871f1a570$export$4d31dac241a83392","preventDefault","FormData","get","toString","$2c804a6225d645e4$export$aee607452e82838a","formName"],"version":3,"file":"index.8c93f308.js.map"}